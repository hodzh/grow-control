{"version":3,"sources":["./src/app/components/settings/compote-list/compote-list.component.html","./src/app/shared/choose-dialog/choose-dialog.component.scss","./src/app/store/dashboard/dashboard.effects.ts","./src/app/components/access-control/camshot-slider/camshot-slider.service.ts","./src/app/pipes/date-time.pipe.ts","./src/app/components/settings/pump-list/pump-list.component.ts","./src/app/platform/android/android-permissions.service.ts","./src/app/components/settings/settings-routing.module.ts","./src/app/components/settings/settings.module.ts","./src/app/components/dashboard/status/status.component.ts","./src/app/components/config/config-routing.module.ts","./src/app/components/settings/dose-list/dose/dose.component.scss","./src/app/components/settings/settings.component.ts","./src/app/components/settings/pump-list/pump/pump.component.scss","./src/app/components/config/database-config/database-config.component.html","./src/app/components/config/select-bt-device/select-bt-device.module.ts","./src/app/components/config/device-monitor/device-monitor.module.ts","./src/app/services/camera/camera.service.ts","./src/app/components/dashboard/status/status.component.html","./src/app/components/config/device-monitor/device-monitor.component.html","./src/app/components/settings/pump-list/pump/pump.component.ts","./src/app/components/settings/timer-list/timer/timer.component.ts","./src/app/store/monitor/monitor.effects.ts","./src/app/components/settings/settings.component.scss","./src/app/components/config/device-monitor/device-monitor.component.ts","./src/app/components/settings/compote-list/compote/compote.component.ts","./src/app/components/dashboard/status/status.component.scss","./src/app/components/dashboard/dashboard.module.ts","./src/app/components/access-control/camshot-slider/camshot-slider.component.ts","./src/app/components/dev/access-control/dev-access-control.component.html","./src/app/services/storage/local-storage.service.ts","./src/app/platform/android/android-bluetooth.service.ts","./src/app/components/dev/access-control/dev-access-control.module.ts","./src/app/components/log/log-routing.module.ts","./src/app/platform/browser/ble/browser-bluetooth.service.ts","./src/app/components/access-control/camshots/camshots.module.ts","./src/app/components/access-control/episode/episode.component.html","./src/app/model/device-response-type.ts","./src/app/components/settings/dose-list/dose-list.component.ts","./src/app/components/settings/compote-list/compote/compote.component.html","./src/app/components/settings/timer-list/timer/timer.component.html","./src/app/components/settings/compote-list/compote-daily/compote-daily.component.scss","./src/app/components/log/log-filter/log-filter.component.html","./src/app/components/settings/program-list/program/program.component.html","./src/app/components/config/config.module.ts","./src/app/components/settings/pin-assignment/pin-assignment.component.scss","./src/app/store/dashboard/dashboard-store.module.ts","./src/app/components/calibrate/calibrate.module.ts","./src/environments/environment.ts","./src/app/components/access-control/camshot/camshot.module.ts","./src/app/components/config/database-config/database-config.module.ts","./src/app/components/dev/device-simulate.sevice.ts","./src/app/store/settings/settings-store.module.ts","./src/app/components/calibrate/calibrate-dose/calibrate-dose.component.html","./src/app/components/log/log.component.ts","./src/app/shared/select-index/select-index.component.html","./src/app/components/settings/schedule-list/schedule/schedule.component.scss","./src/app/components/monitor/monitor.component.scss","./src/app/components/calibrate/calibrate-flow-sensor/calibrate-flow-sensor.component.html","./src/app/components/settings/schedule-list/schedule-list.module.ts","./src/app/shared/select-index/select-index.service.ts","./src/app/components/config/select-bt-device/select-bt-device.service.ts","./src/app/components/settings/program-list/program-list.component.ts","./src/app/services/connect/connect.service.ts","./src/app/components/manual-control/manual-control.component.html","./src/app/components/settings/pump-list/pump-list.module.ts","./src/app/shared/day-time/day-time.component.html","./src/app/store/connect/connect-store.module.ts","./src/app/components/log/log.component.scss","./src/app/model/device-info.ts","./src/app/shared/page/page.component.scss","./src/app/components/dev/access-control/dev-access-control.component.scss","./src/app/components/settings/schedule-list/schedule-list.component.scss","./src/app/platform/browser/browser.module.ts","./src/app/components/config/config.component.scss","./src/app/components/config/config.component.ts","./src/app/components/log/log-filter/log-filter.component.scss","./src/app/platform/browser/browser-connect.service.ts","./src/app/components/settings/schedule-list/schedule/schedule.module.ts","./src/app/components/access-control/camshot-slider/camshot-slider.component.scss","./src/app/components/calibrate/calibrate-flow-sensor/calibrate-flow-sensor.component.ts","./src/app/services/connect/device-response-deserializer.ts","./src/app/components/access-control/camshot-slider/camshot-slider.component.html","./src/app/store/access-control/access-control.reducer.ts","./src/app/components/settings/pin-assignment/pin-select/pin-select.component.html","./src/app/components/settings/schedule-list/schedule/schedule.component.html","./src/app/shared/page/page.module.ts","./src/app/shared/page/page.component.ts","./src/app/shared/day-time/day-time.module.ts","./src/app/components/settings/pump-list/pump-list.component.html","./src/app/services/open-cv/open-cv.service.ts","./src/app/store/config/config.reducer.ts","./src/app/components/settings/program-list/program/date-day.pipe.ts","./src/app/app-config.ts","./src/app/components/monitor/monitor.component.html","./src/app/components/settings/timer-list/timer-list.component.html","./src/app/shared/choose-dialog/choose-dialog.component.ts","./src/app/platform/android/android.module.ts","./src/app/components/settings/dose-list/dose/dose.component.html","./src/app/components/settings/mixer-list/mixer/mixer.component.html","./src/app/components/config/select-bt-device/select-bt-device.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/calibrate/calibrate-routing.module.ts","./src/app/components/settings/pump-list/pump/pump.component.html","./src/app/components/settings/compote-list/compote/compote.module.ts","./src/app/store/config/config-store.module.ts","./src/app/components/settings/mixer-list/mixer-list.module.ts","./src/app/components/settings/mixer-list/mixer-list.component.scss","./src/app/store/access-control/access-control.effects.ts","./src/app/platform/browser/serial/browser-serial.service.ts","./src/app/components/settings/dose-list/dose-list.module.ts","./src/app/components/monitor/monitor.component.ts","./src/app/components/settings/dose-list/dose-list.component.html","./src/app/components/access-control/access-control-routing.module.ts","./src/app/services/connect/connect.module.ts","./src/app/components/calibrate/calibrate-dose/calibrate-dose.module.ts","./src/app/shared/day-time/day-time.component.ts","./src/app/components/settings/timer-list/timer-list.component.scss","./src/app/components/settings/schedule-list/schedule-list.component.html","./src/app/components/monitor/monitor-routing.module.ts","./src/app/components/config/access-control-config/access-control-config.component.ts","./src/app/components/log/log-filter/log-filter.module.ts","./src/app/components/settings/compote-list/compote-daily/compote-daily.module.ts","./src/app/store/connect/connect.effects.ts","./src/app/components/dashboard/time-chart/time-chart.component.ts","./src/app/components/config/database-config/database-config.component.scss","./src/app/components/settings/mixer-list/mixer/mixer.component.ts","./src/app/components/monitor/monitor.module.ts","./src/app/components/dev/dev.component.html","./src/app/components/calibrate/calibrate-flow-sensor/calibrate-flow-sensor.module.ts","./src/app/model/date-time.ts","./src/app/components/calibrate/calibrate-flow-sensor/calibrate-flow-sensor.component.scss","./src/app/components/dashboard/time-chart/time-chart.module.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/model/device-parts.ts","./src/app/app.component.ts","./src/app/components/log/log.module.ts","./src/app/services/connect/device-request-serializer.ts","./src/app/components/dashboard/time-chart/time-chart.component.scss","./src/app/store/log/log.effects.ts","./src/app/components/settings/dose-list/dose/dose.module.ts","./src/app/components/config/monitor-config/monitor-config.component.html","./src/app/components/config/database-config/database-config.component.ts","./src/app/components/access-control/camshots/camshots.component.scss","./src/app/components/log/log.component.html","./src/app/components/settings/settings.component.html","./src/app/components/dashboard/time-chart/time-chart.component.html","./src/app/shared/select-index/select-index.component.scss","./src/app/components/dashboard/dashboard-routing.module.ts","./src/app/app.component.html","./src/app/components/dev/dev.module.ts","./src/app/shared/choose-dialog/choose-dialog.service.ts","./src/app/model/device-io.ts","./src/app/components/settings/pin-assignment/pin-select/pin-select.module.ts","./src/app/components/settings/program-list/program-list.component.html","./src/app/components/dev/dev.component.scss","./src/app/components/settings/timer-list/timer-list.component.ts","./src/app/components/access-control/episode/episode.component.ts","./src/app/components/manual-control/manual-control.component.ts","./src/app/services/connect/message-to-string.ts","./src/app/components/config/access-control-config/access-control-config.component.scss","./src/app/components/manual-control/manual-control.module.ts","./src/app/components/settings/mixer-list/mixer/mixer.module.ts","./src/app/components/settings/pin-assignment/pin-assignment.component.ts","./src/app/model/connect-status.ts","./src/app/app.module.ts","./src/app/pipes/memory.pipe.ts","./src/app/components/calibrate/calibrate.component.ts","./src/app/shared/day-time/day-time.component.scss","./src/app/components/settings/program-list/program-list.module.ts","./src/app/services/open-cv/open-cv.module.ts","./src/app/components/manual-control/manual-control-routing.module.ts","./src/app/platform/device-connect.ts","./src/app/components/settings/program-list/program/bits.pipe.ts","./src/app/components/settings/program-list/program-list.component.scss","./src/app/services/storage/storage.module.ts","./src/app/components/access-control/camshots/camshots.component.html","./src/app/store/log/log-store.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/components/settings/compote-list/compote-daily/compote-daily.component.html","./src/app/store/dashboard/dashboard.reducer.ts","./src/app/services/camera/camera.module.ts","./src/app/components/access-control/camshot/camshot.component.scss","./src/app/components/settings/pin-assignment/pin-assignment.component.html","./src/app/components/dashboard/status/status.module.ts","./src/app/components/dashboard/dashboard.component.scss","./src/app/components/settings/dose-list/dose-list.component.scss","./src/app/components/calibrate/calibrate-dose/calibrate-dose.component.ts","./src/app/components/access-control/access-control.component.ts","./src/app/components/settings/compote-list/compote-list.component.scss","./src/app/components/manual-control/manual-control.component.scss","./src/app/components/settings/dose-list/dose/dose.component.ts","./src/app/model/device-request-type.ts","./src/app/components/settings/pin-assignment/pin-assignment.module.ts","./src/app/services/access-control/access-control-service.module.ts","./src/app/store/access-control/access-control-store.module.ts","./src/app/services/access-control/access-control.service.ts","./src/app/shared/select-index/select-index.module.ts","./src/app/shared/page/bt-status-icon.pipe.ts","./src/app/components/config/monitor-config/monitor-config.module.ts","./src/app/store/monitor/monitor.reducer.ts","./src/app/pipes/pipes.module.ts","./src/app/store/settings/settings.reducer.ts","./src/app/services/storage/db.service.ts","./src/app/components/config/access-control-config/access-control-config.component.html","./src/app/components/settings/mixer-list/mixer-list.component.ts","./src/app/components/config/device-monitor/device-monitor.component.scss","./src/app/components/settings/compote-list/compote-list.module.ts","./src/app/components/settings/program-list/program/program.component.scss","./src/app/components/settings/pin-assignment/pin-select/pin-select.component.ts","./src/app/components/access-control/episode/episode.module.ts","./src/app/components/config/select-bt-device/select-bt-device.component.scss","./src/app/components/settings/pump-list/pump/pump.module.ts","./src/app/shared/page/page.component.html","./src/app/model/default-settings.ts","./src/app/components/access-control/camshot/camshot.component.ts","./src/app/components/settings/program-list/program/program.component.ts","./src/app/components/settings/schedule-list/schedule/schedule.component.ts","./src/app/shared/choose-dialog/choose-dialog.component.html","./src/app/store/monitor/monitor-store.module.ts","./src/app/components/access-control/episode/episode.component.scss","./src/app/components/settings/mixer-list/mixer/mixer.component.scss","./src/app/model/device-io-meta.ts","./src/app/store/connect/connect.reducer.ts","./src/app/components/access-control/access-control.component.html","./src/app/components/config/config.component.html","./src/app/store/config/config.effects.ts","./src/app/pipes/times.pipe.ts","./src/app/components/access-control/access-control.module.ts","./src/app/components/settings/compote-list/compote/compote.component.scss","./src/app/components/dev/dev.component.ts","./src/app/components/settings/schedule-list/schedule-list.component.ts","./src/app/components/log/log-filter/log-filter.component.ts","./src/app/components/access-control/camshot/camshot.component.html","./src/app/components/calibrate/calibrate.component.html","./src/app/components/settings/compote-list/compote-daily/compote-daily.component.ts","./src/app/components/config/access-control-config/access-control-config.module.ts","./src/app/platform/mock/mock.module.ts","./src/app/model/device-config.ts","./src/app/components/settings/program-list/program/program.module.ts","./src/app/platform/app-platform.module.ts","./src/app/components/settings/pin-assignment/pin-select/pin-select.component.scss","./src/app/platform/mock/mock-bluetooth.service.ts","./src/app/components/settings/pump-list/pump-list.component.scss","./src/app/store/log/log.reducer.ts","./src/app/shared/select-index/select-index.component.ts","./src/app/components/calibrate/calibrate-dose/calibrate-dose.component.scss","./src/app/components/dev/dev-routing.module.ts","./src/app/components/config/monitor-config/monitor-config.component.scss","./src/app/components/settings/mixer-list/mixer-list.component.html","./src/app/app-routing.module.ts","./src/app/components/config/monitor-config/monitor-config.component.ts","./src/app/components/dev/access-control/dev-access-control.component.ts","./src/app/components/config/select-bt-device/select-bt-device.component.html","./src/app/model/device-status.ts","./src/app/shared/choose-dialog/choose-dialog.module.ts","./src/app/components/settings/compote-list/compote-list.component.ts","./src/app/components/access-control/camshot-slider/camshot-slider.module.ts","./src/app/components/calibrate/calibrate.component.scss","./src/app/components/settings/timer-list/timer/timer.component.scss","./src/app/components/access-control/access-control.component.scss","./src/app/app.component.scss","./src/app/store/settings/settings.effects.ts","./src/main.ts","./src/app/components/access-control/camshots/camshots.component.ts","./src/app/components/settings/timer-list/timer/timer.module.ts","./src/app/components/settings/timer-list/timer-list.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let compote of compotes$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-compote\\n        [compote]=\\\"compote\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        [soils]=\\\"soils$ | async\\\"\\n        (compoteDailyChange)=\\\"onDailyChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n        (add)=\\\"onAddDaily(index)\\\"\\n      ></app-compote>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","export default \".mat-dialog-content {\\n  min-height: 4em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxjaG9vc2UtZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtBQUNGIiwiZmlsZSI6ImNob29zZS1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy1jb250ZW50IHtcbiAgbWluLWhlaWdodDogNGVtO1xufVxuIl19 */\";","import { Injectable } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { concat, EMPTY, from, merge, Observable, of, timer } from 'rxjs';\nimport { filter, map, mergeMap, switchMap, take } from 'rxjs/operators';\nimport {\n  ActionDashboardSyncTime,\n  ActionDashboardUpdateStatus,\n  ActionDashboardUpdateTemp,\n  ActionDashboardUpdateTime,\n  DashboardActionTypes,\n} from './dashboard.reducer';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport { DbService } from '../../services/storage/db.service';\nimport { ActionConnectRequest, ActionConnectResponse, ConnectActionTypes } from '../connect/connect.reducer';\nimport { dateToDateTime } from '../../model/date-time';\nimport { DeviceState, FertigateState } from '../../model/device-status';\nimport { selectorMonitorConfig } from '../config/config.reducer';\nimport { DeviceResponseTemp, DeviceResponseTime } from '../../auto/device-response';\nimport { DeviceRequestSetTime } from '../../auto/device-request';\n\n@Injectable()\nexport class DashboardEffects {\n  constructor(\n    private actions$: Actions<Action>,\n    private store: Store<any>,\n    private db: DbService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(DashboardActionTypes.INIT))\n      .pipe(switchMap(() => this.store.pipe(select(selectorMonitorConfig))))\n      .pipe(switchMap((monitorConfig) => merge(\n        monitorConfig.time.enable ? timer(0, monitorConfig.time.interval)\n          .pipe(switchMap(() => this.getTime())) : EMPTY,\n        monitorConfig.temp.enable ? timer(0, monitorConfig.temp.interval)\n          .pipe(switchMap(() => this.getTemp())) : EMPTY,\n        monitorConfig.status.enable ? timer(0, monitorConfig.status.interval)\n          .pipe(switchMap(() => this.getStatus())) : EMPTY,\n      )))\n      ;\n  }\n\n  @Effect({ dispatch: false })\n  updateTemp(): Observable<any> {\n    return this.actions$\n      .pipe(ofType<ActionDashboardUpdateTemp>(DashboardActionTypes.UPDATE_TEMP))\n      .pipe(mergeMap(action => from(this.db.logTemp(action.payload))))\n      ;\n  }\n\n  @Effect({ dispatch: false })\n  updateStatus(): Observable<any> {\n    return this.actions$\n      .pipe(ofType<ActionDashboardUpdateStatus>(DashboardActionTypes.UPDATE_STATUS))\n      .pipe(filter(action => action.payload.state === DeviceState.fertigate &&\n        action.payload.cmdState === FertigateState.irrigate))\n      .pipe(mergeMap(action => from(this.db.logFlow(action.payload.flow))))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  syncTime(): Observable<Action> {\n    return this.actions$\n      .pipe(ofType<ActionDashboardSyncTime>(DashboardActionTypes.SYNC_TIME))\n      .pipe(map(action => new ActionConnectRequest<DeviceRequestSetTime>({\n        type: DeviceRequestType.setTime,\n        payload: {\n          ...dateToDateTime(new Date()),\n        },\n      })))\n      ;\n  }\n\n  private getTime(): Observable<Action> {\n    return concat(\n      of(new ActionConnectRequest({ type: DeviceRequestType.getTime, payload: { fake: 0 } })),\n      this.actions$\n        .pipe(ofType<ActionConnectResponse>(ConnectActionTypes.RESPONSE))\n        .pipe(filter(action => action.payload.type === DeviceResponseType.time))\n        .pipe(take(1))\n        .pipe(map((action: ActionConnectResponse<DeviceResponseTime>) =>\n          new ActionDashboardUpdateTime(action.payload.payload))),\n    );\n  }\n\n  private getTemp(): Observable<Action> {\n    return concat(\n      of(new ActionConnectRequest({ type: DeviceRequestType.getTemp, payload: { fake: 0 } })),\n      this.actions$\n        .pipe(ofType<ActionConnectResponse>(ConnectActionTypes.RESPONSE))\n        .pipe(filter(action => action.payload.type === DeviceResponseType.temp))\n        .pipe(take(1))\n        .pipe(map((action: ActionConnectResponse<DeviceResponseTemp>) =>\n          new ActionDashboardUpdateTemp(action.payload.payload.value))),\n    );\n  }\n\n  private getStatus(): Observable<Action> {\n    return concat(\n      of(new ActionConnectRequest({ type: DeviceRequestType.getStatus, payload: { fake: 0 } })),\n      this.actions$\n        .pipe(ofType<ActionConnectResponse>(ConnectActionTypes.RESPONSE))\n        .pipe(filter(action => action.payload.type === DeviceResponseType.status))\n        .pipe(take(1))\n        .pipe(map(action => new ActionDashboardUpdateStatus(action.payload.payload as any))),\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {CamshotSliderComponent} from './camshot-slider.component';\n\n@Injectable()\nexport class CamshotSliderService {\n  constructor(\n    public readonly dialog: MatDialog,\n  ) {\n  }\n\n  show(key: number): Observable<number> {\n    const dialogRef = this.dialog.open(CamshotSliderComponent,\n      {data: {key}, width: '100vw', height: '100vh'});\n    return dialogRef.afterClosed();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DateTime } from '../model/date-time';\n\n@Pipe({\n  name: 'dateTime',\n  pure: true,\n})\nexport class DateTimePipe implements PipeTransform {\n\n  transform(value: DateTime, ...args: any[]): string {\n    return `${1970 + value.year}-${('0' + value.month).slice(-2)}-${\n      ('0' + value.day).slice(-2)} ${('0' + value.hour).slice(-2)}:${\n      ('0' + value.minute).slice(-2)}:${('0' + value.second).slice(-2)}`;\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeName,\n  ActionSettingsChangePump, ActionSettingsLoadProgram, ActionSettingsLoadPump,\n  ActionSettingsRemovePump,\n  selectorNames,\n  selectorPumps,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Pump} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-pump-list',\n  templateUrl: './pump-list.component.html',\n  styleUrls: ['./pump-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PumpListComponent implements OnInit {\n  pumps$: Observable<Pump[]>;\n  names$: Observable<string[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.pumps$ = this.store.pipe(select(selectorPumps));\n    this.names$ = this.store.pipe(select(selectorNames('pump')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadPump());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'pump', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangePump({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemovePump(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport enum AndroidPermissions {\n  ACCESS_CHECKIN_PROPERTIES = 'android.permission.ACCESS_CHECKIN_PROPERTIES',\n  ACCESS_COARSE_LOCATION = 'android.permission.ACCESS_COARSE_LOCATION',\n  ACCESS_FINE_LOCATION = 'android.permission.ACCESS_FINE_LOCATION',\n  ACCESS_LOCATION_EXTRA_COMMANDS = 'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',\n  ACCESS_MOCK_LOCATION = 'android.permission.ACCESS_MOCK_LOCATION',\n  ACCESS_NETWORK_STATE = 'android.permission.ACCESS_NETWORK_STATE',\n  ACCESS_SURFACE_FLINGER = 'android.permission.ACCESS_SURFACE_FLINGER',\n  ACCESS_WIFI_STATE = 'android.permission.ACCESS_WIFI_STATE',\n  ACCOUNT_MANAGER = 'android.permission.ACCOUNT_MANAGER',\n  ADD_VOICEMAIL = 'com.android.voicemail.permission.ADD_VOICEMAIL',\n  AUTHENTICATE_ACCOUNTS = 'android.permission.AUTHENTICATE_ACCOUNTS',\n  BATTERY_STATS = 'android.permission.BATTERY_STATS',\n  BIND_ACCESSIBILITY_SERVICE = 'android.permission.BIND_ACCESSIBILITY_SERVICE',\n  BIND_APPWIDGET = 'android.permission.BIND_APPWIDGET',\n  BIND_CARRIER_MESSAGING_SERVICE = 'android.permission.BIND_CARRIER_MESSAGING_SERVICE',\n  BIND_DEVICE_ADMIN = 'android.permission.BIND_DEVICE_ADMIN',\n  BIND_DREAM_SERVICE = 'android.permission.BIND_DREAM_SERVICE',\n  BIND_INPUT_METHOD = 'android.permission.BIND_INPUT_METHOD',\n  BIND_NFC_SERVICE = 'android.permission.BIND_NFC_SERVICE',\n  BIND_NOTIFICATION_LISTENER_SERVICE = 'android.permission.BIND_NOTIFICATION_LISTENER_SERVICE',\n  BIND_PRINT_SERVICE = 'android.permission.BIND_PRINT_SERVICE',\n  BIND_REMOTEVIEWS = 'android.permission.BIND_REMOTEVIEWS',\n  BIND_TEXT_SERVICE = 'android.permission.BIND_TEXT_SERVICE',\n  BIND_TV_INPUT = 'android.permission.BIND_TV_INPUT',\n  BIND_VOICE_INTERACTION = 'android.permission.BIND_VOICE_INTERACTION',\n  BIND_VPN_SERVICE = 'android.permission.BIND_VPN_SERVICE',\n  BIND_WALLPAPER = 'android.permission.BIND_WALLPAPER',\n  BLUETOOTH = 'android.permission.BLUETOOTH',\n  BLUETOOTH_ADMIN = 'android.permission.BLUETOOTH_ADMIN',\n  BLUETOOTH_PRIVILEGED = 'android.permission.BLUETOOTH_PRIVILEGED',\n  BODY_SENSORS = 'android.permission.BODY_SENSORS',\n  BRICK = 'android.permission.BRICK',\n  BROADCAST_PACKAGE_REMOVED = 'android.permission.BROADCAST_PACKAGE_REMOVED',\n  BROADCAST_SMS = 'android.permission.BROADCAST_SMS',\n  BROADCAST_STICKY = 'android.permission.BROADCAST_STICKY',\n  BROADCAST_WAP_PUSH = 'android.permission.BROADCAST_WAP_PUSH',\n  CALL_PHONE = 'android.permission.CALL_PHONE',\n  CALL_PRIVILEGED = 'android.permission.CALL_PRIVILEGED',\n  CAMERA = 'android.permission.CAMERA',\n  CAPTURE_AUDIO_OUTPUT = 'android.permission.CAPTURE_AUDIO_OUTPUT',\n  CAPTURE_SECURE_VIDEO_OUTPUT = 'android.permission.CAPTURE_SECURE_VIDEO_OUTPUT',\n  CAPTURE_VIDEO_OUTPUT = 'android.permission.CAPTURE_VIDEO_OUTPUT',\n  CHANGE_COMPONENT_ENABLED_STATE = 'android.permission.CHANGE_COMPONENT_ENABLED_STATE',\n  CHANGE_CONFIGURATION = 'android.permission.CHANGE_CONFIGURATION',\n  CHANGE_NETWORK_STATE = 'android.permission.CHANGE_NETWORK_STATE',\n  CHANGE_WIFI_MULTICAST_STATE = 'android.permission.CHANGE_WIFI_MULTICAST_STATE',\n  CHANGE_WIFI_STATE = 'android.permission.CHANGE_WIFI_STATE',\n  CLEAR_APP_CACHE = 'android.permission.CLEAR_APP_CACHE',\n  CLEAR_APP_USER_DATA = 'android.permission.CLEAR_APP_USER_DATA',\n  CONTROL_LOCATION_UPDATES = 'android.permission.CONTROL_LOCATION_UPDATES',\n  DELETE_CACHE_FILES = 'android.permission.DELETE_CACHE_FILES',\n  DELETE_PACKAGES = 'android.permission.DELETE_PACKAGES',\n  DEVICE_POWER = 'android.permission.DEVICE_POWER',\n  DIAGNOSTIC = 'android.permission.DIAGNOSTIC',\n  DISABLE_KEYGUARD = 'android.permission.DISABLE_KEYGUARD',\n  DUMP = 'android.permission.DUMP',\n  EXPAND_STATUS_BAR = 'android.permission.EXPAND_STATUS_BAR',\n  FACTORY_TEST = 'android.permission.FACTORY_TEST',\n  FLASHLIGHT = 'android.permission.FLASHLIGHT',\n  FORCE_BACK = 'android.permission.FORCE_BACK',\n  GET_ACCOUNTS = 'android.permission.GET_ACCOUNTS',\n  GET_PACKAGE_SIZE = 'android.permission.GET_PACKAGE_SIZE',\n  GET_TASKS = 'android.permission.GET_TASKS',\n  GET_TOP_ACTIVITY_INFO = 'android.permission.GET_TOP_ACTIVITY_INFO',\n  GLOBAL_SEARCH = 'android.permission.GLOBAL_SEARCH',\n  HARDWARE_TEST = 'android.permission.HARDWARE_TEST',\n  INJECT_EVENTS = 'android.permission.INJECT_EVENTS',\n  INSTALL_LOCATION_PROVIDER = 'android.permission.INSTALL_LOCATION_PROVIDER',\n  INSTALL_PACKAGES = 'android.permission.INSTALL_PACKAGES',\n  INSTALL_SHORTCUT = 'com.android.launcher.permission.INSTALL_SHORTCUT',\n  INTERNAL_SYSTEM_WINDOW = 'android.permission.INTERNAL_SYSTEM_WINDOW',\n  INTERNET = 'android.permission.INTERNET',\n  KILL_BACKGROUND_PROCESSES = 'android.permission.KILL_BACKGROUND_PROCESSES',\n  LOCATION_HARDWARE = 'android.permission.LOCATION_HARDWARE',\n  MANAGE_ACCOUNTS = 'android.permission.MANAGE_ACCOUNTS',\n  MANAGE_APP_TOKENS = 'android.permission.MANAGE_APP_TOKENS',\n  MANAGE_DOCUMENTS = 'android.permission.MANAGE_DOCUMENTS',\n  MASTER_CLEAR = 'android.permission.MASTER_CLEAR',\n  MEDIA_CONTENT_CONTROL = 'android.permission.MEDIA_CONTENT_CONTROL',\n  MODIFY_AUDIO_SETTINGS = 'android.permission.MODIFY_AUDIO_SETTINGS',\n  MODIFY_PHONE_STATE = 'android.permission.MODIFY_PHONE_STATE',\n  MOUNT_FORMAT_FILESYSTEMS = 'android.permission.MOUNT_FORMAT_FILESYSTEMS',\n  MOUNT_UNMOUNT_FILESYSTEMS = 'android.permission.MOUNT_UNMOUNT_FILESYSTEMS',\n  NFC = 'android.permission.NFC',\n  PERSISTENT_ACTIVITY = 'android.permission.PERSISTENT_ACTIVITY',\n  PROCESS_OUTGOING_CALLS = 'android.permission.PROCESS_OUTGOING_CALLS',\n  READ_CALENDAR = 'android.permission.READ_CALENDAR',\n  READ_CALL_LOG = 'android.permission.READ_CALL_LOG',\n  READ_CONTACTS = 'android.permission.READ_CONTACTS',\n  READ_EXTERNAL_STORAGE = 'android.permission.READ_EXTERNAL_STORAGE',\n  READ_FRAME_BUFFER = 'android.permission.READ_FRAME_BUFFER',\n  READ_HISTORY_BOOKMARKS = 'com.android.browser.permission.READ_HISTORY_BOOKMARKS',\n  READ_INPUT_STATE = 'android.permission.READ_INPUT_STATE',\n  READ_LOGS = 'android.permission.READ_LOGS',\n  READ_PHONE_STATE = 'android.permission.READ_PHONE_STATE',\n  READ_PROFILE = 'android.permission.READ_PROFILE',\n  READ_SMS = 'android.permission.READ_SMS',\n  READ_SOCIAL_STREAM = 'android.permission.READ_SOCIAL_STREAM',\n  READ_SYNC_SETTINGS = 'android.permission.READ_SYNC_SETTINGS',\n  READ_SYNC_STATS = 'android.permission.READ_SYNC_STATS',\n  READ_USER_DICTIONARY = 'android.permission.READ_USER_DICTIONARY',\n  READ_VOICEMAIL = 'com.android.voicemail.permission.READ_VOICEMAIL',\n  REBOOT = 'android.permission.REBOOT',\n  RECEIVE_BOOT_COMPLETED = 'android.permission.RECEIVE_BOOT_COMPLETED',\n  RECEIVE_MMS = 'android.permission.RECEIVE_MMS',\n  RECEIVE_SMS = 'android.permission.RECEIVE_SMS',\n  RECEIVE_WAP_PUSH = 'android.permission.RECEIVE_WAP_PUSH',\n  RECORD_AUDIO = 'android.permission.RECORD_AUDIO',\n  REORDER_TASKS = 'android.permission.REORDER_TASKS',\n  RESTART_PACKAGES = 'android.permission.RESTART_PACKAGES',\n  SEND_RESPOND_VIA_MESSAGE = 'android.permission.SEND_RESPOND_VIA_MESSAGE',\n  SEND_SMS = 'android.permission.SEND_SMS',\n  SET_ACTIVITY_WATCHER = 'android.permission.SET_ACTIVITY_WATCHER',\n  SET_ALARM = 'com.android.alarm.permission.SET_ALARM',\n  SET_ALWAYS_FINISH = 'android.permission.SET_ALWAYS_FINISH',\n  SET_ANIMATION_SCALE = 'android.permission.SET_ANIMATION_SCALE',\n  SET_DEBUG_APP = 'android.permission.SET_DEBUG_APP',\n  SET_ORIENTATION = 'android.permission.SET_ORIENTATION',\n  SET_POINTER_SPEED = 'android.permission.SET_POINTER_SPEED',\n  SET_PREFERRED_APPLICATIONS = 'android.permission.SET_PREFERRED_APPLICATIONS',\n  SET_PROCESS_LIMIT = 'android.permission.SET_PROCESS_LIMIT',\n  SET_TIME = 'android.permission.SET_TIME',\n  SET_TIME_ZONE = 'android.permission.SET_TIME_ZONE',\n  SET_WALLPAPER = 'android.permission.SET_WALLPAPER',\n  SET_WALLPAPER_HINTS = 'android.permission.SET_WALLPAPER_HINTS',\n  SIGNAL_PERSISTENT_PROCESSES = 'android.permission.SIGNAL_PERSISTENT_PROCESSES',\n  STATUS_BAR = 'android.permission.STATUS_BAR',\n  SUBSCRIBED_FEEDS_READ = 'android.permission.SUBSCRIBED_FEEDS_READ',\n  SUBSCRIBED_FEEDS_WRITE = 'android.permission.SUBSCRIBED_FEEDS_WRITE',\n  SYSTEM_ALERT_WINDOW = 'android.permission.SYSTEM_ALERT_WINDOW',\n  TRANSMIT_IR = 'android.permission.TRANSMIT_IR',\n  UNINSTALL_SHORTCUT = 'com.android.launcher.permission.UNINSTALL_SHORTCUT',\n  UPDATE_DEVICE_STATS = 'android.permission.UPDATE_DEVICE_STATS',\n  USE_CREDENTIALS = 'android.permission.USE_CREDENTIALS',\n  USE_SIP = 'android.permission.USE_SIP',\n  VIBRATE = 'android.permission.VIBRATE',\n  WAKE_LOCK = 'android.permission.WAKE_LOCK',\n  WRITE_APN_SETTINGS = 'android.permission.WRITE_APN_SETTINGS',\n  WRITE_CALENDAR = 'android.permission.WRITE_CALENDAR',\n  WRITE_CALL_LOG = 'android.permission.WRITE_CALL_LOG',\n  WRITE_CONTACTS = 'android.permission.WRITE_CONTACTS',\n  WRITE_EXTERNAL_STORAGE = 'android.permission.WRITE_EXTERNAL_STORAGE',\n  WRITE_GSERVICES = 'android.permission.WRITE_GSERVICES',\n  WRITE_HISTORY_BOOKMARKS = 'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',\n  WRITE_PROFILE = 'android.permission.WRITE_PROFILE',\n  WRITE_SECURE_SETTINGS = 'android.permission.WRITE_SECURE_SETTINGS',\n  WRITE_SETTINGS = 'android.permission.WRITE_SETTINGS',\n  WRITE_SMS = 'android.permission.WRITE_SMS',\n  WRITE_SOCIAL_STREAM = 'android.permission.WRITE_SOCIAL_STREAM',\n  WRITE_SYNC_SETTINGS = 'android.permission.WRITE_SYNC_SETTINGS',\n  WRITE_USER_DICTIONARY = 'android.permission.WRITE_USER_DICTIONARY',\n  WRITE_VOICEMAIL = 'com.android.voicemail.permission.WRITE_VOICEMAIL',\n}\n\n/**\n * Android Permissions\n */\n@Injectable()\nexport class AndroidPermissionsService {\n  private plugin: any;\n\n  constructor() {\n    // console.log((window as any).plugins, (window as any).cordova, (window as any).cordova.plugins);\n    this.plugin = (window as any).cordova.plugins.permissions;\n  }\n\n  /**\n   * Check permission\n   * @param permission The name of the permission\n   * @return Returns a promise\n   */\n  checkPermission(permission: AndroidPermissions): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      this.plugin.hasPermission(permission, results => {\n        resolve(results[permission]);\n      }, reject);\n    });\n  }\n\n  /**\n   * Request permission\n   * @param permission The name of the permission to request\n   * @return Returns a promise\n   */\n  requestPermission(permission: AndroidPermissions): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      this.plugin.requestPermission(permission, results => {\n        resolve(results.hasPermission);\n      }, reject);\n    });\n  }\n\n  /**\n   * Request permissions\n   * @param permissions An array with permissions\n   * @return Returns a promise\n   */\n  requestPermissions(permissions: string[]): Promise<any> {\n    return null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponent} from './settings.component';\nimport {CompoteListComponent} from './compote-list/compote-list.component';\nimport {ProgramListComponent} from './program-list/program-list.component';\nimport {PumpListComponent} from './pump-list/pump-list.component';\nimport {DoseListComponent} from './dose-list/dose-list.component';\nimport {ScheduleListComponent} from './schedule-list/schedule-list.component';\nimport {TimerListComponent} from './timer-list/timer-list.component';\nimport {MixerListComponent} from './mixer-list/mixer-list.component';\nimport {PinAssignmentComponent} from './pin-assignment/pin-assignment.component';\n\nconst routes: Routes = [\n  {\n    path: 'settings',\n    children: [\n      {\n        path: '',\n        component: SettingsComponent,\n        pathMatch: 'full',\n        data: {\n          title: 'Settings',\n          actions: ['menu', 'bt', 'sync'],\n        },\n      },\n      {\n        path: 'compote',\n        component: CompoteListComponent,\n        data: {\n          title: 'Compote',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'program',\n        component: ProgramListComponent,\n        data: {\n          title: 'Program',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'pump',\n        component: PumpListComponent,\n        data: {\n          title: 'Pump',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'dose',\n        component: DoseListComponent,\n        data: {\n          title: 'Dose',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'mixer',\n        component: MixerListComponent,\n        data: {\n          title: 'Mixer',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'timer',\n        component: TimerListComponent,\n        data: {\n          title: 'Timer',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'schedule',\n        component: ScheduleListComponent,\n        data: {\n          title: 'Schedule',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'pin-assignment',\n        component: PinAssignmentComponent,\n        data: {\n          title: 'Pin Assignment',\n          actions: ['back', 'sync'],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsComponent} from './settings.component';\nimport {CompoteListModule} from './compote-list/compote-list.module';\nimport {ProgramListModule} from './program-list/program-list.module';\nimport {PageModule} from '../../shared/page/page.module';\nimport {DoseListModule} from './dose-list/dose-list.module';\nimport {PumpListModule} from './pump-list/pump-list.module';\nimport {TimerListModule} from './timer-list/timer-list.module';\nimport {ScheduleListModule} from './schedule-list/schedule-list.module';\nimport {MixerListModule} from './mixer-list/mixer-list.module';\nimport {PinAssignmentModule} from './pin-assignment/pin-assignment.module';\nimport {SettingsRoutingModule} from './settings-routing.module';\nimport {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [SettingsComponent],\n  exports: [SettingsComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatListModule,\n    MatIconModule,\n    PageModule,\n    CompoteListModule,\n    ProgramListModule,\n    DoseListModule,\n    PumpListModule,\n    TimerListModule,\n    ScheduleListModule,\n    MixerListModule,\n    PinAssignmentModule,\n  ],\n})\nexport class SettingsModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { DeviceState, DeviceStatus, FertigateState } from '../../../model/device-status';\nimport { Store } from '@ngrx/store';\nimport { ActionConnectRequest } from '../../../store/connect/connect.reducer';\nimport { DeviceRequestType } from '../../../model/device-request-type';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusComponent implements OnInit {\n  @Input() status: DeviceStatus;\n  DeviceState = DeviceState;\n  FertigateState = FertigateState;\n\n  constructor(\n    private readonly store: Store,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  onReset() {\n    this.store.dispatch(new ActionConnectRequest({\n      type: DeviceRequestType.resetError,\n      payload: { fake: 0 },\n    }));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ConfigComponent} from '../../components/config/config.component';\n\nconst routes: Routes = [\n  {\n    path: 'config',\n    component: ConfigComponent,\n    data: {\n      title: 'Config',\n      actions: ['back', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfigRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkb3NlLmNvbXBvbmVudC5zY3NzIn0= */\";","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsComponent implements OnInit {\n  links = [\n    {\n      route: ['/', 'settings', 'program'],\n      title: 'Program',\n      icon: 'cogs',\n    },\n    {\n      route: ['/', 'settings', 'compote'],\n      title: 'Compote',\n      icon: 'cup-water',\n    },\n    {\n      route: ['/', 'settings', 'timer'],\n      title: 'Timer',\n      icon: 'alarm',\n    },\n    {\n      route: ['/', 'settings', 'schedule'],\n      title: 'Schedule',\n      icon: 'clock-outline',\n    },\n    {\n      route: ['/', 'settings', 'pump'],\n      title: 'Pump',\n      icon: 'water-pump',\n    },\n    {\n      route: ['/', 'settings', 'dose'],\n      title: 'Dose',\n      icon: 'eyedropper',\n    },\n    {\n      route: ['/', 'settings', 'mixer'],\n      title: 'Mixer',\n      icon: 'pinwheel',\n    },\n    {\n      route: ['/', 'settings', 'pin-assignment'],\n      title: 'Pin Assignment',\n      icon: 'chip',\n    },\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwdW1wLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div *ngIf=\\\"update; else databaseSizes\\\">\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" diameter=\\\"58\\\"></mat-progress-spinner>\\n</div>\\n<div class=\\\"mt-2\\\">\\n  <button mat-button (click)=\\\"updateSizes.emit()\\\">Update database</button>\\n  <button mat-button (click)=\\\"onClear()\\\">Clear database</button>\\n</div>\\n<ng-template #databaseSizes>\\n  <div *ngFor=\\\"let size of sizes\\\">\\n    <mat-checkbox\\n      [checked]=\\\"selection.isSelected(size.name)\\\"\\n      (change)=\\\"selection.toggle(size.name)\\\"\\n    ></mat-checkbox>\\n    {{size.name}} - {{size.size | memory}} of {{size.count}} records\\n  </div>\\n</ng-template>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SelectBtDeviceComponent} from './select-bt-device.component';\nimport {SelectBtDeviceService} from './select-bt-device.service';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [SelectBtDeviceComponent],\n  entryComponents: [SelectBtDeviceComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatListModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n  ],\n  providers: [SelectBtDeviceService],\n})\nexport class SelectBtDeviceModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DeviceMonitorComponent} from './device-monitor.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [DeviceMonitorComponent],\n  exports: [DeviceMonitorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n  ],\n})\nexport class DeviceMonitorModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CameraService {\n  stream: any;\n  video: any;\n  constraints = {\n    qvga: { width: { exact: 320 }, height: { exact: 240 } },\n    vga: { width: { exact: 640 }, height: { exact: 480 } },\n  };\n  private onInactive: () => any;\n\n  constructor() {\n    this.onInactive = () => {\n      console.error('media loss');\n    };\n  }\n\n  async start(resolution: 'qvga' | 'vga', videoId) {\n    const videoConstraint = this.constraints[resolution];\n    let video = document.getElementById(videoId) as HTMLVideoElement;\n    if (!video) {\n      video = document.createElement('video');\n      video.width = videoConstraint.width.exact;\n      video.height = videoConstraint.height.exact;\n    }\n    this.video = video;\n    try {\n      const stream = await navigator.mediaDevices\n        .getUserMedia({ video: videoConstraint, audio: false });\n      video.srcObject = stream;\n      video.play();\n      this.video = video;\n      this.stream = stream;\n      // this.stream.addEventListener(this.onInactive, false);\n      await new Promise(resolve => {\n        const onVideoCanPlay = () => {\n          video.removeEventListener('canplay', onVideoCanPlay);\n          resolve();\n        };\n        video.addEventListener('canplay', onVideoCanPlay, false);\n      });\n      console.log('camera ready');\n    } catch (err) {\n      console.error('Camera Error: ' + err.name + ' ' + err.message);\n    }\n  }\n\n  stop() {\n    // this.stream.removeEventListener(this.onInactive);\n    if (this.video) {\n      this.video.pause();\n      this.video.srcObject = null;\n    }\n    if (this.stream) {\n      this.stream.getVideoTracks()[0].stop();\n    }\n  }\n}\n","export default \"<ng-container [ngSwitch]=\\\"status.state\\\">\\n  <ng-container *ngSwitchCase=\\\"DeviceState.fertigate\\\">\\n    <ng-container [ngSwitch]=\\\"status.cmdState\\\">\\n      <ng-container *ngSwitchCase=\\\"FertigateState.pumpIn\\\">\\n        <ng-container *ngTemplateOutlet=\\\"pumpIn\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.mixDose\\\">\\n        <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.dose\\\">\\n        dose\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.mix\\\">\\n        <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.irrigate\\\">\\n        <ng-container *ngTemplateOutlet=\\\"pumpOut\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.irrigateFinish\\\">\\n        <ng-container *ngTemplateOutlet=\\\"pumpOut\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.washPumpIn\\\">\\n        <ng-container *ngTemplateOutlet=\\\"pumpIn\\\"></ng-container>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.washMix\\\">\\n        <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon>\\n      </ng-container>\\n      <ng-container *ngSwitchCase=\\\"FertigateState.wash\\\">\\n        <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.irrigate\\\">\\n    irrigate\\n    <ng-container *ngTemplateOutlet=\\\"pumpOut\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.wash\\\">\\n    wash\\n    <ng-container *ngTemplateOutlet=\\\"pumpOut\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.pumpIn\\\">\\n    <ng-container *ngTemplateOutlet=\\\"pumpIn\\\"></ng-container>\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.compote\\\">\\n    compote\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.washCompote\\\">\\n    washCompote\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.mixer\\\">\\n    mixer\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.dose\\\">\\n    dose\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.doseMixer\\\">\\n    doseMixer\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.idle\\\">\\n    idle\\n  </ng-container>\\n  <ng-container *ngSwitchCase=\\\"DeviceState.error\\\">\\n    Error\\n    <button type=\\\"button\\\" mat-button (click)=\\\"onReset()\\\">Reset</button>\\n  </ng-container>\\n  <ng-container *ngSwitchDefault>\\n    Unknown\\n  </ng-container>\\n</ng-container>\\n<ng-template #pumpIn>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon> Pump in\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 text-right\\\">\\n      Flow\\n    </div>\\n    <div class=\\\"col-6 text-left\\\">\\n      {{status.flow | number: '1.0-0'}} mL/minute\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 text-right\\\">\\n      Total volume\\n    </div>\\n    <div class=\\\"col-6 text-left\\\">\\n      {{status.totalVolume | number: '1.0-0'}} mL\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #pumpOut>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <mat-icon svgIcon=\\\"fountain\\\"></mat-icon> Pump out\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 text-right\\\">\\n      Flow\\n    </div>\\n    <div class=\\\"col-6 text-left\\\">\\n      {{status.flow | number: '1.0-0'}} mL/minute\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 text-right\\\">\\n      Total volume\\n    </div>\\n    <div class=\\\"col-6 text-left\\\">\\n      {{status.totalVolume | number: '1.0-0'}} mL\\n    </div>\\n  </div>\\n</ng-template>\\n\";","export default \"<mat-slide-toggle class=\\\"col-12\\\"\\n  [checked]=\\\"config.enable\\\" (change)=\\\"onChange({enable: $event.checked})\\\">\\n  Enable\\n</mat-slide-toggle>\\n<mat-form-field>\\n  <input matInput\\n    type=\\\"number\\\"\\n    placeholder=\\\"Interval\\\"\\n    [value]=\\\"config.interval\\\"\\n    (input)=\\\"onChange({interval: +$event.target.value})\\\"\\n  >\\n</mat-form-field>\\n\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Pump} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-pump',\n  templateUrl: './pump.component.html',\n  styleUrls: ['./pump.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PumpComponent implements OnInit {\n  @Input() pump: Pump;\n  @Output() pumpChange = new EventEmitter<Pump>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.pumpChange.next({...this.pump, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Timer} from '../../../../auto/struct';\nimport {Program} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerComponent implements OnInit {\n  @Input() timer: Timer;\n  @Output() timerChange = new EventEmitter<Timer>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n  @Input() programs: Program[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.timerChange.next({...this.timer, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, merge, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ActionMonitorUpdateFlow, ActionMonitorUpdateTemp, MonitorActionTypes } from './monitor.reducer';\nimport { DbService } from '../../services/storage/db.service';\n\n@Injectable()\nexport class MonitorEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n    private readonly db: DbService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(MonitorActionTypes.INIT))\n      .pipe(switchMap(() => merge(\n        from(this.db.getTemp())\n          .pipe(map(data => new ActionMonitorUpdateTemp(data))),\n        from(this.db.getFlow())\n          .pipe(map(data => new ActionMonitorUpdateFlow(data))),\n      )))\n      ;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DeviceMonitor} from '../../../store/config/config.reducer';\n\n@Component({\n  selector: 'app-device-monitor',\n  templateUrl: './device-monitor.component.html',\n  styleUrls: ['./device-monitor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceMonitorComponent implements OnInit {\n  @Input() config: DeviceMonitor;\n  @Output() configChange = new EventEmitter<DeviceMonitor>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.configChange.emit({...this.config, ...changes});\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { Compote, CompoteDaily } from '../../../../auto/struct';\nimport {Dose} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-compote',\n  templateUrl: './compote.component.html',\n  styleUrls: ['./compote.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CompoteComponent implements OnInit {\n  @Input() compote: Compote;\n  @Input() name: string;\n  @Input() soils: Dose[];\n  @Output() compoteChange = new EventEmitter<Compote>();\n  @Output() compoteDailyChange = new EventEmitter<{index: number, value: CompoteDaily}>();\n  @Output() nameChange = new EventEmitter<string>();\n  @Output() add = new EventEmitter<void>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.compoteChange.next({...this.compote, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n\n  onDailyChange(index, value) {\n    this.compoteDailyChange.next({index, value});\n  }\n\n  onAdd() {\n    this.add.emit();\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0dXMuY29tcG9uZW50LnNjc3MifQ== */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashboardComponent} from './dashboard.component';\nimport {PageModule} from '../../shared/page/page.module';\nimport {PipesModule} from '../../pipes/pipes.module';\nimport {StatusModule} from './status/status.module';\nimport {DashboardRoutingModule} from './dashboard-routing.module';\nimport {TimeChartModule} from './time-chart/time-chart.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule, DashboardRoutingModule, MatIconModule, MatButtonModule, MatCardModule,\n    PageModule, PipesModule, StatusModule, TimeChartModule,\n  ],\n})\nexport class DashboardModule {\n}\n","import {ChangeDetectorRef, Component, HostListener, Inject, Input, OnInit} from '@angular/core';\nimport {startWith, switchMap} from 'rxjs/operators';\nimport {BehaviorSubject, from} from 'rxjs';\nimport {DbAccessControlCamshotValue, DbService} from '../../../services/storage/db.service';\nimport {BACKSPACE, DELETE, ENTER, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-camshot-slider',\n  templateUrl: './camshot-slider.component.html',\n  styleUrls: ['./camshot-slider.component.scss']\n})\nexport class CamshotSliderComponent implements OnInit {\n  @Input() set key(value: number) {\n    this.keySubject.next(value);\n  }\n  get key(): number {\n    return this.keySubject.value;\n  }\n  camshot: DbAccessControlCamshotValue;\n  private keySubject = new BehaviorSubject<number>(null);\n\n  constructor(\n    private readonly db: DbService, cd: ChangeDetectorRef,\n    @Inject(MAT_DIALOG_DATA) data: any,\n    public readonly dialogRef: MatDialogRef<CamshotSliderComponent>,\n  ) {\n    this.keySubject.pipe(switchMap(key => from(db.getAccessControlCamshot(key))\n      .pipe(startWith(null as DbAccessControlCamshotValue))\n    ))\n      .subscribe(camshot => {\n        this.camshot = camshot;\n        cd.markForCheck();\n      });\n    this.key = data.key;\n  }\n\n  @HostListener('document:keydown', ['$event']) onKeyDown($event) {\n    switch ($event.keyCode) {\n      case LEFT_ARROW:\n        this.onPrev();\n        break;\n      case RIGHT_ARROW:\n        this.onNext();\n        break;\n      case DELETE:\n        break;\n      case BACKSPACE:\n        break;\n      case ENTER:\n        break;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onPrev() {\n    this.db.getAccessControlCamshotPrev(this.key).then(({key, value}) => {\n      this.key = key;\n      this.camshot = value;\n    });\n  }\n\n  onNext() {\n    this.db.getAccessControlCamshotNext(this.key).then(({key, value}) => {\n      this.key = key;\n      this.camshot = value;\n    });\n  }\n}\n","export default \"<p>access-control works!</p>\\n<canvas id=\\\"canvasInput\\\" width=\\\"640\\\" height=\\\"480\\\"></canvas>\\n<canvas id=\\\"canvasOutput\\\" width=\\\"640\\\" height=\\\"480\\\"></canvas>\\n\";","import { Injectable } from '@angular/core';\nimport { SettingsState } from '../../store/settings/settings.reducer';\nimport { ConfigState } from '../../store/config/config.reducer';\n\nconst settingsKey = 'settings';\nconst configKey = 'config';\nconst versionKey = 'version';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  static version = '12';\n\n  constructor() {\n    const version = localStorage.getItem(versionKey);\n    if (version !== LocalStorageService.version) {\n      localStorage.clear();\n      localStorage.setItem(versionKey, LocalStorageService.version);\n    }\n  }\n\n  loadSettings(): SettingsState {\n    console.log('load settings');\n    const value = localStorage.getItem(settingsKey);\n    if (!value) {\n      return;\n    }\n    return JSON.parse(value);\n  }\n\n  saveSettings(settings: SettingsState) {\n    console.log('save settings');\n    localStorage.setItem(settingsKey, JSON.stringify(settings));\n  }\n\n  loadConfig(): ConfigState {\n    console.log('load config');\n    const value = localStorage.getItem(configKey);\n    if (!value) {\n      return;\n    }\n    return JSON.parse(value);\n  }\n\n  saveConfig(config: ConfigState) {\n    console.log('save config');\n    localStorage.setItem(configKey, JSON.stringify(config));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { IDeviceConnect } from '../device-connect';\nimport { BtConnect } from '../../model/device-connect';\nimport { AndroidPermissions, AndroidPermissionsService } from './android-permissions.service';\n\ndeclare const bluetoothSerial: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AndroidBluetoothService implements IDeviceConnect {\n  response$: Observable<ArrayBuffer>;\n  private readonly plugin: any;\n  private readonly responseSubject = new Subject<ArrayBuffer>();\n  private readonly subscribeRawData: (data?) => any;\n\n  constructor(\n    private readonly permission: AndroidPermissionsService,\n  ) {\n    console.log((window as any).plugins, (window as any).cordova, (window as any).cordova.plugins);\n    this.plugin = bluetoothSerial;\n    this.response$ = this.responseSubject.asObservable();\n    this.subscribeRawData = data => {\n      // console.log('subscribe', data);\n      this.responseSubject.next(data);\n    };\n  }\n\n  async discover(options?: any): Promise<BtConnect[]> {\n    console.log('discover$');\n    const success = await this.permission.requestPermission(AndroidPermissions.BLUETOOTH);\n    if (!success) {\n      throw new Error('deny');\n    }\n    console.log(AndroidPermissions.BLUETOOTH, 'OK');\n    return await new Promise<BtConnect[]>((resolve, reject) => this.plugin.list(\n      result => {\n        console.log('discover', JSON.stringify(result));\n        resolve(result as BtConnect[]);\n      },\n      error => {\n        console.log('discover', JSON.stringify(error));\n        reject(error);\n      },\n    ));\n  }\n\n  async connect(device: BtConnect): Promise<void> {\n    console.log('connect$', device);\n    await new Promise((resolve, reject) => this.plugin.connectInsecure(\n      device.address,\n      result => {\n        console.log('connect', JSON.stringify(result));\n        resolve();\n      },\n      error => {\n        console.log('connect', JSON.stringify(error));\n        reject(error);\n      },\n    ));\n    this.plugin.subscribeRawData(this.subscribeRawData);\n  }\n\n  async disconnect(): Promise<void> {\n    console.log('disconnect$');\n    await new Promise<void>((resolve, reject) => this.plugin.unsubscribeRawData(\n      result => {\n        console.log('unsubscribe', JSON.stringify(result));\n        resolve();\n      },\n      error => {\n        console.log('unsubscribe', JSON.stringify(error));\n        reject(error);\n      },\n    ));\n    await new Promise<void>((resolve, reject) => this.plugin.disconnect(\n      result => {\n        console.log('disconnect', JSON.stringify(result));\n        resolve();\n      },\n      error => {\n        console.log('disconnect', JSON.stringify(error));\n        reject(error);\n      },\n    ));\n  }\n\n  send(data: ArrayBuffer): Promise<void> {\n    // console.log('send', data);\n    return new Promise((resolve, reject) => this.plugin.write(\n      data,\n      result => {\n        console.log('send success', JSON.stringify(result));\n        resolve();\n      },\n      error => {\n        console.log('send error', JSON.stringify(error));\n        reject(error);\n      },\n    ));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DevAccessControlComponent} from './dev-access-control.component';\nimport {AccessControlServiceModule} from '../../../services/access-control/access-control-service.module';\n\n@NgModule({\n  declarations: [\n    DevAccessControlComponent,\n  ],\n  exports: [\n    DevAccessControlComponent,\n  ],\n  imports: [\n    CommonModule,\n    AccessControlServiceModule,\n  ],\n})\nexport class DevAccessControlModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LogComponent} from '../../components/log/log.component';\n\nconst routes: Routes = [\n  {\n    path: 'log',\n    component: LogComponent,\n    data: {\n      title: 'Log',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LogRoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { BtConnect, DeviceConnect } from '../../../model/device-connect';\nimport { IDeviceConnect } from '../../device-connect';\n\ninterface ReadValueOptions {\n  acceptAllDevices?: boolean;\n  optionalServices?: BluetoothServiceUUID[];\n  characteristic: BluetoothCharacteristicUUID;\n  service: BluetoothServiceUUID;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrowserBluetoothService implements IDeviceConnect {\n  response$: Observable<ArrayBuffer>;\n  private ble;\n  private device: BtConnect;\n  // private serviceUUID = 0x1800; // generic_access\n  // private serviceUUID = 0x1801; // generic_attribute\n  // private serviceUUID = 0x180A; // device_information\n  private serviceUUID = 0xffe0; // custom serial\n  // private charUUID = 0x00002a00;\n  // private charUUID = 0x00002a01;\n  // private charUUID = 0x00002a02;\n  // private charUUID = 0x00002a04;\n  private charUUID = 0x0000ffe1;\n  private server: BluetoothRemoteGATTServer | void;\n  private service: BluetoothRemoteGATTService | void;\n  private char: any;\n  private responseSubject = new Subject<ArrayBuffer>();\n  private characteristicvaluechanged: (event) => any;\n  private gattserverdisconnected: () => any;\n\n  constructor() {\n    this.ble = navigator.bluetooth || (navigator as any).mozBluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n    this.response$ = this.responseSubject.asObservable();\n    this.characteristicvaluechanged = (event) => {\n      console.log(event);\n      this.responseSubject.next(event);\n    };\n    this.gattserverdisconnected = () => {\n      console.log('gattserverdisconnected');\n    };\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  async discover(options?): Promise<BtConnect[]> {\n    console.log('[BLE::Info] Requesting devices with options %o', options);\n    let device: BluetoothDevice = null;\n    try {\n      if (options && options.discover) {\n        await this.discoverAll();\n        return [];\n      }\n      device = await this.ble.requestDevice({\n        // filters: [{services: [this.serviceUUID]}],\n        optionalServices: [this.serviceUUID],\n        acceptAllDevices: true,\n      });\n      console.log('[BLE::Info] Discover', device);\n    } catch (error) {\n      console.error(error.message);\n    }\n    return device ? [\n      {\n        id: device.id,\n        name: device.name,\n        type: 'ble',\n        ble: device,\n      },\n    ] : [];\n  }\n\n  async connect(device: DeviceConnect): Promise<void> {\n    try {\n      this.device = (await this.discover())[0];\n      this.server = await this.device.ble.gatt.connect();\n      this.device.ble.addEventListener('gattserverdisconnected', this.gattserverdisconnected);\n      console.log(this.server);\n      this.service = await this.server.getPrimaryService(this.serviceUUID);\n      console.log(this.service);\n      this.char = await this.service.getCharacteristic(this.charUUID);\n      console.log(this.char);\n      this.char.addEventListener('characteristicvaluechanged', this.characteristicvaluechanged);\n      await this.char.startNotifications();\n      console.log('Notifications started');\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    console.log('disconnect');\n    if (!this.server) {\n      return;\n    }\n    this.char.removeEventListener('characteristicvaluechanged', this.characteristicvaluechanged);\n    this.device.ble.removeEventListener('gattserverdisconnected', this.gattserverdisconnected);\n    await this.char.stopNotifications();\n    await this.server.disconnect();\n    this.device = null;\n    this.service = null;\n    this.char = null;\n  }\n\n  async send(data: ArrayBuffer): Promise<void> {\n    await this.char.writeValue(data);\n  }\n\n  async read(): Promise<void> {\n    console.log('read', await this.char.readValue());\n  }\n\n  async discoverAll() {\n    let server;\n    try {\n      console.log('discover all');\n      const device = await this.ble.requestDevice({\n        acceptAllDevices: true,\n        optionalServices: [\n          // 0xffe0,\n          0x1800,\n          // 0x18m01,\n          // 0x180A,\n        ],\n      });\n      console.log(device);\n      server = await device.gatt.connect();\n      console.log(server);\n      const services = await server.getPrimaryServices();\n      console.log(services);\n      for (const service of services) {\n        console.log(service.uuid);\n        const chars = await service.getCharacteristics();\n        console.log(chars);\n        for (const char of chars) {\n          console.log('\\t', char.uuid, getSupportedProperties(char));\n          if (char.properties.read) {\n            console.log('\\t', await char.readValue());\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e.message);\n    }\n    await server.disconnect();\n    console.log('disconnected');\n\n    function getSupportedProperties(characteristic) {\n      const supportedProperties = [];\n      for (const p in characteristic.properties) {\n        if (characteristic.properties[p] === true) {\n          supportedProperties.push(p.toUpperCase());\n        }\n      }\n      return '[' + supportedProperties.join(', ') + ']';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CamshotsComponent } from './camshots.component';\nimport {CamshotModule} from '../camshot/camshot.module';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n@NgModule({\n  declarations: [CamshotsComponent],\n  exports: [CamshotsComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    CamshotModule,\n  ]\n})\nexport class CamshotsModule { }\n","export default \"<div class=\\\"h-100 d-flex flex-column flex-nowrap\\\">\\n  <div>{{episode.key | date: 'yyyy.MM.dd HH:mm:ss'}} - {{episode.value.lastKey | date: 'HH:mm:ss'}}</div>\\n  <app-camshots [keys]=\\\"episodeKeys\\\" class=\\\"flex-fill\\\"></app-camshots>\\n</div>\\n\";","export enum DeviceResponseType {\n  commandSuccess,\n  log,\n  error,\n  status,\n  program,\n  compoteDaily,\n  schedule,\n  timer,\n  pump,\n  mixer,\n  dose,\n  pinPump,\n  pinFlowSensor,\n  pinLevelSensor,\n  pinMixer,\n  pinDose,\n  pinDoseMixer,\n  pinValve,\n  time,\n  temp,\n  statePump,\n  stateValve,\n  stateMixer,\n  stateDose,\n  stateDoseMixer,\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeDose,\n  ActionSettingsChangeName, ActionSettingsLoadDose, ActionSettingsLoadSchedule,\n  ActionSettingsRemoveDose,\n  selectorDoses,\n  selectorNames,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Dose} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-dose-list',\n  templateUrl: './dose-list.component.html',\n  styleUrls: ['./dose-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DoseListComponent implements OnInit {\n  doses$: Observable<Dose[]>;\n  names$: Observable<string[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.doses$ = this.store.pipe(select(selectorDoses));\n    this.names$ = this.store.pipe(select(selectorNames('dose')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadDose());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'dose', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeDose({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveDose(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","export default \"<div>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"text\\\"\\n      placeholder=\\\"Name\\\"\\n      [value]=\\\"name\\\"\\n      (input)=\\\"onNameChange($event.target.value)\\\"\\n    >\\n  </mat-form-field>\\n  <mat-accordion>\\n    <mat-expansion-panel *ngFor=\\\"let daily of compote.daily; trackBy: trackByIndex; let index = index\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          #{{index + 1}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          {{daily.volume}}\\n          <span class=\\\"ml-1\\\">{{daily.washVolume}}</span>\\n          <span *ngFor=\\\"let dose of daily.dose; trackBy: trackByIndex\\\" class=\\\"ml-1\\\">{{dose}}</span>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <ng-template matExpansionPanelContent>\\n        <app-compote-daily\\n          [compoteDaily]=\\\"daily\\\"\\n          [soils]=\\\"soils\\\"\\n          (compoteDailyChange)=\\\"onDailyChange(index, $event)\\\"\\n        ></app-compote-daily>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n  <button mat-button (click)=\\\"onAdd()\\\">Add</button>\\n</div>\\n\";","export default \"<div>\\n  <mat-slide-toggle\\n    class=\\\"col-12\\\"\\n    [checked]=\\\"!!timer.enable\\\" (change)=\\\"onChange({enable: +$event.checked})\\\"\\n  >\\n    Enable\\n  </mat-slide-toggle>\\n  <app-day-time\\n    class=\\\"col-12\\\"\\n    [time]=\\\"timer.time\\\"\\n    (timeChange)=\\\"onChange({time: $event})\\\"\\n  >\\n  </app-day-time>\\n  <mat-form-field class=\\\"col-12\\\">\\n    <mat-select\\n      placeholder=\\\"Program\\\"\\n      [value]=\\\"timer.program\\\"\\n      (selectionChange)=\\\"onChange({program: $event.value})\\\"\\n    >\\n      <mat-option *ngFor=\\\"let program of programs; let index = index\\\" [value]=\\\"index\\\">\\n        {{program || (index + 1)}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3RlLWRhaWx5LmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<h1 mat-dialog-title>Log filter</h1>\\n<mat-dialog-content class=\\\"pb-2\\\">\\n  <div\\n    *ngFor=\\\"let line of filter$ | async; trackBy: trackBy\\\"\\n    [class]=\\\"'app-tree-padding-' + line.level\\\"\\n    [class.d-none]=\\\"!line.visible\\\"\\n  >\\n    <button\\n      mat-icon-button\\n      (click)=\\\"onExpand(line)\\\"\\n      [attr.aria-label]=\\\"'toggle ' + line.title\\\"\\n      [class.invisible]=\\\"!line.expandable\\\"\\n    >\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\"\\n        [svgIcon]=\\\"line.expanded ? 'chevron-down' : 'chevron-right'\\\">\\n      </mat-icon>\\n    </button>\\n    <mat-checkbox\\n      [checked]=\\\"line.selected\\\"\\n      [indeterminate]=\\\"line.selected === null\\\"\\n      (change)=\\\"onSelect(line)\\\"\\n      class=\\\"align-middle\\\"\\n    >\\n      {{line.title}}\\n    </mat-checkbox>\\n  </div>\\n</mat-dialog-content>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onCancel()\\\" cdkFocusInitial>Cancel</button>\\n  <button mat-button (click)=\\\"onReset()\\\">Reset</button>\\n  <button mat-button (click)=\\\"onApply()\\\">Apply</button>\\n</div>\\n\";","export default \"<mat-form-field>\\n  <input matInput\\n    placeholder=\\\"Name\\\"\\n    [value]=\\\"name\\\"\\n    (input)=\\\"onNameChange($event.target.value)\\\"\\n  >\\n</mat-form-field>\\n<mat-form-field>\\n  <mat-select\\n    placeholder=\\\"Compote\\\"\\n    [value]=\\\"program.compote\\\"\\n    (selectionChange)=\\\"onChange({compote: $event.value})\\\"\\n  >\\n    <mat-option *ngFor=\\\"let compote of compotes; let index = index\\\" [value]=\\\"index\\\">\\n      {{compote || (index + 1)}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n<mat-form-field>\\n  <input matInput placeholder=\\\"Start\\\" [matDatepicker]=\\\"startDatepicker\\\"\\n    [value]=\\\"program.start | dateDay\\\" (dateChange)=\\\"onChangeDate($event.value)\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"startDatepicker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #startDatepicker></mat-datepicker>\\n</mat-form-field>\\n<mat-form-field>\\n  <mat-select\\n    placeholder=\\\"Valves\\\"\\n    [value]=\\\"program.valves | bits\\\"\\n    (selectionChange)=\\\"onChangeValves($event.value)\\\"\\n    multiple\\n  >\\n    <mat-option *ngFor=\\\"let valve of valves\\\" [value]=\\\"valve\\\">\\n      {{valve}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ConfigComponent} from './config.component';\nimport {SelectBtDeviceModule} from './select-bt-device/select-bt-device.module';\nimport {PipesModule} from '../../pipes/pipes.module';\nimport {MonitorConfigModule} from './monitor-config/monitor-config.module';\nimport {ConfigRoutingModule} from './config-routing.module';\nimport {AccessControlConfigModule} from './access-control-config/access-control-config.module';\nimport {DatabaseConfigModule} from './database-config/database-config.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [ConfigComponent],\n  exports: [ConfigComponent],\n  imports: [\n    CommonModule,\n    ConfigRoutingModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    SelectBtDeviceModule,\n    PipesModule,\n    MonitorConfigModule,\n    AccessControlConfigModule,\n    DatabaseConfigModule,\n  ],\n})\nexport class ConfigModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwaW4tYXNzaWdubWVudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { dashboardReducer } from './dashboard.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DashboardEffects } from './dashboard.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('dashboard', dashboardReducer),\n    EffectsModule.forFeature([DashboardEffects]),\n  ],\n})\nexport class DashboardStoreModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CalibrateComponent} from './calibrate.component';\nimport {CalibrateDoseModule} from './calibrate-dose/calibrate-dose.module';\nimport {CalibrateFlowSensorModule} from './calibrate-flow-sensor/calibrate-flow-sensor.module';\nimport {CalibrateRoutingModule} from './calibrate-routing.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\n\n@NgModule({\n  declarations: [CalibrateComponent],\n  exports: [CalibrateComponent],\n  imports: [\n    CommonModule,\n    CalibrateRoutingModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    CalibrateFlowSensorModule,\n    CalibrateDoseModule,\n  ],\n})\nexport class CalibrateModule {\n}\n","export const environment = {\n  production: false,\n  platform: 'android',\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CamshotComponent } from './camshot.component';\nimport {CamshotSliderModule} from '../camshot-slider/camshot-slider.module';\n\n@NgModule({\n  declarations: [CamshotComponent],\n  exports: [CamshotComponent],\n  imports: [\n    CommonModule,\n    CamshotSliderModule,\n  ]\n})\nexport class CamshotModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DatabaseConfigComponent } from './database-config.component';\nimport {PipesModule} from '../../../pipes/pipes.module';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [DatabaseConfigComponent],\n  exports: [DatabaseConfigComponent],\n  imports: [\n    CommonModule,\n    PipesModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n  ]\n})\nexport class DatabaseConfigModule { }\n","import {Injectable} from '@angular/core';\nimport {DeviceResponseType} from '../../model/device-response-type';\nimport {DeviceRequestType} from '../../model/device-request-type';\nimport {Action, Store} from '@ngrx/store';\nimport {Actions, ofType} from '@ngrx/effects';\nimport {ActionConnectRequest, ActionConnectResponse, ConnectActionTypes} from '../../store/connect/connect.reducer';\nimport {delay, filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\nimport {DeviceState, FertigateState} from '../../model/device-status';\nimport {BehaviorSubject, EMPTY, of} from 'rxjs';\nimport { DeviceResponseStatus, DeviceResponseTemp } from '../../auto/device-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceSimulateService {\n  private enableSubject = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly actions: Actions<Action>,\n  ) {\n  }\n\n  init() {\n    this.actions.pipe(ofType<ActionConnectRequest>(ConnectActionTypes.REQUEST))\n      .pipe(withLatestFrom(this.enableSubject.asObservable()))\n      .pipe(filter(([request, enable]) => enable))\n      .pipe(map(([request, enable]) => request.payload))\n      .pipe(mergeMap(request => {\n        if (request.type === DeviceRequestType.getTemp) {\n          return of(new ActionConnectResponse<DeviceResponseTemp>({\n            type: DeviceResponseType.temp,\n            payload: {value: Math.random() * 50},\n          })).pipe(delay(1000));\n        } else if (request.type === DeviceRequestType.getStatus) {\n          return of(new ActionConnectResponse<DeviceResponseStatus>({\n            type: DeviceResponseType.status,\n            payload: {\n              state: DeviceState.fertigate,\n              cmdState: FertigateState.irrigate,\n              valve: 0,\n              flow: Math.random() * 1200,\n              volume: 0,\n              totalVolume: 0,\n              mix: 0,\n              // dose: 0,\n            }\n          })).pipe(delay(1000));\n        }\n        return EMPTY;\n      }))\n      .subscribe(response => {\n        this.store.dispatch(response);\n      });\n  }\n\n  enable(value) {\n    this.enableSubject.next(value);\n  }\n\n  get enabled() {\n    return this.enableSubject.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { settingsReducer } from './settings.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SettingsEffects } from './settings.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('settings', settingsReducer),\n    EffectsModule.forFeature([SettingsEffects]),\n  ],\n})\nexport class SettingsStoreModule {\n}\n","export default \"<mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"false\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Dose rate</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Volume (mL)\\\" formControlName=\\\"firstCtrl\\\">\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Start</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"false\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Pumping</ng-template>\\n      <div>\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Cancel</button>\\n        <button mat-button matStepperNext>Stop</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [editable]=\\\"false\\\">\\n    <ng-template matStepLabel>Save</ng-template>\\n    You are going to save new rate value.\\n    <div>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Cancel</button>\\n      <button mat-button matStepperNext>Save</button>\\n    </div>\\n  </mat-step>\\n  <mat-step [editable]=\\\"false\\\">\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are done.\\n    <div>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Repeat</button>\\n    </div>\\n  </mat-step>\\n  <ng-template matStepperIcon=\\\"edit\\\">\\n    <mat-icon svgIcon=\\\"pencil\\\"></mat-icon>\\n  </ng-template>\\n  <ng-template matStepperIcon=\\\"done\\\">\\n    <mat-icon svgIcon=\\\"check\\\"></mat-icon>\\n  </ng-template>\\n</mat-vertical-stepper>\\n\";","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Actions} from '@ngrx/effects';\nimport {Observable, Subject} from 'rxjs';\nimport {LogFilterComponent} from './log-filter/log-filter.component';\nimport {\n  ActionLogResetFilter,\n  ActionLogSetFilter,\n  LogItem,\n  selectorLogFilteredItems,\n  selectorLogHasFilter\n} from '../../store/log/log.reducer';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LogComponent implements OnInit, OnDestroy {\n  log$: Observable<LogItem[]>;\n  hasFilter$: Observable<boolean>;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly actions: Actions,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit() {\n    this.log$ = this.store.pipe(select(selectorLogFilteredItems));\n    this.hasFilter$ = this.store.pipe(select(selectorLogHasFilter));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  onFilter() {\n    const dialogRef = this.dialog.open(LogFilterComponent);\n    dialogRef.afterClosed().subscribe(filter => {\n      if (filter) {\n        this.store.dispatch(new ActionLogSetFilter(filter));\n      }\n    });\n  }\n\n  onFilterReset() {\n    this.store.dispatch(new ActionLogResetFilter());\n  }\n}\n","export default \"<h1 mat-dialog-title>{{ data.title || 'Select index number' }}</h1>\\n<mat-dialog-content class=\\\"pt-2\\\">\\n  <mat-radio-group (change)=\\\"onChange($event.value)\\\" [value]=\\\"index\\\">\\n    <mat-radio-button *ngFor=\\\"let id of count | times\\\" [value]=\\\"id\\\" class=\\\"mr-3\\\">\\n      {{id + 1}}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n</mat-dialog-content>\\n<div mat-dialog-actions>\\n  <button (click)=\\\"onCancel()\\\" cdkFocusInitial mat-button>Cancel</button>\\n  <button (click)=\\\"onSelect()\\\" mat-button>Select</button>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2hlZHVsZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \".temp-chart {\\n  height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxtb25pdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQUNGIiwiZmlsZSI6Im1vbml0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGVtcC1jaGFydCB7XG4gIGhlaWdodDogMzAwcHg7XG59XG4iXX0= */\";","export default \"<mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"false\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Pump In Flow sensor</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Volume (mL)\\\" formControlName=\\\"firstCtrl\\\">\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Start</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"false\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Pumping</ng-template>\\n      <div>\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Cancel</button>\\n        <button mat-button matStepperNext>Stop</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [editable]=\\\"false\\\">\\n    <ng-template matStepLabel>Save</ng-template>\\n    You are going to save new rate value.\\n    <div>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Cancel</button>\\n      <button mat-button matStepperNext>Save</button>\\n    </div>\\n  </mat-step>\\n  <mat-step [editable]=\\\"false\\\">\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are done.\\n    <div>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Repeat</button>\\n    </div>\\n  </mat-step>\\n  <ng-template matStepperIcon=\\\"edit\\\">\\n    <mat-icon svgIcon=\\\"pencil\\\"></mat-icon>\\n  </ng-template>\\n  <ng-template matStepperIcon=\\\"done\\\">\\n    <mat-icon svgIcon=\\\"check\\\"></mat-icon>\\n  </ng-template>\\n</mat-vertical-stepper>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScheduleListComponent} from './schedule-list.component';\nimport {ScheduleModule} from './schedule/schedule.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ScheduleListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    ScheduleModule,\n  ],\n})\nexport class ScheduleListModule {\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SelectIndexComponent } from './select-index.component';\nimport { Observable } from 'rxjs';\nimport { SelectIndexParams } from './select-index-params';\n\n@Injectable()\nexport class SelectIndexService {\n\n  constructor(\n    public readonly dialog: MatDialog,\n  ) {\n  }\n\n  select(params: SelectIndexParams): Observable<number | void> {\n    const dialogRef = this.dialog.open<SelectIndexComponent, SelectIndexParams, number | void>(\n      SelectIndexComponent, { data: params });\n    return dialogRef.afterClosed();\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {SelectBtDeviceComponent} from './select-bt-device.component';\nimport {ConnectService} from '../../../services/connect/connect.service';\nimport {environment} from '../../../../environments/environment';\nimport {from, Observable} from 'rxjs';\nimport {DeviceConnect} from '../../../model/device-connect';\nimport {map} from 'rxjs/operators';\nimport { DEVICE_CONNECT } from 'src/app/platform/device-connect';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectBtDeviceService {\n\n  constructor(\n    public readonly dialog: MatDialog,\n    @Inject(DEVICE_CONNECT) private readonly connectService: ConnectService,\n  ) {\n  }\n\n  select(): Observable<DeviceConnect> {\n    return from(this.connectService.discover())\n      .pipe(map(([device]) => device));\n    // const dialogRef = this.dialog.open(SelectBtDeviceComponent);\n    // return dialogRef.afterClosed();\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {Program} from '../../../auto/struct';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeName,\n  ActionSettingsChangeProgram, ActionSettingsLoadProgram,\n  ActionSettingsRemoveProgram,\n  selectorNames,\n  selectorPrograms,\n} from '../../../store/settings/settings.reducer';\nimport {deviceConfig} from '../../../model/device-config';\n\n@Component({\n  selector: 'app-program-list',\n  templateUrl: './program-list.component.html',\n  styleUrls: ['./program-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgramListComponent implements OnInit, OnDestroy {\n  programs$: Observable<Program[]>;\n  compotes$: Observable<string[]>;\n  names$: Observable<string[]>;\n  valves: number[];\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.programs$ = this.store.pipe(select(selectorPrograms));\n    this.compotes$ = this.store.pipe(select(selectorNames('compote')));\n    this.names$ = this.store.pipe(select(selectorNames('program')));\n    this.valves = new Array(deviceConfig.valveCount);\n    for (let i = 0; i < deviceConfig.valveCount; i++) {\n      this.valves[i] = i + 1;\n    }\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadProgram());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'program', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeProgram({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveProgram(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DEVICE_CONNECT, IDeviceConnect } from '../../platform/device-connect';\nimport { Observable } from 'rxjs';\nimport { DeviceConnect } from '../../model/device-connect';\nimport { DeviceRequestSerializer } from './device-request-serializer';\nimport { DeviceResponse } from '../../auto/device-response';\nimport { DeviceRequest } from '../../auto/device-request';\nimport { DeviceResponseDeserializer } from './device-response-deserializer';\nimport { deviceRequestMeta, deviceResponseMeta, structMeta } from '../../model/device-io-meta';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectService {\n  response$: Observable<DeviceResponse>;\n  private requestSerializer: DeviceRequestSerializer;\n  private responseDeserializer: DeviceResponseDeserializer;\n\n  constructor(\n    @Inject(DEVICE_CONNECT) private readonly deviceConnect: IDeviceConnect,\n  ) {\n    this.requestSerializer = new DeviceRequestSerializer(\n      deviceRequestMeta,\n      structMeta,\n      DeviceRequestType,\n    );\n    this.responseDeserializer = new DeviceResponseDeserializer(\n      deviceResponseMeta,\n      structMeta,\n      DeviceResponseType,\n    );\n    this.response$ = this.deviceConnect.response$\n      .pipe(this.responseDeserializer.mapRaw)\n      .pipe(map(response =>\n        response.type === DeviceResponseType.temp ? {\n            type: DeviceResponseType.temp,\n            payload: { value: Math.round(response.payload.value * 2.5) * 0.1 },\n          } :\n          response,\n      ));\n  }\n\n  discover(options?: any): Promise<DeviceConnect[]> {\n    return this.deviceConnect.discover(options);\n  }\n\n  async connect(device: DeviceConnect): Promise<void> {\n    await this.deviceConnect.connect(device);\n  }\n\n  async disconnect(): Promise<void> {\n    await this.deviceConnect.disconnect();\n  }\n\n  async send(request: DeviceRequest): Promise<void> {\n    const raw = this.requestSerializer.serialize(request);\n    // console.log(raw);\n    await this.deviceConnect.send(raw);\n  }\n}\n","export default \"<mat-action-list>\\n  <mat-list-item (click)=\\\"onFertigate()\\\">\\n    <mat-icon svgIcon=\\\"fountain\\\"></mat-icon>\\n    &nbsp;\\n    Fertigate\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onPumpIn()\\\">\\n    <mat-icon svgIcon=\\\"water-pump\\\"></mat-icon>\\n    &nbsp;\\n    Pump In\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onDose()\\\">\\n    <mat-icon svgIcon=\\\"eyedropper\\\"></mat-icon>\\n    &nbsp;\\n    Dose\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onDoseMix()\\\">\\n    <mat-icon svgIcon=\\\"pinwheel\\\"></mat-icon>\\n    &nbsp;\\n    Dose mix\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onMix()\\\">\\n    <mat-icon svgIcon=\\\"pinwheel\\\"></mat-icon>\\n    &nbsp;\\n    Mix\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onIrrigate()\\\">\\n    <mat-icon svgIcon=\\\"fountain\\\"></mat-icon>\\n    &nbsp;\\n    Irrigate\\n  </mat-list-item>\\n  <mat-list-item (click)=\\\"onWash()\\\">\\n    <mat-icon svgIcon=\\\"fountain\\\"></mat-icon>\\n    &nbsp;\\n    Wash\\n  </mat-list-item>\\n</mat-action-list>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PumpListComponent} from './pump-list.component';\nimport {PumpModule} from './pump/pump.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [PumpListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    PumpModule,\n  ],\n})\nexport class PumpListModule {\n}\n","export default \"<mat-form-field>\\n  <mat-select\\n    (selectionChange)=\\\"onChange({hour: $event.value})\\\"\\n    [value]=\\\"time.hour\\\"\\n    placeholder=\\\"Hour\\\"\\n  >\\n    <mat-option *ngFor=\\\"let hour of hours\\\" [value]=\\\"hour\\\">{{hour}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n<mat-form-field>\\n  <mat-select\\n    (selectionChange)=\\\"onChange({minute: $event.value})\\\"\\n    [value]=\\\"time.minute\\\"\\n    placeholder=\\\"Minute\\\"\\n  >\\n    <mat-option *ngFor=\\\"let minute of minutes\\\" [value]=\\\"minute\\\">{{minute}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\";","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { connectReducer } from './connect.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConnectEffects } from './connect.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('connect', connectReducer),\n    EffectsModule.forFeature([ConnectEffects]),\n  ],\n})\nexport class ConnectStoreModule {\n}\n","export default \":host {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7QUFDRiIsImZpbGUiOiJsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuIl19 */\";","/**\n * Devices\n */\n\nexport type DevicePinMode = 'rx' | 'tx' | 'rx1' | 'tx1' | 'rx2' | 'tx2' | 'rx3' | 'tx3'\n  | 'sda' | 'scl' | 'miso' | 'mosi' | 'sck' | 'ss';\n\nexport interface DevicePin {\n  pwm?: true;\n  analog?: true;\n  int?: number;\n  mode?: DevicePinMode;\n}\n\nexport interface DeviceInfo {\n  [key: string]: {\n    pins: {\n      [key: number]: DevicePin;\n    };\n  };\n}\n\nexport const deviceInfo: DeviceInfo = {\n  // Arduino Mega Specifications\n  // The ATmega2560 is a Microcontroller\n  // The operating voltage of this microcontroller is 5volts\n  // The recommended Input Voltage will range from 7volts to 12volts\n  // The input voltage will range from 6volts to 20volts\n  // The digital input/output pins are 54 where 15 of these pins will supply PWM o/p.\n  // Analog Input Pins are 16\n  // DC Current for each input/output pin is 40 mA\n  // DC Current used for 3.3V Pin is 50 mA\n  // Flash Memory like 256 KB where 8 KB of flash memory is used with the help of bootloader\n  // The static random access memory (SRAM) is 8 KB\n  // The electrically erasable programmable read-only memory (EEPROM) is 4 KB\n  // The clock (CLK) speed is 16 MHz\n  // The USB host chip used in this is MAX3421E\n  // The length of this board is 101.52 mm\n  // The width of this board is 53.3 mm\n  // The weight of this board is 36 g\n  /**\n   * Arduino Mega 2560\n   */\n  mega2560: {\n    pins: {\n      0: {\n        mode: 'rx',\n      },\n      1: {\n        mode: 'tx',\n      },\n      2: {\n        pwm: true,\n        int: 0,\n      },\n      3: {\n        pwm: true,\n        int: 1,\n      },\n      4: {\n        pwm: true,\n      },\n      5: {\n        pwm: true,\n      },\n      6: {\n        pwm: true,\n      },\n      7: {\n        pwm: true,\n      },\n      8: {\n        pwm: true,\n      },\n      9: {\n        pwm: true,\n      },\n      10: {\n        pwm: true,\n      },\n      11: {\n        pwm: true,\n      },\n      12: {\n        pwm: true,\n      },\n      13: {\n        pwm: true,\n      },\n      14: {\n        mode: 'tx3',\n      },\n      15: {\n        mode: 'rx3',\n      },\n      16: {\n        mode: 'tx2',\n      },\n      17: {\n        mode: 'rx2',\n      },\n      18: {\n        mode: 'tx1',\n        int: 5,\n      },\n      19: {\n        mode: 'rx1',\n        int: 4,\n      },\n      20: {\n        mode: 'sda',\n        int: 3,\n      },\n      21: {\n        mode: 'scl',\n        int: 2,\n      },\n      22: {},\n      23: {},\n      24: {},\n      25: {},\n      26: {},\n      27: {},\n      28: {},\n      29: {},\n      30: {},\n      31: {},\n      32: {},\n      33: {},\n      34: {},\n      35: {},\n      36: {},\n      37: {},\n      38: {},\n      39: {},\n      40: {},\n      41: {},\n      42: {},\n      43: {},\n      44: {\n        pwm: true,\n      },\n      45: {\n        pwm: true,\n      },\n      46: {\n        pwm: true,\n      },\n      47: {},\n      48: {},\n      49: {},\n      50: {\n        mode: 'miso',\n      },\n      51: {\n        mode: 'mosi',\n      },\n      52: {\n        mode: 'sck',\n      },\n      53: {\n        mode: 'ss',\n      },\n      54: {\n        analog: true,\n      },\n      55: {\n        analog: true,\n      },\n      56: {\n        analog: true,\n      },\n      57: {\n        analog: true,\n      },\n      58: {\n        analog: true,\n      },\n      59: {\n        analog: true,\n      },\n      60: {\n        analog: true,\n      },\n      61: {\n        analog: true,\n      },\n      62: {\n        analog: true,\n      },\n      63: {\n        analog: true,\n      },\n      64: {\n        analog: true,\n      },\n      65: {\n        analog: true,\n      },\n      66: {\n        analog: true,\n      },\n      67: {\n        analog: true,\n      },\n      68: {\n        analog: true,\n      },\n      69: {\n        analog: true,\n      },\n    },\n  },\n};\n\nexport function getAllPins() {\n  return Object.keys(deviceInfo.mega2560.pins).map(p => +p);\n}\n","export default \".app-content {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxwYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxNQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0FBQ0YiLCJmaWxlIjoicGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZXYtYWNjZXNzLWNvbnRyb2wuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzY2hlZHVsZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserBluetoothService } from './ble/browser-bluetooth.service';\nimport { BrowserSerialService } from './serial/browser-serial.service';\nimport { BrowserConnectService } from './browser-connect.service';\nimport { DEVICE_CONNECT } from '../device-connect';\nimport { ChooseDialogModule } from '../../shared/choose-dialog/choose-dialog.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ChooseDialogModule,\n  ],\n  providers: [\n    BrowserBluetoothService,\n    BrowserSerialService,\n    { provide: DEVICE_CONNECT, useClass: BrowserConnectService },\n  ],\n})\nexport class AppBrowserModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maWcuY29tcG9uZW50LnNjc3MifQ== */\";","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {SelectBtDeviceService} from './select-bt-device/select-bt-device.service';\nimport {\n  ActionConfigChange, ActionConfigClearDatabase,\n  ActionConfigSetDevice,\n  ActionConfigUpdateDatabaseSize,\n  ConfigState,\n  DatabaseSize,\n  MonitorConfig,\n  selectorConfig,\n  selectorConfigAccessControl,\n  selectorDatabaseSizes,\n  selectorMonitorConfig,\n  selectorUpdateDatabaseSizes,\n} from '../../store/config/config.reducer';\nimport {from, Observable} from 'rxjs';\nimport {AccessControlConfig} from '../../model/access-control-config';\nimport {DEVICE_CONNECT} from \"../../platform/device-connect\";\nimport {ConnectService} from \"../../services/connect/connect.service\";\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigComponent implements OnInit {\n  config$: Observable<ConfigState>;\n  databaseSizes$: Observable<DatabaseSize[]>;\n  updateDatabaseSizes$: Observable<boolean>;\n  monitor$: Observable<MonitorConfig>;\n  accessControl$: Observable<AccessControlConfig>;\n\n  constructor(\n    private readonly store: Store<any>,\n    @Inject(DEVICE_CONNECT) private readonly connectService: ConnectService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.config$ = this.store.pipe(select(selectorConfig));\n    this.updateDatabaseSizes$ = this.store.pipe(select(selectorUpdateDatabaseSizes));\n    this.databaseSizes$ = this.store.pipe(select(selectorDatabaseSizes));\n    this.monitor$ = this.store.pipe(select(selectorMonitorConfig));\n    this.accessControl$ = this.store.pipe(select(selectorConfigAccessControl));\n    this.store.dispatch(new ActionConfigUpdateDatabaseSize());\n  }\n\n  selectDevice() {\n    from(this.connectService.discover())\n      .subscribe(device => {\n        if (device?.length) {\n          this.store.dispatch(new ActionConfigSetDevice(device[0]));\n        }\n      });\n  }\n\n  updateDb() {\n    this.store.dispatch(new ActionConfigUpdateDatabaseSize());\n  }\n\n  clearDb(names) {\n    this.store.dispatch(new ActionConfigClearDatabase(names));\n  }\n\n  onChange(changes) {\n    this.store.dispatch(new ActionConfigChange(changes));\n  }\n}\n","export default \":host ::ng-deep .mat-checkbox-layout {\\n  margin-bottom: 0;\\n}\\n\\n.app-tree-padding-0 {\\n  padding-left: 0;\\n}\\n\\n.app-tree-padding-1 {\\n  padding-left: 1em;\\n}\\n\\n.app-tree-padding-2 {\\n  padding-left: 2em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9nLWZpbHRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGdCQUFBO0FBQUo7O0FBS0U7RUFDRSxlQUFBO0FBRko7O0FBSUU7RUFDRSxpQkFBQTtBQUZKOztBQUlFO0VBQ0UsaUJBQUE7QUFGSiIsImZpbGUiOiJsb2ctZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIHtcbiAgLm1hdC1jaGVja2JveC1sYXlvdXQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuLmFwcC10cmVlLXBhZGRpbmcge1xuICAmLTAge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuICAmLTEge1xuICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICB9XG4gICYtMiB7XG4gICAgcGFkZGluZy1sZWZ0OiAyZW07XG4gIH1cbn1cbiJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { IDeviceConnect } from '../device-connect';\nimport { DeviceConnect } from '../../model/device-connect';\nimport { ChooseDialogService } from '../../shared/choose-dialog/choose-dialog.service';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BrowserBluetoothService } from './ble/browser-bluetooth.service';\nimport { BrowserSerialService } from './serial/browser-serial.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrowserConnectService implements IDeviceConnect {\n  private readonly responseSubject = new Subject<ArrayBuffer>();\n  response$: Observable<ArrayBuffer> = this.responseSubject.asObservable();\n  private device: IDeviceConnect;\n\n  constructor(\n    private readonly chooseDialogService: ChooseDialogService,\n    private readonly browserBluetoothService: BrowserBluetoothService,\n    private readonly browserSerialService: BrowserSerialService,\n  ) {\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  discover(options?): Promise<DeviceConnect[]> {\n    return this.chooseDialogService.choose({\n      title: 'Choose device size',\n      options: [\n        {\n          title: 'Serial',\n          value: 'Serial',\n        },\n        {\n          title: 'Bluetooth',\n          value: 'Bluetooth',\n        },\n      ],\n    })\n      .pipe(map(choose => choose === 'Serial' ? this.browserSerialService : this.browserBluetoothService))\n      .pipe(tap(device => this.device = device))\n      .pipe(switchMap(() => from(this.device?.discover(options)))).toPromise();\n  }\n\n  async connect(device: DeviceConnect): Promise<void> {\n    await this.device?.connect(device);\n    this.device.response$.subscribe({\n      next: e => this.responseSubject.next(e),\n    });\n  }\n\n  async disconnect(): Promise<void> {\n    await this.device?.disconnect();\n    this.device = null;\n  }\n\n  send(data: ArrayBuffer): Promise<void> {\n    return this.device?.send(data);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScheduleComponent} from './schedule.component';\nimport {DayTimeModule} from '../../../../shared/day-time/day-time.module';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [ScheduleComponent],\n  exports: [ScheduleComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    DayTimeModule,\n  ],\n})\nexport class ScheduleModule {\n}\n","export default \"mat-dialog-content {\\n  max-height: 100vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcY2Ftc2hvdC1zbGlkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtBQUNGIiwiZmlsZSI6ImNhbXNob3Qtc2xpZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWRpYWxvZy1jb250ZW50IHtcbiAgbWF4LWhlaWdodDogMTAwdmg7XG59XG4iXX0= */\";","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'app-calibrate-flow-sensor',\n  templateUrl: './calibrate-flow-sensor.component.html',\n  styleUrls: ['./calibrate-flow-sensor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\n    },\n  ],\n})\nexport class CalibrateFlowSensorComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this.formBuilder.group({\n      firstCtrl: [''],\n    });\n    this.secondFormGroup = this.formBuilder.group({\n      secondCtrl: [''],\n    });\n  }\n}\n","import { Observable } from 'rxjs';\nimport { convert7bitTo8bit, crc6, DeviceIOField, DeviceIOMarker, DeviceIOMeta, getLength } from '../../model/device-io';\nimport { map } from 'rxjs/operators';\nimport { DeviceResponse } from '../../auto/device-response';\n\nexport class DeviceResponseDeserializer {\n  constructor(\n    private readonly meta: { [key: string]: DeviceIOMeta | string },\n    private readonly struct: { [key: string]: DeviceIOMeta },\n    private readonly mapper: Record<string | number, string | number>,\n  ) {\n    this.mapRaw = this.mapRaw.bind(this);\n  }\n\n  deserialize(type: number, raw: ArrayBuffer): { type: number; payload?: any } {\n    // console.log('deserialize', type, raw);\n    let index = 0;\n    const payloadBufferData = new DataView(raw);\n    const readObject = (metaOrName: DeviceIOMeta | string) => {\n      const meta = typeof metaOrName === 'string' ? this.struct[metaOrName] : metaOrName;\n      const obj: any = {};\n      // console.log('readObject', meta);\n      Object.keys(meta).forEach(key => {\n        const fieldOrName = meta[key];\n        const field: DeviceIOField = typeof fieldOrName === 'string' ?\n          { type: 'object', itemMeta: this.struct[fieldOrName] } : fieldOrName;\n        let value;\n        switch (field.type) {\n          case 'list':\n            value = new Array(field.length);\n            for (let i = 0; i < field.length; i++) {\n              value[i] = readObject(field.itemMeta);\n            }\n            break;\n          case 'object':\n            value = readObject(field.itemMeta);\n            break;\n          case 'uint8':\n            value = payloadBufferData.getUint8(index);\n            index += 1;\n            break;\n          case 'uint16':\n            value = payloadBufferData.getUint16(index, true);\n            index += 2;\n            break;\n          case 'uint32':\n            value = payloadBufferData.getUint32(index, true);\n            index += 4;\n            break;\n          case 'uint8[]':\n            value = new Array(field.length);\n            for (let i = 0; i < field.length; i++) {\n              value[i] = payloadBufferData.getUint8(index);\n              index += 1;\n            }\n            break;\n          case 'uint16[]':\n            value = new Array(field.length);\n            for (let i = 0; i < field.length; i++) {\n              value[i] = payloadBufferData.getUint16(index, true);\n              index += 2;\n            }\n            break;\n          case 'uint32[]':\n            value = new Array(field.length);\n            for (let i = 0; i < field.length; i++) {\n              value[i] = payloadBufferData.getUint32(index, true);\n              index += 4;\n            }\n            break;\n          case 'string':\n            throw new Error('not implemented');\n        }\n        obj[key] = value;\n      });\n      return obj;\n    };\n    const typeName = this.mapper[type];\n    const payload = readObject(this.meta[typeName]);\n    // console.log(`deserialized`, type, payload);\n    return { type, payload };\n  }\n\n  mapRaw(source: Observable<ArrayBuffer>): Observable<any> {\n    const defaultBufferLength = 256;\n// tslint:disable:no-bitwise\n    const scanRawData = (bufferLength: number = defaultBufferLength) =>\n      (source: Observable<ArrayBuffer>): Observable<any> =>\n        new Observable<any>(observer => {\n          let type = null;\n          const buffer = new Uint8Array(bufferLength);\n          let offset = 0;\n          return source.subscribe({\n            next: (rawData: ArrayBuffer) => {\n              // console.error('received', rawData);\n              const array = new Uint8Array(rawData);\n              const length = array.length;\n              for (let i = 0; i < length; i++) {\n                const byte = array[i];\n                const mode = byte & DeviceIOMarker.mask;\n                if (mode) {\n                  const cmd = byte & DeviceIOMarker.cmdMask;\n                  const cmdPayload = byte & DeviceIOMarker.cmdPayloadMask;\n                  if (cmd) {\n                    // end of message\n                    if (type === null) {\n                      console.error('received end marked, but type is not defined');\n                      continue;\n                    }\n                    // console.error('received end marker', type);\n                    const payload = convert7bitTo8bit(buffer.slice(0, offset));\n                    const expectedLength = getLength(this.meta[this.mapper[type]], this.struct);\n                    if (payload.byteLength !== expectedLength) {\n                      console.error('received bad length', payload.byteLength, expectedLength);\n                      type = null;\n                      offset = 0;\n                      continue;\n                    }\n                    const crc = crc6(payload);\n                    if (crc !== cmdPayload) {\n                      console.error('received bad crc', crc, cmdPayload);\n                      type = null;\n                      offset = 0;\n                      continue;\n                    }\n                    // console.error('emit', type, payload);\n                    observer.next({ type, raw: payload.buffer });\n                    type = null;\n                    offset = 0;\n                    continue;\n                  }\n                  // begin of message\n                  if (type !== null) {\n                    console.error('received begin marked, but previous message is not complete');\n                  }\n                  type = cmdPayload;\n                  offset = 0;\n                  // console.log('received begin marker', type);\n                  continue;\n                }\n                if (type === null) {\n                  console.error('received body, but type is not defined');\n                  continue;\n                }\n                buffer[offset] = byte;\n                // console.log('received body', buffer[offset]);\n                offset += 1;\n              }\n            },\n            error: (err) => {\n              observer.error(err);\n            },\n            complete: () => {\n              observer.complete();\n            },\n          });\n        });\n    return source.pipe(scanRawData())\n      .pipe(map(({ type, raw }): DeviceResponse =>\n        this.deserialize(type, raw) as DeviceResponse));\n  }\n}\n","export default \"<h1 mat-dialog-title>{{key | date: 'yyyy.MM.dd HH:mm:ss'}}</h1>\\n<mat-dialog-content class=\\\"pt-2\\\">\\n  <div class=\\\"d-flex flex-column flex-nowrap\\\">\\n    <div class=\\\"d-flex flex-row flex-nowrap\\\">\\n      <div (click)=\\\"onPrev()\\\">\\n        <mat-icon svgIcon=\\\"chevron-left\\\"></mat-icon>\\n      </div>\\n      <div  class=\\\"flex-fill\\\" *ngIf=\\\"camshot\\\">\\n        <img class=\\\"mx-auto d-block\\\" [attr.src]=\\\"camshot.image\\\"/>\\n      </div>\\n      <div (click)=\\\"onNext()\\\">\\n        <mat-icon svgIcon=\\\"chevron-right\\\"></mat-icon>\\n      </div>\\n    </div>\\n    <div>\\n      {{key | date: 'HH:mm:ss'}}\\n    </div>\\n  </div>\\n</mat-dialog-content>\\n\";","import { Action } from '@ngrx/store';\nimport { DbAccessControlCamshot, DbAccessControlEpisode } from '../../services/storage/db.service';\n\nexport enum AccessControlActionTypes {\n  INIT = '[AccessControl] Init',\n  ADD = '[AccessControl] Add',\n  UPDATE = '[AccessControl] Update',\n}\n\nexport class ActionAccessControlInit implements Action {\n  readonly type = AccessControlActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionAccessControlAdd implements Action {\n  readonly type = AccessControlActionTypes.ADD;\n\n  constructor(public readonly payload: DbAccessControlCamshot) {\n  }\n}\n\nexport class ActionAccessControlUpdate implements Action {\n  readonly type = AccessControlActionTypes.UPDATE;\n\n  constructor(public readonly payload: DbAccessControlEpisode[]) {\n  }\n}\n\nexport type AccessControlActions =\n  | ActionAccessControlInit\n  | ActionAccessControlAdd\n  | ActionAccessControlUpdate\n  ;\n\nexport interface AccessControlState {\n  items: DbAccessControlEpisode[];\n}\n\nexport const initialAccessControlState: AccessControlState = {\n  items: [],\n};\n\nexport const selectorAccessControl = state => state.accessControl as AccessControlState;\nexport const selectorAccessControlItems = state => (state.accessControl as AccessControlState).items;\nexport const selectorAccessControlLastEpisode = state => (state.accessControl as AccessControlState).items[0];\n\nexport function accessControlReducer(\n  state: AccessControlState = initialAccessControlState,\n  action: AccessControlActions,\n): AccessControlState {\n  switch (action.type) {\n    case AccessControlActionTypes.ADD:\n      return addAccessControl(state, action.payload);\n    case AccessControlActionTypes.UPDATE:\n      return { ...state, items: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction addAccessControl(state: AccessControlState, camshot: DbAccessControlCamshot): AccessControlState {\n  const newEpisode = !state.items.length || camshot.key - state.items[0].value.lastKey > 60000;\n  let episode;\n  let items;\n  if (newEpisode) {\n    episode = { key: camshot.key, value: { lastKey: camshot.key } };\n    items = [episode, ...state.items];\n    return { ...state, items };\n  }\n  episode = { ...state.items[0], value: { lastKey: camshot.key } };\n  items = state.items.slice(0);\n  items[0] = episode;\n  return { ...state, items };\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <mat-form-field class=\\\"col-12\\\" *ngFor=\\\"let value of pins; trackBy: trackByValue; let index = index\\\">\\n      <mat-select\\n        placeholder=\\\"Pin {{title}} #{{index}}\\\"\\n        [value]=\\\"value\\\"\\n        (selectionChange)=\\\"onChange(index, $event.value)\\\"\\n      >\\n        <mat-option *ngFor=\\\"let pin of allPins; trackBy: trackByValue\\\" [value]=\\\"pin\\\">\\n          <div class=\\\"pl-4\\\">\\n            {{pin}}\\n          </div>\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <mat-slide-toggle class=\\\"col-12\\\"\\n    [checked]=\\\"!!schedule.enable\\\" (change)=\\\"onChange({enable: +$event.checked})\\\">\\n    Enable\\n  </mat-slide-toggle>\\n  <app-day-time\\n    class=\\\"col-12\\\"\\n    [time]=\\\"schedule.startTime\\\"\\n    (timeChange)=\\\"onChange({startTime: $event})\\\"\\n  >\\n  </app-day-time>\\n  <app-day-time\\n    class=\\\"col-12\\\"\\n    [time]=\\\"schedule.endTime\\\"\\n    (timeChange)=\\\"onChange({endTime: $event})\\\"\\n  >\\n  </app-day-time>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageComponent } from './page.component';\nimport { RouterModule } from '@angular/router';\nimport { BtStatusIconPipe } from './bt-status-icon.pipe';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  declarations: [PageComponent, BtStatusIconPipe],\n  exports: [PageComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n})\nexport class PageModule {\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ConnectStatus } from '../../model/connect-status';\n\ntype PageActions = 'add' | 'back' | 'menu' | 'bt' | 'sync';\n\ninterface PageOptions {\n  title: string;\n  actions: PageActions[];\n}\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageComponent implements OnInit {\n  @Input() options: PageOptions;\n  @Input() title: PageOptions;\n  @Input() btStatus: ConnectStatus;\n  @Input() syncStatus: boolean;\n  @Output() back = new EventEmitter();\n  @Output() add = new EventEmitter();\n  @Output() sync = new EventEmitter();\n  @Output() bt = new EventEmitter();\n  links = [\n    {\n      route: ['/'],\n      title: 'Dashboard',\n      icon: 'view-dashboard',\n    },\n    {\n      route: ['/', 'settings'],\n      title: 'Settings',\n      icon: 'cog-outline',\n    },\n    {\n      route: ['/', 'monitor'],\n      title: 'Monitor',\n      icon: 'chart-bar',\n    },\n    {\n      route: ['/', 'calibrate'],\n      title: 'Calibrate',\n      icon: 'gauge',\n    },\n    {\n      route: ['/', 'manual-control'],\n      title: 'Manual control',\n      icon: 'cursor-pointer',\n    },\n    {\n      route: ['/', 'access-control'],\n      title: 'Access control',\n      icon: 'webcam',\n    },\n    {\n      route: ['/', 'log'],\n      title: 'Log',\n      icon: 'format-list-bulleted',\n    },\n    {\n      route: ['/', 'config'],\n      title: 'Config',\n      icon: 'cellphone-settings',\n    },\n    {\n      route: ['/', 'dev'],\n      title: 'Development',\n      icon: 'dev-to',\n    },\n  ];\n\n  constructor() {\n  }\n\n  get showMenu(): boolean {\n    return (\n      this.options &&\n      this.options.actions &&\n      this.options.actions.includes('menu')\n    );\n  }\n\n  get showAdd(): boolean {\n    return (\n      this.options &&\n      this.options.actions &&\n      this.options.actions.includes('add')\n    );\n  }\n\n  get showBack(): boolean {\n    return (\n      this.options &&\n      this.options.actions &&\n      this.options.actions.includes('back')\n    );\n  }\n\n  get showSync(): boolean {\n    return (\n      this.options &&\n      this.options.actions &&\n      this.options.actions.includes('sync') &&\n      this.syncStatus\n    );\n  }\n\n  get showBt(): boolean {\n    return (\n      this.options &&\n      this.options.actions &&\n      this.options.actions.includes('bt')\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  onBack() {\n    this.back.next();\n  }\n\n  onAdd() {\n    this.add.next();\n  }\n\n  onSync() {\n    this.sync.next();\n  }\n\n  onBt() {\n    this.bt.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DayTimeComponent } from './day-time.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [DayTimeComponent],\n  exports: [DayTimeComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n  ],\n})\nexport class DayTimeModule {\n}\n","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let pump of pumps$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-pump\\n        [pump]=\\\"pump\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        (pumpChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-pump>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import { Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * describes a configuration object for the OpenCV service\n */\nexport interface OpenCVConfig {\n  /**\n   * path to the directory containing the OpenCV files, in the form of '/path/to/<opencv directory>'\n   * directory must contain the the following files:\n   * --<OpenCvDir>\n   * ----opencv.js\n   * ----opencv_js.wasm\n   */\n  openCVDirPath?: string;\n}\n\nexport interface OpenCVState {\n  ready: boolean;\n  loading: boolean;\n  error: boolean;\n  state: string;\n}\n\nexport const OpenCvConfigToken = new InjectionToken<OpenCVConfig>('OpenCV config object token');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenCVService {\n  cvState = new BehaviorSubject<OpenCVState>({\n    ready: false,\n    error: false,\n    loading: true,\n    state: 'loading',\n  });\n  configModule: OpenCvConfigModule;\n\n  constructor(\n    @Inject(OpenCvConfigToken) options: OpenCVConfig,\n    private readonly zone: NgZone,\n  ) {\n    if (!options) {\n      options = {};\n    }\n    this.configModule = this.generateConfigModule(options);\n    this.loadOpenCv();\n  }\n\n  /**\n   * load the OpenCV script\n   */\n  loadOpenCv() {\n    this.cvState.next(this.newState('loading'));\n    // create global module variable\n    (window as any).Module = this.configModule;\n    // create script element and set attributes\n    const script = document.createElement('script') as HTMLScriptElement;\n    script.setAttribute('async', '');\n    script.setAttribute('type', 'text/javascript');\n    // listen for errors\n    script.addEventListener('error', () => {\n      const err = new Error('Failed to load ' + this.configModule.scriptUrl);\n      this.cvState.next(this.newState('error'));\n      this.cvState.error(err);\n    }, { passive: true });\n    // set script url\n    script.src = this.configModule.scriptUrl;\n    // insert script as first script tag\n    const node = document.getElementsByTagName('script')[0];\n    if (node) {\n      node.parentNode.insertBefore(script, node);\n    } else {\n      document.head.appendChild(script);\n    }\n  }\n\n  /**\n   * generates a new state object\n   * @param change - the new state of the module\n   */\n  private newState(change: 'loading' | 'ready' | 'error'): OpenCVState {\n    const newStateObj: OpenCVState = {\n      ready: false,\n      loading: false,\n      error: false,\n      state: '',\n    };\n    Object.keys(newStateObj).forEach(key => {\n      if (key !== 'state') {\n        if (key === change) {\n          newStateObj[key] = true;\n          newStateObj.state = key;\n        } else {\n          newStateObj[key] = false;\n        }\n      }\n    });\n    return newStateObj;\n  }\n\n  /**\n   * generates a config module for the global Module object\n   * @param options - configuration options\n   */\n  private generateConfigModule(options: OpenCVConfig): OpenCvConfigModule {\n    return {\n      scriptUrl: options.openCVDirPath ? `${options.openCVDirPath}/opencv.js` : `/assets/opencv/opencv.js`,\n      wasmBinaryFile: 'opencv_js.wasm',\n      usingWasm: false,\n      onRuntimeInitialized: () => {\n        this.zone.run(() => {\n          console.log('openCV Ready');\n          this.cvState.next(this.newState('ready'));\n        });\n      },\n    };\n  }\n}\n\n/**\n * describes the global Module object that is used to initiate OpenCV.js\n */\ninterface OpenCvConfigModule {\n  scriptUrl: string;\n  wasmBinaryFile: string;\n  usingWasm: boolean;\n  onRuntimeInitialized: () => void;\n}\n","import { Action } from '@ngrx/store';\nimport { DeviceConnect } from '../../model/device-connect';\nimport { AccessControlConfig } from '../../model/access-control-config';\n\nexport enum ConfigActionTypes {\n  INIT = '[Config] Init',\n  UPDATE = '[Config] Update',\n  UPDATE_DATABASE_SIZES = '[Config] Update size',\n  SET_DEVICE = '[Config] Set device',\n  SET_DATABASE_SIZES = '[Config] Set database sizes',\n  CHANGE = '[Config] Change',\n  CLEAR_DATABASE = '[Config] Clear database',\n}\n\nexport class ActionConfigInit implements Action {\n  readonly type = ConfigActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionConfigUpdate implements Action {\n  readonly type = ConfigActionTypes.UPDATE;\n\n  constructor(public readonly payload?: ConfigState) {\n  }\n}\n\nexport class ActionConfigUpdateDatabaseSize implements Action {\n  readonly type = ConfigActionTypes.UPDATE_DATABASE_SIZES;\n\n  constructor() {\n  }\n}\n\nexport class ActionConfigSetDevice implements Action {\n  readonly type = ConfigActionTypes.SET_DEVICE;\n\n  constructor(public readonly payload: DeviceConnect) {\n  }\n}\n\nexport class ActionConfigSetDatabaseSizes implements Action {\n  readonly type = ConfigActionTypes.SET_DATABASE_SIZES;\n\n  constructor(public readonly payload: DatabaseSize[]) {\n  }\n}\n\nexport class ActionConfigChange implements Action {\n  readonly type = ConfigActionTypes.CHANGE;\n\n  constructor(public readonly payload: Partial<ConfigState>) {\n  }\n}\n\nexport class ActionConfigClearDatabase implements Action {\n  readonly type = ConfigActionTypes.CLEAR_DATABASE;\n\n  constructor(public readonly payload: string[]) {\n  }\n}\n\nexport type ConfigActions =\n  | ActionConfigInit\n  | ActionConfigUpdate\n  | ActionConfigUpdateDatabaseSize\n  | ActionConfigSetDevice\n  | ActionConfigSetDatabaseSizes\n  | ActionConfigChange\n  | ActionConfigClearDatabase\n  ;\n\nexport interface DatabaseSize {\n  name: string;\n  size: number;\n  count: number;\n}\n\nexport interface DeviceMonitor {\n  enable: boolean;\n  interval: number;\n}\n\nexport interface MonitorConfig {\n  time: DeviceMonitor;\n  temp: DeviceMonitor;\n  status: DeviceMonitor;\n}\n\nexport interface ConfigState {\n  device: DeviceConnect;\n  databaseSizes: DatabaseSize[];\n  updateDatabaseSizes: boolean;\n  monitor: MonitorConfig;\n  accessControl: AccessControlConfig;\n}\n\nexport const initialConfigState: ConfigState = {\n  device: null,\n  databaseSizes: [],\n  updateDatabaseSizes: false,\n  monitor: {\n    time: {\n      enable: true,\n      interval: 5000,\n    },\n    temp: {\n      enable: true,\n      interval: 5000,\n    },\n    status: {\n      enable: true,\n      interval: 5000,\n    },\n  },\n  accessControl: {\n    enable: false,\n    fps: 3,\n  },\n};\n\nexport const selectorConfig = state => state.config as ConfigState;\nexport const selectorBtDevice = state => (state.config as ConfigState).device;\nexport const selectorDatabaseSizes = state => (state.config as ConfigState).databaseSizes;\nexport const selectorUpdateDatabaseSizes = state => (state.config as ConfigState).updateDatabaseSizes;\nexport const selectorMonitorConfig = state => (state.config as ConfigState).monitor;\nexport const selectorConfigAccessControl = state => (state.config as ConfigState).accessControl;\n\nexport function configReducer(\n  state: ConfigState = initialConfigState,\n  action: ConfigActions,\n): ConfigState {\n  switch (action.type) {\n    case ConfigActionTypes.UPDATE:\n      return updateState(state, action.payload);\n    case ConfigActionTypes.UPDATE_DATABASE_SIZES:\n      return { ...state, updateDatabaseSizes: true };\n    case ConfigActionTypes.SET_DEVICE:\n      return setDevice(state, action.payload);\n    case ConfigActionTypes.SET_DATABASE_SIZES:\n      return setDatabaseSizes(state, action.payload);\n    case ConfigActionTypes.CHANGE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction updateState(state: ConfigState, newState: ConfigState): ConfigState {\n  return newState || state;\n}\n\nfunction setDevice(state: ConfigState, device: DeviceConnect): ConfigState {\n  return { ...state, device };\n}\n\nfunction setDatabaseSizes(state: ConfigState, databaseSizes: DatabaseSize[]): ConfigState {\n  return { ...state, databaseSizes, updateDatabaseSizes: false };\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {dateDayToDate} from '../../../../model/date-time';\n\n@Pipe({\n  name: 'dateDay'\n})\nexport class DateDayPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    return dateDayToDate(value);\n  }\n\n}\n","export const appConfig = {\n  logMaxLength: 10000,\n};\n","export default \"<div echarts class=\\\"temp-chart\\\" [options]=\\\"tempOptions$ | async\\\"></div>\\n<div echarts class=\\\"temp-chart\\\" [options]=\\\"flowOptions$ | async\\\"></div>\\n\";","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let timer of timers$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-timer\\n        [timer]=\\\"timer\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        [programs]=\\\"programs$ | async\\\"\\n        (timerChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-timer>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ChooseDialogParams {\n  title: string;\n  options: { title: string; value: any; }[];\n}\n\n@Component({\n  selector: 'app-choose-dialog',\n  templateUrl: './choose-dialog.component.html',\n  styleUrls: ['./choose-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChooseDialogComponent implements OnInit {\n  value: any;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<ChooseDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private readonly data: ChooseDialogParams,\n  ) {\n  }\n\n  get options(): { title: string; value: any; }[] {\n    return this.data?.options;\n  }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSelect() {\n    this.dialogRef.close(this.value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AndroidPermissionsService } from './android-permissions.service';\nimport { AndroidBluetoothService } from './android-bluetooth.service';\nimport { DEVICE_CONNECT } from '../device-connect';\n\n@NgModule({\n  providers: [\n    AndroidPermissionsService,\n    { provide: DEVICE_CONNECT, useClass: AndroidBluetoothService },\n  ],\n})\nexport class AndroidModule {\n}\n","export default \"<div>\\n  <mat-form-field class=\\\"col-12\\\">\\n    <input\\n      matInput\\n      type=\\\"text\\\"\\n      placeholder=\\\"Name\\\"\\n      [value]=\\\"name\\\"\\n      (input)=\\\"onNameChange($event.target.value)\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field class=\\\"col-12\\\">\\n    <input\\n      matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Rate (0.1 mL / ms)\\\"\\n      [value]=\\\"dose.rate\\\"\\n      (input)=\\\"onChange({rate: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field class=\\\"col-12\\\">\\n    <input\\n      matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Seconds\\\"\\n      [value]=\\\"dose.seconds\\\"\\n      (input)=\\\"onChange({seconds: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-slide-toggle\\n    class=\\\"col-12\\\"\\n    [checked]=\\\"!!dose.pwm\\\"\\n    (change)=\\\"onChange({pwm: +$event.checked})\\\"\\n  >\\n    PWM\\n  </mat-slide-toggle>\\n  <mat-form-field>\\n    <input\\n      matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"PWM Sensor\\\"\\n      [value]=\\\"dose.pwmSensor\\\"\\n      (input)=\\\"onChange({pwmSensor: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n</div>\\n\";","export default \"<div>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"text\\\"\\n      placeholder=\\\"Name\\\"\\n      [value]=\\\"name\\\"\\n      (input)=\\\"onNameChange($event.target.value)\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Seconds\\\"\\n      [value]=\\\"mixer.seconds\\\"\\n      (input)=\\\"onChange({seconds: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Wash seconds\\\"\\n           [value]=\\\"mixer.washSeconds\\\"\\n           (input)=\\\"onChange({washSeconds: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n</div>\\n\";","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {ConnectService} from '../../../services/connect/connect.service';\nimport {DeviceConnect} from '../../../model/device-connect';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatListOption, MatSelectionList} from '@angular/material/list';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-select-bt-device',\n  templateUrl: './select-bt-device.component.html',\n  styleUrls: ['./select-bt-device.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectBtDeviceComponent implements OnInit {\n  devices: DeviceConnect[];\n  @ViewChild(MatSelectionList, {static: true}) selectionList: MatSelectionList;\n\n  constructor(\n    private readonly connectService: ConnectService,\n    private readonly dialogRef: MatDialogRef<SelectBtDeviceComponent>,\n    @Inject(MAT_DIALOG_DATA) private readonly data: any,\n    private readonly changeDetector: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit() {\n    this.selectionList.selectedOptions = new SelectionModel<MatListOption>(false);\n    this.discover();\n  }\n\n  discover() {\n    this.connectService.discover()\n      .then(devices => {\n        this.devices = devices;\n        this.changeDetector.detectChanges();\n      });\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSelect() {\n    this.dialogRef.close(this.selectionList.selectedOptions.selected[0].value);\n  }\n\n  compareWith(o1, o2) {\n    return o1.id === o2.id;\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionDashboardSyncTime,\n  ActionDashboardUpdateTemp,\n  DashboardActionTypes,\n  selectorMaxTemp,\n  selectorMinTemp,\n  selectorStatus,\n  selectorTemp,\n  selectorTime\n} from '../../store/dashboard/dashboard.reducer';\nimport {DateTime} from '../../model/date-time';\nimport {DeviceStatus} from '../../model/device-status';\nimport {TimeChartComponent} from './time-chart/time-chart.component';\nimport {Actions, ofType} from '@ngrx/effects';\nimport {takeUntil} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  time$: Observable<DateTime>;\n  temp$: Observable<number>;\n  minTemp$: Observable<number>;\n  maxTemp$: Observable<number>;\n  status$: Observable<DeviceStatus>;\n  @ViewChild('chart', {static: true}) chart: TimeChartComponent;\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly actions: Actions,\n  ) {\n    this.time$ = this.store.pipe(select(selectorTime));\n    this.temp$ = this.store.pipe(select(selectorTemp));\n    this.minTemp$ = this.store.pipe(select(selectorMinTemp));\n    this.maxTemp$ = this.store.pipe(select(selectorMaxTemp));\n    this.status$ = this.store.pipe(select(selectorStatus));\n    this.actions\n      .pipe(ofType<ActionDashboardUpdateTemp>(DashboardActionTypes.UPDATE_TEMP))\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(action => {\n        if (!this.chart) {\n          return;\n        }\n        this.chart.add(action.payload);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  onSyncTime() {\n    this.store.dispatch(new ActionDashboardSyncTime());\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CalibrateComponent} from './calibrate.component';\nimport {CalibrateFlowSensorComponent} from './calibrate-flow-sensor/calibrate-flow-sensor.component';\nimport {CalibrateDoseComponent} from './calibrate-dose/calibrate-dose.component';\n\nconst routes: Routes = [\n  {\n    path: 'calibrate',\n    children: [\n      {\n        path: '',\n        component: CalibrateComponent,\n        pathMatch: 'full',\n        data: {\n          title: 'Calibrate',\n          actions: ['menu', 'bt', 'sync'],\n        },\n      },\n      {\n        path: 'pump/:id',\n        component: CalibrateFlowSensorComponent,\n        data: {\n          title: 'Calibrate flow sensor',\n          actions: ['back', 'sync'],\n        },\n      },\n      {\n        path: 'dose/:id',\n        component: CalibrateDoseComponent,\n        data: {\n          title: 'Calibrate dose',\n          actions: ['back', 'sync'],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CalibrateRoutingModule {\n}\n","export default \"<div>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"text\\\"\\n      placeholder=\\\"Name\\\"\\n      [value]=\\\"name\\\"\\n      (input)=\\\"onNameChange($event.target.value)\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Min flow\\\"\\n      [value]=\\\"pump.minFlow\\\"\\n      (input)=\\\"onChange({minFlow: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Starting Time\\\"\\n      [value]=\\\"pump.startingTime\\\"\\n      (input)=\\\"onChange({startingTime: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-slide-toggle class=\\\"col-12\\\" [checked]=\\\"!!pump.pwm\\\" (change)=\\\"onChange({pwm: +$event.checked})\\\">\\n    PWM\\n  </mat-slide-toggle>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"PWM Flow\\\"\\n      [value]=\\\"pump.pwmFlow\\\"\\n      (input)=\\\"onChange({pwmFlow: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      placeholder=\\\"Rate\\\"\\n      [value]=\\\"pump.rate\\\"\\n      (input)=\\\"onChange({rate: +$event.target.value})\\\"\\n    >\\n  </mat-form-field>\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CompoteComponent} from './compote.component';\nimport {CompoteDailyModule} from '../compote-daily/compote-daily.module';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [CompoteComponent],\n  exports: [CompoteComponent],\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatExpansionModule, CompoteDailyModule],\n})\nexport class CompoteModule {\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { configReducer } from './config.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConfigEffects } from './config.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('config', configReducer),\n    EffectsModule.forFeature([ConfigEffects]),\n  ],\n})\nexport class ConfigStoreModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MixerListComponent} from './mixer-list.component';\nimport {MixerModule} from './mixer/mixer.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [MixerListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    MixerModule,\n  ],\n})\nexport class MixerListModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtaXhlci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { concat, defer, EMPTY, from, Observable, of, timer } from 'rxjs';\nimport {\n  AccessControlActionTypes,\n  ActionAccessControlAdd,\n  ActionAccessControlUpdate,\n  selectorAccessControlLastEpisode,\n} from './access-control.reducer';\nimport {\n  delay,\n  distinctUntilKeyChanged,\n  exhaustMap,\n  filter,\n  first,\n  ignoreElements,\n  map,\n  mergeMap,\n  repeat,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { selectorConfigAccessControl } from '../config/config.reducer';\nimport { AccessControlService } from '../../services/access-control/access-control.service';\nimport { AccessControlConfig } from '../../model/access-control-config';\nimport { DbService } from '../../services/storage/db.service';\n\n@Injectable()\nexport class AccessControlEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n    private readonly accessControl: AccessControlService,\n    private readonly db: DbService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(AccessControlActionTypes.INIT))\n      .pipe(switchMap(() => concat(\n        from(this.db.getAccessControlEpisode()).pipe(map(items => new ActionAccessControlUpdate(items))),\n        this.store.pipe(select(selectorConfigAccessControl), distinctUntilKeyChanged('enable'))\n          .pipe(switchMap(config => config.enable ?\n            concat(this.stop(), this.start(config), this.process(config)) : this.stop(),\n          )),\n      )))\n      ;\n  }\n\n  @Effect({ dispatch: false })\n  add(): Observable<any> {\n    return this.actions$\n      .pipe(ofType<ActionAccessControlAdd>(AccessControlActionTypes.ADD))\n      .pipe(withLatestFrom(this.store.pipe(select(selectorAccessControlLastEpisode))))\n      .pipe(mergeMap(([action, episode]) =>\n        from(this.db.logAccessControl(episode.key, action.payload))))\n      ;\n  }\n\n  private start(config: AccessControlConfig): Observable<never> {\n    return concat(\n      this.accessControl.state$.pipe(filter(state => state === 'idle'), first()),\n      defer(() => this.accessControl.start(config)),\n    ).pipe(ignoreElements());\n  }\n\n  private stop(): Observable<never> {\n    return concat(\n      this.accessControl.state$.pipe(filter(state => state === 'idle'), first()),\n      defer(() => this.accessControl.stop()),\n    ).pipe(ignoreElements());\n  }\n\n  private process(config: AccessControlConfig): Observable<Action> {\n    return defer(() => of(Date.now())).pipe(switchMap(date =>\n      defer(() => this.accessControl.process()).pipe(switchMap(result => {\n        const ms = Math.max(1000 / config.fps - (Date.now() - date), 30);\n        return concat(\n          result ? of(new ActionAccessControlAdd({\n            key: date,\n            value: {\n              processTime: Date.now() - date,\n              image: this.accessControl.getImage(),\n            },\n          })) : EMPTY,\n          of(1).pipe(delay(ms), ignoreElements()),\n        );\n      })),\n    ), repeat());\n  }\n\n  private process2(config: AccessControlConfig): Observable<Action> {\n    return timer(0, 1000 / config.fps)\n      .pipe(exhaustMap(() => defer(() => of(Date.now()))\n        .pipe(switchMap(date => defer(() => this.accessControl.process())\n          .pipe(switchMap(result => {\n            return result ? of(new ActionAccessControlAdd({\n              key: date,\n              value: {\n                processTime: Date.now() - date,\n                image: this.accessControl.getImage(),\n              },\n            })) : EMPTY;\n          })),\n        ))));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { IDeviceConnect } from '../../device-connect';\nimport { SerialConnect } from '../../../model/device-connect';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrowserSerialService implements IDeviceConnect {\n  enabled = true;\n  response$: Observable<ArrayBuffer>;\n  private responseSubject = new Subject<ArrayBuffer>();\n  private port: SerialPort;\n\n  constructor() {\n    if (!('serial' in navigator)) {\n      // throw new Error('Your browser does not support Serial API');\n      console.warn('Your browser does not support Serial API');\n      this.enabled = false;\n    }\n    this.response$ = this.responseSubject.asObservable();\n    // navigator.serial.addEventListener(\"connect\", (event) => {\n    // TODO: Automatically open event.target or warn user a port is available.\n    // });\n\n    // navigator.serial.addEventListener(\"disconnect\", (event) => {\n    // TODO: Remove |event.target| from the UI.\n    // If the serial port was opened, a stream error would be observed as well.\n    // });\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  async discover(options?): Promise<SerialConnect[]> {\n    console.log('[Serial::Info] Requesting devices with options %o', options);\n    // Get all serial ports the user has previously granted the website access to.\n    const ports = await navigator['serial'].getPorts();\n    console.log(ports);\n    // Prompt user to select any serial port.\n    const port = await navigator.serial.requestPort();\n    console.log(port);\n    console.log(port.getInfo());\n    this.port = port;\n    return [{\n      id: 'id',\n      name: 'name',\n      type: 'serial',\n      port,\n    }];\n  }\n\n  async connect(device: SerialConnect): Promise<void> {\n    // Wait for the serial port to open.\n    console.log('open serial port');\n    await this.port.open({\n      baudrate: 9600,\n      baudRate: 9600,\n    } as any);\n    // dataBits: The number of data bits per frame (either 7 or 8).\n    // stopBits: The number of stop bits at the end of a frame (either 1 or 2).\n    // parity: The parity mode (either \"none\", \"even\" or \"odd\").\n    // bufferSize: The size of the read and write buffers that should be created (must be less than 16MB).\n    // flowControl: The flow control mode (either \"none\" or \"hardware\").\n    console.log('serial port is opened');\n  }\n\n  async disconnect(): Promise<void> {\n  }\n\n  async send(data: ArrayBuffer): Promise<void> {\n    console.log('serial port write');\n    const writer = this.port.writable.getWriter();\n    await writer.write(data);\n    writer.releaseLock();\n  }\n\n  async read(): Promise<void> {\n    // const reader = this.port.readable.getReader();\n    // const data = await reader.read();\n    // console.log(data);\n    while (true) {\n      try {\n        const { value, done } = await this.port.readable.getReader().read();\n        if (value) {\n          this.responseSubject.next(value);\n        }\n        if (done) {\n          console.log('[readLoop] DONE', done);\n          this.port.readable.getReader().releaseLock();\n          break;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DoseListComponent} from './dose-list.component';\nimport {DoseModule} from './dose/dose.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [DoseListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    DoseModule,\n  ],\n})\nexport class DoseListModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {ActionMonitorInit, selectorMonitorFlow, selectorMonitorTemp} from '../../store/monitor/monitor.reducer';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MonitorComponent implements OnInit {\n  flowOptions$: Observable<any>;\n  tempOptions$: Observable<any>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.tempOptions$ = this.store.pipe(select(selectorMonitorTemp))\n      .pipe(map(temp => this.getTempOptions(temp)));\n    this.flowOptions$ = this.store.pipe(select(selectorMonitorFlow))\n      .pipe(map(flow => this.getFlowOptions(flow)));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionMonitorInit());\n  }\n\n  private getTempOptions(temp) {\n    return {\n      color: ['#1edb13'],\n      title: {\n        show: true,\n        text: 'Temperature ℃',\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      dataZoom: {\n        show: true,\n        realtime: true,\n        zoomLock: true,\n        start: 80,\n        end: 100,\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: temp.xData,\n          axisTick: {\n            alignWithLabel: true,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      series: [\n        {\n          name: 'Counters',\n          type: 'line',\n          barWidth: '60%',\n          data: temp.yData,\n        },\n      ],\n    };\n  }\n\n  private getFlowOptions(flow) {\n    return {\n      color: ['#3398DB'],\n      title: {\n        show: true,\n        text: 'Flow mL/min',\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      dataZoom: {\n        show: true,\n        realtime: true,\n        zoomLock: true,\n        start: 80,\n        end: 100,\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: flow.xData,\n          axisTick: {\n            alignWithLabel: true,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      series: [\n        {\n          name: 'mL/min',\n          type: 'line',\n          barWidth: '60%',\n          data: flow.yData,\n        },\n      ],\n    };\n  }\n}\n","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let dose of doses$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-dose\\n        [dose]=\\\"dose\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        (doseChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-dose>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AccessControlComponent} from './access-control.component';\n\nconst routes: Routes = [\n  {\n    path: 'access-control',\n    component: AccessControlComponent,\n    data: {\n      title: 'Access control',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessControlRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConnectService } from './connect.service';\nimport { AppPlatformModule } from '../../platform/app-platform.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, AppPlatformModule],\n  providers: [ConnectService],\n})\nexport class ConnectModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CalibrateDoseComponent} from './calibrate-dose.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [CalibrateDoseComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n})\nexport class CalibrateDoseModule {\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DayTime } from '../../auto/struct';\n\n@Component({\n  selector: 'app-day-time',\n  templateUrl: './day-time.component.html',\n  styleUrls: ['./day-time.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DayTimeComponent implements OnInit {\n  @Input() time: DayTime;\n  @Output() timeChange = new EventEmitter<DayTime>();\n  hours = new Array(24).fill(0).map((v, i) => i);\n  minutes = new Array(60).fill(0).map((v, i) => i);\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.timeChange.next({ ...this.time, ...changes });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aW1lci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let schedule of schedules$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-schedule\\n        [schedule]=\\\"schedule\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        (scheduleChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-schedule>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MonitorComponent} from './monitor.component';\n\nconst routes: Routes = [\n  {\n    path: 'monitor',\n    component: MonitorComponent,\n    data: {\n      title: 'Monitor',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MonitorRoutingModule {\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AccessControlConfig} from '../../../model/access-control-config';\n\n@Component({\n  selector: 'app-access-control-config',\n  templateUrl: './access-control-config.component.html',\n  styleUrls: ['./access-control-config.component.scss'],\n})\nexport class AccessControlConfigComponent implements OnInit {\n  @Input() accessControl: AccessControlConfig;\n  @Output() accessControlChange = new EventEmitter<AccessControlConfig>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.accessControlChange.emit({...this.accessControl, ...changes});\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogFilterComponent} from './log-filter.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  declarations: [LogFilterComponent],\n  exports: [LogFilterComponent],\n  entryComponents: [LogFilterComponent],\n  imports: [\n    CommonModule, MatIconModule, MatButtonModule, MatCheckboxModule, MatDialogModule, MatTreeModule,\n  ],\n})\nexport class LogFilterModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompoteDailyComponent } from './compote-daily.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  declarations: [CompoteDailyComponent],\n  exports: [CompoteDailyComponent],\n  imports: [CommonModule, MatFormFieldModule, MatInputModule]\n})\nexport class CompoteDailyModule { }\n","import { Injectable } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { concat, EMPTY, from, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  filter,\n  ignoreElements,\n  map,\n  mergeMap,\n  switchMap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport {\n  ActionConnectError,\n  ActionConnectRequest,\n  ActionConnectResponse,\n  ActionConnectSetStatus,\n  ConnectActionTypes,\n  selectorConnectStatus,\n} from './connect.reducer';\nimport { ConnectService } from '../../services/connect/connect.service';\nimport { selectorBtDevice } from '../config/config.reducer';\nimport { ConnectStatus } from '../../model/connect-status';\nimport { DeviceConnect } from '../../model/device-connect';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport {\n  ActionSettingsUpdate, ActionSettingsUpdateCompoteDaily, ActionSettingsUpdateDose, ActionSettingsUpdateMixer,\n  ActionSettingsUpdatePinAssignment, ActionSettingsUpdateProgram,\n  ActionSettingsUpdatePump, ActionSettingsUpdateSchedule, ActionSettingsUpdateTimer,\n} from '../settings/settings.reducer';\n\n@Injectable()\nexport class ConnectEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n    private readonly connectBt: ConnectService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  connect(): Observable<Action> {\n    return this.actions$.pipe(ofType(ConnectActionTypes.CONNECT))\n      .pipe(withLatestFrom(this.store.pipe(select(selectorBtDevice))))\n      .pipe(switchMap(([action, device]) => device ?\n        from(this.connectBt.connect(device)) :\n        from(this.connectBt.discover())\n          .pipe(switchMap((device: DeviceConnect[]) => from(this.connectBt.connect(device[0])))),\n      ))\n      .pipe(mergeMap(() => of(new ActionConnectSetStatus(ConnectStatus.CONNECTED))))\n      .pipe(catchError(error => of(new ActionConnectError(error))))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  disconnect(): Observable<Action> {\n    return this.actions$.pipe(ofType(ConnectActionTypes.DISCONNECT))\n      .pipe(switchMap(() => from(this.connectBt.disconnect())\n        .pipe(mergeMap(() => of(new ActionConnectSetStatus(ConnectStatus.DISCONNECTED))))))\n      .pipe(catchError(error => of(new ActionConnectError(error))))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  request(): Observable<Action> {\n    return this.actions$\n      .pipe(ofType<ActionConnectRequest>(ConnectActionTypes.REQUEST))\n      .pipe(withLatestFrom(this.store.select(selectorConnectStatus)))\n      .pipe(filter(([a, status]) => status === ConnectStatus.CONNECTED ||\n        status === ConnectStatus.TRANSFER))\n      .pipe(concatMap(([action, status]) => concat(\n        of(new ActionConnectSetStatus(ConnectStatus.TRANSFER)),\n        from(this.connectBt.send(action.payload)).pipe(ignoreElements()),\n        of(new ActionConnectSetStatus(ConnectStatus.CONNECTED)),\n      )))\n      .pipe(catchError(error => of(new ActionConnectError(error))))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  response(): Observable<Action> {\n    return this.connectBt.response$\n      .pipe(map((response) => new ActionConnectResponse(response)));\n  }\n\n  @Effect({ dispatch: true })\n  responseProcess(): Observable<Action> {\n    return this.actions$.pipe(ofType<ActionConnectResponse>(ConnectActionTypes.RESPONSE))\n      .pipe(switchMap(({ payload }) => {\n        switch (payload.type) {\n          case DeviceResponseType.pump:\n            return of(new ActionSettingsUpdatePump({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.mixer:\n            return of(new ActionSettingsUpdateMixer({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.dose:\n            return of(new ActionSettingsUpdateDose({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.program:\n            return of(new ActionSettingsUpdateProgram({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.timer:\n            return of(new ActionSettingsUpdateTimer({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.schedule:\n            return of(new ActionSettingsUpdateSchedule({\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.compoteDaily:\n            return of(new ActionSettingsUpdateCompoteDaily({\n              index: payload.payload.index,\n              dailyIndex: payload.payload.dailyIndex,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinPump:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'pump',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinValve:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'valve',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinFlowSensor:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'flowSensor',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinLevelSensor:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'levelSensor',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinDose:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'dose',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinMixer:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'mixer',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n          case DeviceResponseType.pinDoseMixer:\n            return of(new ActionSettingsUpdatePinAssignment({\n              key: 'doseMixer',\n              index: payload.payload.index,\n              value: payload.payload.value,\n            }));\n        }\n        return EMPTY;\n      }));\n  }\n}\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {SmoothieChart, TimeSeries} from 'smoothie';\n\n@Component({\n  selector: 'app-time-chart',\n  templateUrl: './time-chart.component.html',\n  styleUrls: ['./time-chart.component.scss'],\n})\nexport class TimeChartComponent implements OnInit, AfterViewInit {\n  @ViewChild('chart', {static: true}) chartCanvas: ElementRef;\n  private chart: SmoothieChart;\n  private series: TimeSeries;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.chart = new SmoothieChart({\n      millisPerPixel: 5000,\n      responsive: true,\n      grid: {\n        verticalSections: 3,\n        millisPerLine: 60000,\n        sharpLines: true,\n      },\n    });\n    this.series = new TimeSeries();\n    this.chart.addTimeSeries(this.series, {\n      strokeStyle: 'rgba(0, 255, 0, 1)',\n      fillStyle: 'rgba(0, 255, 0, 0.2)',\n      lineWidth: 1,\n    });\n    this.chart.streamTo(this.chartCanvas.nativeElement, 5000);\n  }\n\n  add(value) {\n    this.series.append(new Date().getTime(), value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhYmFzZS1jb25maWcuY29tcG9uZW50LnNjc3MifQ== */\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Mixer} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-mixer',\n  templateUrl: './mixer.component.html',\n  styleUrls: ['./mixer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MixerComponent implements OnInit {\n  @Input() mixer: Mixer;\n  @Output() mixerChange = new EventEmitter<Mixer>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.mixerChange.next({...this.mixer, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MonitorComponent} from './monitor.component';\nimport {PageModule} from '../../shared/page/page.module';\nimport {NgxEchartsModule} from 'ngx-echarts';\nimport {MonitorRoutingModule} from './monitor-routing.module';\n\n@NgModule({\n  declarations: [MonitorComponent],\n  imports: [CommonModule, MonitorRoutingModule, PageModule, NgxEchartsModule],\n})\nexport class MonitorModule {\n}\n","export default \"<button mat-button (click)=\\\"discover()\\\">Discover</button>\\n<button mat-button (click)=\\\"requestStatus()\\\">Status</button>\\n<button mat-button (click)=\\\"compote()\\\">Compote</button>\\n<button mat-button (click)=\\\"mixer()\\\">Mixer</button>\\n<button mat-button (click)=\\\"getProgram()\\\">getProgram</button>\\n<button mat-button (click)=\\\"setProgram()\\\">setProgram</button>\\n<button mat-button (click)=\\\"getCompote()\\\">getCompote</button>\\n<button mat-button (click)=\\\"setCompote()\\\">setCompote</button>\\n<button mat-button (click)=\\\"getTimer()\\\">getTimer</button>\\n<button mat-button (click)=\\\"setTimer()\\\">setTimer</button>\\n<button mat-button (click)=\\\"getSchedule()\\\">getSchedule</button>\\n<button mat-button (click)=\\\"setSchedule()\\\">setSchedule</button>\\n<button mat-button (click)=\\\"simulate()\\\">simulate</button>\\n<button mat-button (click)=\\\"serialDiscover()\\\">serial discover</button>\\n<button mat-button (click)=\\\"serialConnect()\\\">serial connect</button>\\n<button mat-button (click)=\\\"syncSettings()\\\">sync</button>\\n<button mat-button (click)=\\\"resetError()\\\">Reset error</button>\\n<app-dev-access-control></app-dev-access-control>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CalibrateFlowSensorComponent} from './calibrate-flow-sensor.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [CalibrateFlowSensorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n})\nexport class CalibrateFlowSensorModule {\n}\n","import { DateDay } from '../auto/struct';\n\nexport interface DateTime {\n  minute: number;\n  second: number;\n  hour: number;\n  // day of week, sunday is day 1\n  wday: number;\n  day: number;\n  month: number;\n  // offset from 1970\n  year: number;\n}\n\nexport function dateToDateTime(date: Date): DateTime {\n  return {\n    minute: date.getMinutes(),\n    second: date.getSeconds(),\n    hour: date.getHours(),\n    wday: date.getDay(),\n    day: date.getDate(),\n    month: date.getMonth(),\n    year: date.getFullYear() - 1970,\n  };\n}\n\nexport function dateToDateDay(date: Date): DateDay {\n  return {\n    wday: date.getDay(),\n    day: date.getDate(),\n    month: date.getMonth(),\n    year: date.getFullYear() - 1970,\n  };\n}\n\nexport function dateDayToDate(date: DateDay): Date {\n  return new Date(\n    date.year + 1970,\n    date.month,\n    date.day,\n  );\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYWxpYnJhdGUtZmxvdy1zZW5zb3IuY29tcG9uZW50LnNjc3MifQ== */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TimeChartComponent} from './time-chart.component';\n\n@NgModule({\n  declarations: [TimeChartComponent],\n  exports: [TimeChartComponent],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class TimeChartModule {\n}\n","export default \"<div class=\\\"d-flex flex-wrap\\\">\\n  <mat-card class=\\\"w-100 m-1\\\">\\n    <mat-card-content class=\\\"w-100 h-100 d-flex align-items-center\\\">\\n      <mat-icon svgIcon=\\\"clock-outline\\\"></mat-icon>\\n      &nbsp;\\n      Time {{time$ | async | dateTime}}\\n      &nbsp;\\n      <button mat-icon-button (click)=\\\"onSyncTime()\\\">\\n        <mat-icon svgIcon=\\\"sync\\\"></mat-icon>\\n      </button>\\n    </mat-card-content>\\n  </mat-card>\\n  <mat-card class=\\\"w-100 m-1\\\">\\n    <mat-card-content class=\\\"w-100\\\">\\n      <div>\\n        <mat-icon svgIcon=\\\"thermometer\\\"></mat-icon>\\n        Temperature&nbsp;{{temp$ | async | number: '1.2-2'}}℃\\n        Min&nbsp;{{minTemp$ | async | number: '1.2-2'}}℃\\n        Max&nbsp;{{maxTemp$ | async | number: '1.2-2'}}℃\\n      </div>\\n      <app-time-chart #chart></app-time-chart>\\n    </mat-card-content>\\n  </mat-card>\\n  <mat-card class=\\\"w-100 m-1\\\">\\n    <mat-card-content class=\\\"w-100 h-100 d-flex align-items-center\\\">\\n      <app-status class=\\\"w-100\\\" [status]=\\\"status$ | async\\\"></app-status>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\";","/**\n * Devices parts\n */\n\nexport enum DevicePartType {\n  pump,\n  valve,\n  mixer,\n  dose,\n  doseMixer,\n  flowSensor,\n  levelSensor,\n  rtc,\n  display,\n  button,\n};\n\nexport const devicePartTypeName: Record<keyof typeof DevicePartType, string> = {\n  pump: 'Pump',\n  valve: 'Valve',\n  mixer: 'Mixer',\n  dose: 'Dose',\n  doseMixer: 'Dose Mixer',\n  flowSensor: 'Flow Sensor',\n  levelSensor: 'Level Sensor',\n  rtc: 'RTC',\n  display: 'Display',\n  button: 'Button',\n};\n\nexport type PinAssignment = Record<keyof typeof DevicePartType, number[] | null>;\n","import {Component} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsAddCompote,\n  ActionSettingsAddProgram,\n  ActionSettingsInit,\n  ActionSettingsSync,\n  selectorSettingsSync\n} from './store/settings/settings.reducer';\nimport {ActionConfigInit} from './store/config/config.reducer';\nimport {ActivatedRoute, ActivationStart, Router, UrlSegment} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {filter, map, take} from 'rxjs/operators';\nimport {ActionConnectConnect, ActionConnectDisconnect, selectorConnectStatus} from './store/connect/connect.reducer';\nimport {ConnectStatus} from './model/connect-status';\nimport {ActionDashboardInit} from './store/dashboard/dashboard.reducer';\nimport {ActionLogInit} from './store/log/log.reducer';\nimport {ActionAccessControlInit} from './store/access-control/access-control.reducer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  pageOptions$: Observable<any>;\n  btStatus$: Observable<ConnectStatus>;\n  sync$: Observable<boolean>;\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {\n    this.pageOptions$ = this.router.events\n      .pipe(filter(event => event instanceof ActivationStart))\n      .pipe(map(event => (event as ActivationStart).snapshot.data))\n    ;\n    this.btStatus$ = this.store.pipe(select(selectorConnectStatus));\n    this.sync$ = this.store.pipe(select(selectorSettingsSync));\n    this.store.dispatch(new ActionSettingsInit());\n    this.store.dispatch(new ActionConfigInit());\n    this.store.dispatch(new ActionDashboardInit());\n    this.store.dispatch(new ActionLogInit());\n    this.store.dispatch(new ActionAccessControlInit());\n  }\n\n  onBack() {\n    const route = this.getRoute();\n    const pathFromRoot = route.snapshot.pathFromRoot;\n    pathFromRoot.pop();\n    const segments = pathFromRoot.map(p => p.url).reduce((p, v) => [...p, ...v], []);\n    const path = ['/', ...segments.map((p: UrlSegment) => p.path)];\n    this.router.navigate(path);\n  }\n\n  onAdd() {\n    const route = this.getRoute();\n    switch (route.routeConfig.path) {\n      case 'compote':\n        this.store.dispatch(new ActionSettingsAddCompote());\n        break;\n      case 'program':\n        this.store.dispatch(new ActionSettingsAddProgram());\n        break;\n    }\n  }\n\n  onBt() {\n    this.store.pipe(select(selectorConnectStatus))\n      .pipe(take(1))\n      .subscribe(status => {\n        if (status === ConnectStatus.DISCONNECTED) {\n          this.store.dispatch(new ActionConnectConnect());\n        } else if (status === ConnectStatus.CONNECTED) {\n          this.store.dispatch(new ActionConnectDisconnect());\n        }\n      });\n  }\n\n  onSync() {\n    this.store.dispatch(new ActionSettingsSync());\n  }\n\n  private getRoute() {\n    let route = this.activatedRoute.firstChild;\n    let child = route;\n    while (child) {\n      if (child.firstChild) {\n        child = child.firstChild;\n        route = child;\n      } else {\n        child = null;\n      }\n    }\n    return route;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogComponent} from './log.component';\nimport {PageModule} from '../../shared/page/page.module';\nimport {LogFilterModule} from './log-filter/log-filter.module';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {LogRoutingModule} from './log-routing.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [LogComponent],\n  imports: [CommonModule, LogRoutingModule, PageModule, MatIconModule, MatButtonModule, ScrollingModule, LogFilterModule],\n})\nexport class LogModule {\n}\n","import { convert8bitTo7bit, crc6, DeviceIOMarker, DeviceIOMeta, getLength } from '../../model/device-io';\n\n// tslint:disable:no-bitwise\nexport class DeviceRequestSerializer {\n  constructor(\n    private readonly meta: { [key: string]: DeviceIOMeta | string },\n    private readonly struct: { [key: string]: DeviceIOMeta },\n    private readonly mapper: Record<string | number, string | number>,\n  ) {\n  }\n\n  serialize({ type, payload }: { type: number; payload?: any }): ArrayBuffer {\n    const typeName = this.mapper[type];\n    const meta = this.meta[typeName];\n    const length = getLength(meta, this.struct);\n    const raw = new ArrayBuffer(length);\n    const rawView = new DataView(raw);\n    let offset = 0;\n    /**\n     * convert data to bytes and save it to the buffer\n     * @param o data to convert\n     * @param m metadata\n     */\n    const writeBytes = (o, m) => {\n      if (typeof m === 'string') {\n        m = this.struct[m];\n      }\n      Object.keys(m).forEach(key => {\n        let field = m[key];\n        const value = o[key];\n        if (typeof field === 'string') {\n          field = { type: 'object', itemMeta: this.struct[field] };\n        }\n        switch (field.type) {\n          case 'list':\n            value.forEach(c => writeBytes(c, field.itemMeta));\n            return;\n          case 'object':\n            writeBytes(value, field.itemMeta);\n            return;\n          case 'uint8':\n            rawView.setUint8(offset, value);\n            offset += 1;\n            return;\n          case 'uint16':\n            rawView.setUint16(offset, value, true);\n            offset += 2;\n            return;\n          case 'uint32':\n            rawView.setUint32(offset, value, true);\n            offset += 4;\n            return;\n          case 'uint8[]':\n            value.forEach(v => {\n              rawView.setUint8(offset, v);\n              offset += 1;\n            });\n            return;\n          case 'uint16[]':\n            value.forEach(v => {\n              rawView.setUint16(offset, v, true);\n              offset += 2;\n            });\n            return;\n          case 'uint32[]':\n            value.forEach(v => {\n              rawView.setUint32(offset, v, true);\n              offset += 4;\n            });\n            return;\n          case 'string':\n            // wip\n            // rawView.setUint8(offset, value.length);\n            // offset += 1;\n            // for (let i = 0; i < value.length; i++) {\n            //   rawView.setUint8(offset, value.charCodeAt(i));\n            //   offset += 1;\n            // }\n            return;\n        }\n      });\n    };\n    writeBytes(payload, meta);\n    const rawPayload = convert8bitTo7bit(new Uint8Array(raw));\n    // begin marker + payload + end marker\n    const result = new ArrayBuffer(rawPayload.byteLength + 2);\n    const resultView = new DataView(result);\n    resultView.setUint8(0, type | DeviceIOMarker.beginMessage);\n    (new Uint8Array(result)).set(rawPayload, 1);\n    const crc = crc6(new Uint8Array(raw));\n    resultView.setUint8(result.byteLength - 1, crc | DeviceIOMarker.endMessage);\n    // console.log(Array.from(new Uint8Array(result)).map(b => b.toString(16)).join(' '));\n    return result;\n  }\n}\n","export default \"canvas {\\n  width: 100%;\\n  height: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcdGltZS1jaGFydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBQ0YiLCJmaWxlIjoidGltZS1jaGFydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImNhbnZhcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcwcHg7XG59XG4iXX0= */\";","import { Injectable } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { merge, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ActionLogAdd, LogActionTypes, LogItemType } from './log.reducer';\nimport {\n  ActionConnectConnect,\n  ActionConnectDisconnect,\n  ActionConnectRequest,\n  ActionConnectResponse,\n  ConnectActionTypes,\n} from '../connect/connect.reducer';\nimport { requestToString, responseToString } from '../../services/connect/message-to-string';\n\n@Injectable()\nexport class LogEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(LogActionTypes.INIT))\n      .pipe(switchMap(() => merge(\n        this.actions$\n          .pipe(ofType<ActionConnectConnect>(ConnectActionTypes.CONNECT))\n          .pipe(map(action => ({\n            time: new Date(),\n            icon: 'bluetooth',\n            text: 'bluetooth connect',\n            type: LogItemType.connect,\n          }))),\n        this.actions$\n          .pipe(ofType<ActionConnectDisconnect>(ConnectActionTypes.DISCONNECT))\n          .pipe(map(action => ({\n            time: new Date(),\n            icon: 'bluetooth-off',\n            text: 'bluetooth disconnect',\n            type: LogItemType.disconnect,\n          }))),\n        this.actions$\n          .pipe(ofType<ActionConnectRequest>(ConnectActionTypes.REQUEST))\n          .pipe(map(action => ({\n            time: new Date(),\n            icon: 'chevron-right',\n            text: requestToString(action.payload),\n            type: LogItemType.request,\n            subType: action.payload.type,\n          }))),\n        this.actions$\n          .pipe(ofType<ActionConnectResponse>(ConnectActionTypes.RESPONSE))\n          .pipe(map(action => ({\n            time: new Date(),\n            icon: 'chevron-left',\n            text: responseToString(action.payload),\n            type: LogItemType.response,\n            subType: action.payload.type,\n          }))),\n        this.actions$\n          .pipe(ofType<ActionConnectResponse>(ConnectActionTypes.ERROR))\n          .pipe(map(action => ({\n            time: new Date(),\n            icon: 'alert-circle-outline',\n            text: 'connect error',\n            type: LogItemType.error,\n          }))),\n        )\n          .pipe(map(item => new ActionLogAdd(item))),\n      ))\n      ;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DoseComponent} from './dose.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [DoseComponent],\n  exports: [DoseComponent],\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatSlideToggleModule],\n})\nexport class DoseModule {\n}\n","export default \"<div>\\n  Time\\n  <app-device-monitor\\n    [config]=\\\"config.time\\\"\\n    (configChange)=\\\"onChange({time: $event})\\\"\\n  ></app-device-monitor>\\n</div>\\n<div>\\n  Temp\\n  <app-device-monitor\\n    [config]=\\\"config.temp\\\"\\n    (configChange)=\\\"onChange({temp: $event})\\\"\\n  ></app-device-monitor>\\n</div>\\n<div>\\n  Status\\n  <app-device-monitor\\n    [config]=\\\"config.status\\\"\\n    (configChange)=\\\"onChange({status: $event})\\\"\\n  ></app-device-monitor>\\n</div>\\n\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-database-config',\n  templateUrl: './database-config.component.html',\n  styleUrls: ['./database-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatabaseConfigComponent implements OnInit {\n  @Input() sizes;\n  @Input() update;\n  @Output() updateSizes = new EventEmitter<void>();\n  @Output() clear = new EventEmitter<string[]>();\n  selection = new SelectionModel<string>(true);\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClear() {\n    this.clear.emit(this.selection.selected);\n    this.selection.clear();\n  }\n}\n","export default \":host ::ng-deep .cdk-virtual-scroll-content-wrapper {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n}\\n\\napp-camshot {\\n  width: 64px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcY2Ftc2hvdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtBQUNGIiwiZmlsZSI6ImNhbXNob3RzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5jZGstdmlydHVhbC1zY3JvbGwtY29udGVudC13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiBub3dyYXA7XG59XG5cbmFwcC1jYW1zaG90IHtcbiAgd2lkdGg6IDY0cHg7XG59XG4iXX0= */\";","export default \"<div>\\n  <button mat-button (click)=\\\"onFilter()\\\" class=\\\"mt-1\\\">\\n    <mat-icon svgIcon=\\\"filter-outline\\\" class=\\\"align-middle\\\"></mat-icon>\\n    Filters...\\n  </button>\\n  <button mat-icon-button (click)=\\\"onFilterReset()\\\" *ngIf=\\\"hasFilter$ | async\\\">\\n    <mat-icon svgIcon=\\\"close-circle-outline\\\"></mat-icon>\\n  </button>\\n</div>\\n<cdk-virtual-scroll-viewport itemSize=\\\"24\\\" class=\\\"flex-fill\\\">\\n  <div *cdkVirtualFor=\\\"let log of log$ | async\\\">\\n    {{log.time | date: 'HH:mm:ss'}}\\n    <mat-icon [svgIcon]=\\\"log.icon\\\"></mat-icon>\\n    {{log.text}}\\n  </div>\\n</cdk-virtual-scroll-viewport>\\n\";","export default \"<mat-nav-list>\\n  <a mat-list-item *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.route\\\">\\n    <mat-icon *ngIf=\\\"link.icon\\\" [svgIcon]=\\\"link.icon\\\"></mat-icon>\\n    &nbsp;\\n    {{link.title}}\\n  </a>\\n</mat-nav-list>\\n\";","export default \"<canvas #chart></canvas>\\n\";","export default \".mat-dialog-content {\\n  min-height: 4em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzZWxlY3QtaW5kZXguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FBQ0YiLCJmaWxlIjoic2VsZWN0LWluZGV4LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGVudCB7XG4gIG1pbi1oZWlnaHQ6IDRlbTtcbn1cbiJdfQ== */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DashboardComponent} from '../../components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {\n}\n","export default \"<app-page\\n  [options]=\\\"pageOptions$ | async\\\"\\n  [btStatus]=\\\"btStatus$ | async\\\"\\n  [syncStatus]=\\\"sync$ | async\\\"\\n  (back)=\\\"onBack()\\\"\\n  (add)=\\\"onAdd()\\\"\\n  (bt)=\\\"onBt()\\\"\\n  (sync)=\\\"onSync()\\\"\\n>\\n  <router-outlet></router-outlet>\\n</app-page>\\n\";","import {APP_INITIALIZER, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DevComponent} from './dev.component';\r\nimport {PageModule} from '../../shared/page/page.module';\r\nimport {SelectIndexModule} from '../../shared/select-index/select-index.module';\r\nimport {DeviceSimulateService} from './device-simulate.sevice';\r\nimport {environment} from '../../../environments/environment';\r\nimport {DevRoutingModule} from './dev-routing.module';\r\nimport {DevAccessControlModule} from './access-control/dev-access-control.module';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [DevComponent],\r\n  imports: [CommonModule, DevRoutingModule, PageModule, SelectIndexModule, MatListModule, MatIconModule, DevAccessControlModule],\r\n  providers: [\r\n    ...(environment.platform === 'mock' ? [DeviceSimulateService] : []),\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (deviceSimulateService: DeviceSimulateService) => () => deviceSimulateService.init(),\r\n      deps: [DeviceSimulateService],\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class DevModule {\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChooseDialogComponent, ChooseDialogParams } from './choose-dialog.component';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ChooseDialogService {\n\n  constructor(\n    public readonly dialog: MatDialog,\n  ) {\n  }\n\n  choose(data: ChooseDialogParams): Observable<any> {\n    const dialogRef = this.dialog.open(ChooseDialogComponent, { data });\n    return dialogRef.afterClosed();\n  }\n}\n","// tslint:disable:no-bitwise\n\nexport enum DeviceIOMarker {\n  beginMessage = 0b10000000,\n  endMessage = 0b11000000,\n  payloadMask = 0b01111111,\n  cmdMask = 0b01000000,\n  cmdPayloadMask = 0b00111111,\n  mask = 0b10000000,\n}\n\nexport type DeviceIOField =\n  | DeviceIOFieldSimple\n  | DeviceIOFieldArray\n  | DeviceIOFieldList\n  | DeviceIOFieldObject\n  ;\n\nexport interface DeviceIOFieldSimple {\n  type: 'uint8' | 'uint16' | 'uint32';\n}\n\nexport interface DeviceIOFieldArray {\n  type: 'uint8[]' | 'uint16[]' | 'uint32[]' | 'string';\n  length: number;\n}\n\nexport interface DeviceIOFieldList {\n  type: 'list';\n  itemMeta: string | DeviceIOMeta;\n  length: number;\n}\n\nexport interface DeviceIOFieldObject {\n  type: 'object';\n  itemMeta: string | DeviceIOMeta;\n}\n\nexport interface DeviceIOMeta {\n  [key: string]: string | DeviceIOField;\n}\n\n/**\n * convert bytes buffer\n * @param raw\n */\nexport function convert7bitTo8bit(raw: Uint8Array): Uint8Array {\n  // console.log('7bit', raw);\n  const length = Math.floor(raw.byteLength * 7 / 8);\n  const result = new Uint8Array(length);\n  let value = 0;\n  let bytes = 0;\n  let index = 0;\n  for (let i = 0; i < raw.byteLength; i++) {\n    const byte = raw[i];\n    value = value + (byte << bytes);\n    bytes += 7;\n    if (bytes < 8) {\n      continue;\n    }\n    result[index] = value & 255;\n    index += 1;\n    bytes -= 8;\n    value = value >> 8;\n  }\n  return result;\n}\n\nexport function convert8bitTo7bit(raw: Uint8Array): Uint8Array {\n  // console.log('8bit ', raw);\n  const length7 = Math.ceil(raw.byteLength * 8 / 7);\n  const result = new Uint8Array(length7);\n  for (let i = 0; i < length7; i++) {\n    const index = Math.floor(i * 7 / 8);\n    let value = raw[index] + ((raw[index + 1] || 0) << 8);\n    value = (value >> (8 - (i % 8)) % 8) & DeviceIOMarker.payloadMask;\n    result[i] = value;\n  }\n  return result;\n}\n\nexport function crc6(raw: Uint8Array): number {\n  let bits = raw.length * 8;\n  let i = 0;\n  let crc = 0xfc;\n  let index = 0;\n  while (bits--) {\n    if (!i--) {\n      i = 7;\n      crc ^= raw[index++];\n    }\n    crc = (crc << 1 ^ (crc & 0x80 ? 0x9c : 0)) & 255;\n  }\n  return crc >> 2 & 0x3f;\n}\n\nexport function getLength(\n  metaOrName: string | DeviceIOMeta,\n  struct: { [key: string]: DeviceIOMeta },\n): number {\n  if (!metaOrName) {\n    return 0;\n  }\n  const meta = typeof metaOrName === 'string' ? struct[metaOrName] : metaOrName;\n  return Object.keys(meta).reduce((result, key) => {\n    const fieldOrName = meta[key];\n    // console.error('fieldOrName', fieldOrName);\n    const field: DeviceIOField = typeof fieldOrName === 'string' ?\n      { type: 'object', itemMeta: struct[fieldOrName] } : fieldOrName;\n    switch (field.type) {\n      case 'list':\n        return result + field.length * getLength(field.itemMeta, struct);\n      case 'object':\n        return result + getLength(field.itemMeta, struct);\n      case 'uint8':\n        return result + 1;\n      case 'uint16':\n        return result + 2;\n      case 'uint32':\n        return result + 4;\n      case 'uint8[]':\n        return result + 1 * field.length;\n      case 'uint16[]':\n        return result + 2 * field.length;\n      case 'uint32[]':\n        return result + 4 * field.length;\n      case 'string':\n        return result + 1 * field.length;\n    }\n  }, 0);\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PinSelectComponent} from './pin-select.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [PinSelectComponent],\n  exports: [PinSelectComponent],\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n})\nexport class PinSelectModule {\n}\n","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let program of programs$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-program\\n        [program]=\\\"program\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        [compotes]=\\\"compotes$ | async\\\"\\n        [valves]=\\\"valves\\\"\\n        (programChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-program>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","export default \".mat-list-item {\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkZXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0YiLCJmaWxlIjoiZGV2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1saXN0LWl0ZW0ge1xuICBoZWlnaHQ6IGF1dG87XG59XG4iXX0= */\";","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeName,\n  ActionSettingsChangeTimer, ActionSettingsLoadProgram, ActionSettingsLoadTimer,\n  ActionSettingsRemoveTimer,\n  selectorNames,\n  selectorTimers,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Timer} from '../../../auto/struct';\nimport {Program} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-timer-list',\n  templateUrl: './timer-list.component.html',\n  styleUrls: ['./timer-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerListComponent implements OnInit {\n  timers$: Observable<Timer[]>;\n  names$: Observable<string[]>;\n  programs$: Observable<Program[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.timers$ = this.store.pipe(select(selectorTimers));\n    this.names$ = this.store.pipe(select(selectorNames('timer')));\n    this.programs$ = this.store.pipe(select(selectorNames('program')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadTimer());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'timer', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeTimer({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveTimer(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {DbAccessControlEpisode, DbService} from '../../../services/storage/db.service';\nimport {BehaviorSubject, from, Subject} from 'rxjs';\nimport {switchMap, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-episode',\n  templateUrl: './episode.component.html',\n  styleUrls: ['./episode.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EpisodeComponent implements OnInit {\n  @Input() set episode(value: DbAccessControlEpisode) {\n    this.episodeSubject.next(value);\n  }\n  get episode(): DbAccessControlEpisode {\n    return this.episodeSubject.value;\n  }\n  episodeKeys;\n  private episodeSubject = new BehaviorSubject<DbAccessControlEpisode>(null);\n\n  constructor(\n   db: DbService,\n   cd: ChangeDetectorRef,\n  ) {\n    this.episodeSubject.pipe(switchMap(episode =>\n      from(db.getAccessControlEpisodeKeys(episode))\n        // .pipe(startWith([]))\n    ))\n      .subscribe(keys => {\n        this.episodeKeys = keys;\n        cd.markForCheck();\n      });\n  }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActionConnectRequest } from '../../store/connect/connect.reducer';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { Store } from '@ngrx/store';\nimport { deviceConfig } from '../../model/device-config';\nimport { SelectIndexService } from '../../shared/select-index/select-index.service';\nimport { map, switchMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-manual-control',\n  templateUrl: './manual-control.component.html',\n  styleUrls: ['./manual-control.component.scss'],\n})\nexport class ManualControlComponent implements OnInit {\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly selectIndexService: SelectIndexService,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  onFertigate() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(programId => {\n        if (typeof programId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.fertigate, payload: { programId: 0 } }));\n      });\n  }\n\n  onPumpIn() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(programId => {\n        if (typeof programId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.pumpIn, payload: { programId: 0 } }));\n      });\n  }\n\n  onDose() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .pipe(switchMap(programId => typeof programId === 'undefined' ? EMPTY :\n        this.selectIndexService.select({ count: deviceConfig.doseCount, title: 'Select dose' })\n          .pipe(map(doseId => [programId, doseId])),\n      ))\n      .subscribe(([programId, doseId]) => {\n        if (typeof programId === 'undefined' || typeof doseId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.dose, payload: { programId, doseId } }));\n      });\n  }\n\n  onDoseMix() {\n    this.selectIndexService.select({ count: deviceConfig.doseCount, title: 'Select dose' })\n      .subscribe(mixerId => {\n        if (typeof mixerId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.mixDose, payload: { mixerId } }));\n      });\n  }\n\n  onMix() {\n    this.store.dispatch(new ActionConnectRequest(\n      { type: DeviceRequestType.mix, payload: { mixerId: 0 } }));\n  }\n\n  onIrrigate() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(programId => {\n        if (typeof programId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.irrigate, payload: { programId } }));\n      });\n  }\n\n  onWash() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(programId => {\n        if (typeof programId === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          { type: DeviceRequestType.wash, payload: { programId } }));\n      });\n  }\n}\n","import { DeviceRequestType } from '../../model/device-request-type';\nimport { DeviceRequest } from '../../auto/device-request';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport { DeviceResponse } from '../../auto/device-response';\n\nexport function requestToString(\n  request: DeviceRequest,\n) {\n  return `${DeviceRequestType[request.type]} ${JSON.stringify((request as any).payload)}`;\n}\n\nexport function responseToString(\n  response: DeviceResponse,\n) {\n  return `${DeviceResponseType[response.type]} ${JSON.stringify(response)}`;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2Nlc3MtY29udHJvbC1jb25maWcuY29tcG9uZW50LnNjc3MifQ== */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ManualControlComponent} from './manual-control.component';\nimport {ManualControlRoutingModule} from './manual-control-routing.module';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ManualControlComponent],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatIconModule,\n    ManualControlRoutingModule,\n  ],\n})\nexport class ManualControlModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MixerComponent} from './mixer.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  declarations: [MixerComponent],\n  exports: [MixerComponent],\n  imports: [CommonModule, MatFormFieldModule, MatInputModule],\n})\nexport class MixerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangePinAssignment,\n  ActionSettingsLoadPinAssignment,\n  selectorPinAssignment, selectorPinDoseMixers,\n  selectorPinDoses,\n  selectorPinFlowSensors, selectorPinLevelSensors,\n  selectorPinMixers,\n  selectorPinPumps,\n  selectorPinValves,\n} from '../../../store/settings/settings.reducer';\nimport { Observable, Subject } from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport { deviceInfo, getAllPins } from '../../../model/device-info';\nimport { devicePartTypeName } from '../../../model/device-parts';\n\n@Component({\n  selector: 'app-pin-assignment',\n  templateUrl: './pin-assignment.component.html',\n  styleUrls: ['./pin-assignment.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PinAssignmentComponent implements OnInit, OnDestroy {\n  pins = getAllPins();\n  pins2 = Object.keys(deviceInfo.mega2560.pins)\n    .map(p => ({ key: +p, value: deviceInfo.mega2560.pins[p] }))\n    .sort((a, b) => a.key - b.key)\n  ;\n  pinAssignment;\n  devicePartTypeName = devicePartTypeName;\n  pinValves$: Observable<number[]>;\n  pinPumps$: Observable<number[]>;\n  pinFlowSensors$: Observable<number[]>;\n  pinMixers$: Observable<number[]>;\n  pinDoses$: Observable<number[]>;\n  pinDoseMixers$: Observable<number[]>;\n  pinLevelSensors$: Observable<number[]>;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new ActionSettingsLoadPinAssignment());\n    this.pinPumps$ = this.store.pipe(select(selectorPinPumps))\n    this.pinFlowSensors$ = this.store.pipe(select(selectorPinFlowSensors))\n    this.pinMixers$ = this.store.pipe(select(selectorPinMixers))\n    this.pinDoses$ = this.store.pipe(select(selectorPinDoses))\n    this.pinDoseMixers$ = this.store.pipe(select(selectorPinDoseMixers))\n    this.pinValves$ = this.store.pipe(select(selectorPinValves))\n    this.pinLevelSensors$ = this.store.pipe(select(selectorPinLevelSensors))\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  onChange(key: string, index: number, value: number): void {\n    this.store.dispatch(new ActionSettingsChangePinAssignment({key, index, value}));\n  }\n}\n","export enum ConnectStatus {\n  CONNECTING = 'connecting',\n  CONNECTED = 'connected',\n  DISCONNECTING = 'disconnecting',\n  DISCONNECTED = 'disconnected',\n  TRANSFER = 'transfer',\n}\n","import {BrowserModule, DomSanitizer} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {DashboardModule} from './components/dashboard/dashboard.module';\nimport {SettingsModule} from './components/settings/settings.module';\nimport {ConnectModule} from './services/connect/connect.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ActionReducer, StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {MonitorModule} from './components/monitor/monitor.module';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {LogModule} from './components/log/log.module';\nimport {SettingsStoreModule} from './store/settings/settings-store.module';\nimport {ConfigStoreModule} from './store/config/config-store.module';\nimport {PageModule} from './shared/page/page.module';\nimport {DevModule} from './components/dev/dev.module';\nimport {ConnectStoreModule} from './store/connect/connect-store.module';\nimport {DashboardStoreModule} from './store/dashboard/dashboard-store.module';\nimport {StorageModule} from './services/storage/storage.module';\nimport {MonitorStoreModule} from './store/monitor/monitor-store.module';\nimport {ConfigModule} from './components/config/config.module';\nimport {LogStoreModule} from './store/log/log-store.module';\nimport {CalibrateModule} from './components/calibrate/calibrate.module';\nimport {ManualControlModule} from './components/manual-control/manual-control.module';\nimport {AccessControlModule} from './components/access-control/access-control.module';\nimport {MatIconRegistry} from '@angular/material/icon';\n\nexport function logReducer(reducer: ActionReducer<any>): ActionReducer<any> {\n  return (state, action) => {\n    const newState = reducer(state, action);\n    console.log(`action ${action.type}`, {\n      payload: (action as any).payload,\n      oldState: state,\n      newState,\n    });\n    return newState;\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ConnectModule,\n    PageModule,\n    DashboardModule,\n    SettingsModule,\n    MonitorModule,\n    LogModule,\n    DevModule,\n    ConfigModule,\n    SettingsStoreModule,\n    ConfigStoreModule,\n    ConnectStoreModule,\n    DashboardStoreModule,\n    MonitorStoreModule,\n    StorageModule,\n    LogStoreModule,\n    CalibrateModule,\n    ManualControlModule,\n    AccessControlModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n    StoreModule.forRoot({}, {metaReducers: environment.production ? [] : [logReducer]}),\n    EffectsModule.forRoot([]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIconSet(sanitizer.bypassSecurityTrustResourceUrl(\n      'assets/sprite.svg'));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'memory',\n  pure: true,\n})\nexport class MemoryPipe implements PipeTransform {\n  transform(value: number): string {\n    const thresh = 1024;\n    if (Math.abs(value) < thresh) {\n      return `${value} B`;\n    }\n    const units = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let u = -1;\n    do {\n      value /= thresh;\n      ++u;\n    } while (Math.abs(value) >= thresh && u < units.length - 1);\n    return `${value.toFixed(1)} ${units[u]}`;\n  }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {deviceConfig, PumpType} from '../../model/device-config';\n\n@Component({\n  selector: 'app-calibrate',\n  templateUrl: './calibrate.component.html',\n  styleUrls: ['./calibrate.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CalibrateComponent {\n  links = [\n    ...new Array(deviceConfig.pumpCount).fill(0).map((_, index) => ({\n      route: ['/', 'calibrate', 'pump', '' + index],\n      title: `Pump ${PumpType[index]}`,\n      icon: index === PumpType.in ? 'water-pump' : 'fountain',\n    })),\n    ...new Array(deviceConfig.doseCount).fill(0).map((_, index) => ({\n      route: ['/', 'calibrate', 'dose', '' + index],\n      title: `Dose ${index + 1}`,\n      icon: 'eyedropper',\n    })),\n  ];\n\n  constructor() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXktdGltZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProgramListComponent} from './program-list.component';\nimport {ProgramModule} from './program/program.module';\nimport {SettingsStoreModule} from '../../../store/settings/settings-store.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ProgramListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    SettingsStoreModule,\n    ProgramModule,\n  ],\n})\nexport class ProgramListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpenCvConfigToken, OpenCVService } from './open-cv.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    OpenCVService,\n    { provide: OpenCvConfigToken, useValue: {} },\n  ],\n})\nexport class OpenCvModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ManualControlComponent} from './manual-control.component';\n\nconst routes: Routes = [\n  {\n    path: 'manual-control',\n    component: ManualControlComponent,\n    data: {\n      title: 'Manual Control',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManualControlRoutingModule {\n}\n","import { Observable } from 'rxjs';\nimport { DeviceConnect } from '../model/device-connect';\nimport { InjectionToken } from '@angular/core';\n\nexport const DEVICE_CONNECT = new InjectionToken('DEVICE_CONNECT');\n\nexport interface IDeviceConnect {\n  readonly response$: Observable<ArrayBuffer>;\n\n  discover(options?: any): Promise<DeviceConnect[]>;\n\n  connect(device: DeviceConnect): Promise<void>;\n\n  disconnect(): Promise<void>;\n\n  send(data: ArrayBuffer): Promise<void>;\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'bits',\n  pure: true,\n})\nexport class BitsPipe implements PipeTransform {\n  transform(value: number[]): number[] {\n    const bits: number[] = [];\n    for (let i = 0; i < value.length; i++) {\n      let num = value[i];\n      for (let j = 0; j < 8; j++) {\n        // tslint:disable-next-line:no-bitwise\n        if (num & 1) {\n          bits.push(i * 8 + j + 1);\n        }\n        // tslint:disable-next-line:no-bitwise\n        num >>= 1;\n      }\n    }\n    return bits;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9ncmFtLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocalStorageService } from './local-storage.service';\nimport { DbService } from './db.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [\n    LocalStorageService,\n    DbService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (dbService: DbService) => () => dbService.init(),\n      deps: [DbService],\n      multi: true,\n    },\n  ],\n})\nexport class StorageModule {\n}\n","export default \"<cdk-virtual-scroll-viewport itemSize=\\\"64\\\" class=\\\"h-100 w-100 overflow-auto\\\" orientation=\\\"horizontal\\\">\\n  <app-camshot\\n    *cdkVirtualFor=\\\"let key of keys; trackBy: trackByKey\\\"\\n    class=\\\"d-block\\\"\\n    [key]=\\\"key\\\"\\n  ></app-camshot>\\n</cdk-virtual-scroll-viewport>\\n\";","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { logReducer } from './log.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LogEffects } from './log.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('log', logReducer),\n    EffectsModule.forFeature([LogEffects]),\n  ],\n})\nexport class LogStoreModule {\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \"<mat-form-field>\\n  <input matInput\\n    type=\\\"number\\\"\\n    placeholder=\\\"Days\\\"\\n    [value]=\\\"compoteDaily.days\\\"\\n    (input)=\\\"onChange({days: +$event.target.value})\\\"\\n  >\\n</mat-form-field>\\n<mat-form-field>\\n  <input matInput\\n    type=\\\"number\\\"\\n    placeholder=\\\"Light schedule\\\"\\n    [value]=\\\"compoteDaily.schedule\\\"\\n    (input)=\\\"onChange({schedule: +$event.target.value})\\\"\\n  >\\n</mat-form-field>\\n<mat-form-field>\\n  <input matInput\\n    type=\\\"number\\\"\\n    placeholder=\\\"Volume (mL)\\\"\\n    [value]=\\\"compoteDaily.volume\\\"\\n    (input)=\\\"onChange({volume: +$event.target.value})\\\"\\n  >\\n</mat-form-field>\\n<mat-form-field>\\n  <input matInput\\n    type=\\\"number\\\"\\n    placeholder=\\\"Washing Volume (mL)\\\"\\n    [value]=\\\"compoteDaily.washVolume\\\"\\n    (input)=\\\"onChange({washVolume: +$event.target.value})\\\"\\n  >\\n</mat-form-field>\\n<ng-container *ngFor=\\\"let soil of soils; let index = index; trackBy: trackByIndex\\\">\\n  <mat-form-field>\\n    <input matInput\\n      type=\\\"number\\\"\\n      [placeholder]=\\\"(soil || (index + 1)) + ' Volume (0.1 mL)'\\\"\\n      [value]=\\\"compoteDaily.dose[index]\\\"\\n      (input)=\\\"onDoseChange(index, +$event.target.value)\\\"\\n    >\\n  </mat-form-field>\\n</ng-container>\\n\";","import { Action } from '@ngrx/store';\nimport { DateTime } from '../../auto/struct';\nimport { DeviceStatus } from '../../model/device-status';\n\nexport enum DashboardActionTypes {\n  INIT = '[Dashboard] Init',\n  UPDATE_TIME = '[Dashboard] Update time',\n  UPDATE_TEMP = '[Dashboard] Update temp',\n  UPDATE_STATUS = '[Dashboard] Update status',\n  SYNC_TIME = '[Dashboard] Sync time',\n}\n\nexport class ActionDashboardInit implements Action {\n  readonly type = DashboardActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionDashboardUpdateTime implements Action {\n  readonly type = DashboardActionTypes.UPDATE_TIME;\n\n  constructor(public readonly payload: DateTime) {\n  }\n}\n\nexport class ActionDashboardUpdateTemp implements Action {\n  readonly type = DashboardActionTypes.UPDATE_TEMP;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionDashboardUpdateStatus implements Action {\n  readonly type = DashboardActionTypes.UPDATE_STATUS;\n\n  constructor(public readonly payload: DeviceStatus) {\n  }\n}\n\nexport class ActionDashboardSyncTime implements Action {\n  readonly type = DashboardActionTypes.SYNC_TIME;\n\n  constructor() {\n  }\n}\n\nexport type DashboardActions =\n  | ActionDashboardInit\n  | ActionDashboardUpdateTime\n  | ActionDashboardUpdateTemp\n  | ActionDashboardUpdateStatus\n  | ActionDashboardSyncTime\n  ;\n\nexport interface DashboardState {\n  time: DateTime;\n  temp: number;\n  minTemp: number;\n  maxTemp: number;\n  status: DeviceStatus;\n}\n\nexport const initialDashboardState: DashboardState = {\n  time: {\n    minute: 0,\n    second: 0,\n    hour: 0,\n    wday: 0,\n    day: 0,\n    month: 0,\n    year: 0,\n  },\n  temp: 0,\n  minTemp: -99,\n  maxTemp: 99,\n  status: {\n    state: 0,\n    cmdState: 0,\n    valve: 0,\n    flow: 0,\n    volume: 0,\n    totalVolume: 0,\n    mix: 0,\n    dose: 0,\n  },\n};\n\nexport const selectorDashboard = state => state.dashboard as DashboardState;\nexport const selectorTime = state => (state.dashboard as DashboardState).time;\nexport const selectorTemp = state => (state.dashboard as DashboardState).temp;\nexport const selectorMinTemp = state => (state.dashboard as DashboardState).minTemp;\nexport const selectorMaxTemp = state => (state.dashboard as DashboardState).maxTemp;\nexport const selectorStatus = state => (state.dashboard as DashboardState).status;\n\nexport function dashboardReducer(\n  state: DashboardState = initialDashboardState,\n  action: DashboardActions,\n): DashboardState {\n  switch (action.type) {\n    case DashboardActionTypes.UPDATE_TIME:\n      return updateTime(state, action.payload);\n    case DashboardActionTypes.UPDATE_TEMP:\n      return updateTemp(state, action.payload);\n    case DashboardActionTypes.UPDATE_STATUS:\n      return updateStatus(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction updateTime(state: DashboardState, time: DateTime): DashboardState {\n  return { ...state, time };\n}\n\nfunction updateTemp(state: DashboardState, temp: number): DashboardState {\n  return { ...state, temp, minTemp: Math.min(temp, state.minTemp), maxTemp: Math.max(temp, state.maxTemp) };\n}\n\nfunction updateStatus(state: DashboardState, status: DeviceStatus): DashboardState {\n  return { ...state, status };\n}\n","import { NgModule } from '@angular/core';\nimport { CameraService } from './camera.service';\n\n@NgModule({\n  providers: [\n    CameraService,\n  ],\n})\nexport class CameraModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYW1zaG90LmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<mat-tab-group class=\\\"h-100\\\">\\n  <mat-tab label=\\\"Blocks\\\">\\n    <mat-accordion class=\\\"w-100\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Pump\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Pump pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinPumps$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('pump', $event.index, $event.value)\\\"\\n            title=\\\"Pump\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Flow sensor\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Flow sensor pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinFlowSensors$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('flowSensor', $event.index, $event.value)\\\"\\n            title=\\\"Flow Sensor\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Mixer\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Mixer pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinMixers$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('mixer', $event.index, $event.value)\\\"\\n            title=\\\"Mixer\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Dose\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Dose pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinDoses$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('dose', $event.index, $event.value)\\\"\\n            title=\\\"Dose\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Dose Mixer\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Dose Mixer pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinDoseMixers$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('doseMixer', $event.index, $event.value)\\\"\\n            title=\\\"Dose Mixer\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Valve\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Valve pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinValves$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('valve', $event.index, $event.value)\\\"\\n            title=\\\"Valve\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Level sensor\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            Level sensor pin assignment\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <ng-template matExpansionPanelContent>\\n          <app-pin-select\\n            [pins]=\\\"pinLevelSensors$ | async\\\"\\n            [allPins]=\\\"pins\\\"\\n            (pinChange)=\\\"onChange('levelSensor', $event.index, $event.value)\\\"\\n            title=\\\"Level Sensor\\\"\\n          ></app-pin-select>\\n        </ng-template>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </mat-tab>\\n  <mat-tab label=\\\"Pins\\\">\\n<!--    <div class=\\\"container-fluid\\\">-->\\n<!--      <div *ngFor=\\\"let pinInfo of pins2\\\" class=\\\"row\\\">-->\\n<!--        <div class=\\\"col-1 my-auto\\\">Pin #{{ pinInfo.key }}</div>-->\\n<!--        <mat-form-field class=\\\"col\\\">-->\\n<!--          <mat-label>Device type</mat-label>-->\\n<!--          <mat-select>-->\\n<!--            <mat-option *ngFor=\\\"let partName of devicePartTypeName | keyvalue\\\" [value]=\\\"partName.key\\\">-->\\n<!--              {{partName.value}}-->\\n<!--            </mat-option>-->\\n<!--          </mat-select>-->\\n<!--        </mat-form-field>-->\\n<!--        <mat-form-field class=\\\"col\\\">-->\\n<!--          <mat-label>Device index</mat-label>-->\\n<!--          <mat-select>-->\\n<!--            <mat-option *ngFor=\\\"let partIndex of 10 | times\\\" [value]=\\\"partIndex\\\">-->\\n<!--              {{partIndex}}-->\\n<!--            </mat-option>-->\\n<!--          </mat-select>-->\\n<!--        </mat-form-field>-->\\n<!--      </div>-->\\n<!--    </div>-->\\n  </mat-tab>\\n</mat-tab-group>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [StatusComponent],\n  exports: [StatusComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n})\nexport class StatusModule {\n}\n","export default \"app-time-chart {\\n  max-width: 330px;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUFDRiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtdGltZS1jaGFydCB7XG4gIG1heC13aWR0aDogMzMwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkb3NlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-calibrate-dose',\n  templateUrl: './calibrate-dose.component.html',\n  styleUrls: ['./calibrate-dose.component.scss'],\n  providers: [\n    {\n      provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false},\n    },\n  ],\n})\nexport class CalibrateDoseComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this.formBuilder.group({\n      firstCtrl: [''],\n    });\n    this.secondFormGroup = this.formBuilder.group({\n      secondCtrl: [''],\n    });\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {selectorAccessControlItems} from '../../store/access-control/access-control.reducer';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {DbAccessControlEpisode} from '../../services/storage/db.service';\n\n@Component({\n  selector: 'app-access-control',\n  templateUrl: './access-control.component.html',\n  styleUrls: ['./access-control.component.scss'],\n})\nexport class AccessControlComponent implements OnInit {\n  log$: Observable<DbAccessControlEpisode[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.log$ = this.store.pipe(select(selectorAccessControlItems));\n  }\n\n  ngOnInit() {\n  }\n\n  trackByKey(index, item) {\n    return item.key;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3RlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYW51YWwtY29udHJvbC5jb21wb25lbnQuc2NzcyJ9 */\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Dose} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-dose',\n  templateUrl: './dose.component.html',\n  styleUrls: ['./dose.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DoseComponent implements OnInit {\n  @Input() dose: Dose;\n  @Output() doseChange = new EventEmitter<Dose>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.doseChange.next({...this.dose, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","export enum DeviceRequestType {\n  fertigate,\n  irrigate,\n  wash,\n  pumpIn,\n  compote,\n  washCompote,\n  mix,\n  mixDose,\n  dose,\n  getProgram,\n  setProgram,\n  getCompoteDaily,\n  setCompoteDaily,\n  getSchedule,\n  setSchedule,\n  getTimer,\n  setTimer,\n  getPump,\n  setPump,\n  getMixer,\n  setMixer,\n  getDose,\n  setDose,\n  getPinPump,\n  setPinPump,\n  getPinValve,\n  setPinValve,\n  getPinFlowSensor,\n  setPinFlowSensor,\n  getPinLevelSensor,\n  setPinLevelSensor,\n  getPinMixer,\n  setPinMixer,\n  getPinDose,\n  setPinDose,\n  getPinDoseMixer,\n  setPinDoseMixer,\n  getTime,\n  setTime,\n  getTemp,\n  getStatus,\n  getStatePump,\n  setStatePump,\n  getStateValve,\n  setStateValve,\n  getStateMixer,\n  setStateMixer,\n  getStateDose,\n  setStateDose,\n  getStateDoseMixer,\n  setStateDoseMixer,\n  resetError,\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PinAssignmentComponent} from './pin-assignment.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { PipesModule } from '../../../pipes/pipes.module';\nimport { PinSelectModule } from './pin-select/pin-select.module';\n\n@NgModule({\n  declarations: [PinAssignmentComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatInputModule,\n    MatTabsModule,\n    MatExpansionModule,\n    PipesModule,\n    PinSelectModule,\n  ],\n})\nexport class PinAssignmentModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AccessControlService} from './access-control.service';\nimport {OpenCvModule} from '../open-cv/open-cv.module';\nimport {CameraModule} from '../camera/camera.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    OpenCvModule,\n    CameraModule,\n  ],\n  providers: [\n    AccessControlService,\n  ],\n})\nexport class AccessControlServiceModule {\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { accessControlReducer } from './access-control.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AccessControlEffects } from './access-control.effects';\nimport { AccessControlServiceModule } from '../../services/access-control/access-control-service.module';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    AccessControlServiceModule,\n    StoreModule.forFeature('accessControl', accessControlReducer),\n    EffectsModule.forFeature([AccessControlEffects]),\n  ],\n})\nexport class AccessControlStoreModule {\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { CameraService } from '../camera/camera.service';\nimport { OpenCVService } from '../open-cv/open-cv.service';\nimport { filter, first } from 'rxjs/operators';\nimport { AccessControlConfig } from '../../model/access-control-config';\n\ndeclare var cv: any;\n\nexport interface AccessControlStrategy {\n  // initialize\n  start();\n\n  // dispose\n  stop();\n\n  // detect motion\n  process(prevFrame, currentFrame): boolean;\n\n  // prepare current frame\n  preprocess(src, dst);\n}\n\nexport class AccessControlStrategyThreshold implements AccessControlStrategy {\n  frame$: Observable<any>;\n  private frameSubject = new Subject<any>();\n  private frameDelta;\n  private M;\n  private ksize;\n  private anchor;\n  private contours;\n  private hierarchy;\n\n  constructor() {\n    this.frame$ = this.frameSubject.asObservable();\n  }\n\n  start() {\n    this.frameDelta = new cv.Mat();\n    this.M = cv.Mat.ones(5, 5, cv.CV_8U);\n    this.ksize = new cv.Size(3, 3);\n    this.anchor = new cv.Point(-1, -1);\n    this.contours = new cv.MatVector();\n    this.hierarchy = new cv.Mat();\n  }\n\n  process(prevFrame, currentFrame): boolean {\n    // compute difference between first frame and current frame\n    cv.absdiff(prevFrame, currentFrame, this.frameDelta);\n    cv.threshold(this.frameDelta, this.frameDelta, 25, 255, cv.THRESH_BINARY);\n    cv.erode(this.frameDelta, this.frameDelta, this.M, this.anchor, 1,\n      cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue(),\n    );\n    cv.dilate(this.frameDelta, this.frameDelta, this.M, this.anchor, 1,\n      cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue(),\n    );\n    cv.findContours(this.frameDelta, this.contours, this.hierarchy,\n      cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE,\n    );\n    for (let i = 0; i < this.contours.size(); i++) {\n      if (cv.contourArea(this.contours.get(i), false) < 500) {\n        continue;\n      }\n      return true;\n    }\n    this.frameSubject.next(this.frameDelta);\n    return false;\n  }\n\n  preprocess(src, dst) {\n    cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY, 0);\n    cv.GaussianBlur(dst, dst, this.ksize, 0, 0, cv.BORDER_DEFAULT);\n  }\n\n  stop() {\n    this.frameDelta.delete();\n    this.M.delete();\n    // todo how to delete this?\n    // this.ksize.delete();\n    this.contours.delete();\n    this.hierarchy.delete();\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccessControlService {\n  video;\n  capture;\n  source;\n  prevFrame;\n  currentFrame;\n  strategy = new AccessControlStrategyThreshold();\n  frame$: Observable<any>;\n  state$: Observable<any>;\n  private started = false;\n  private frameSubject = new Subject<any>();\n  private stateSubject = new BehaviorSubject<'idle' | 'start' | 'stop' | 'process'>('idle');\n  private config: AccessControlConfig;\n\n  constructor(\n    private readonly camera: CameraService,\n    private readonly openCv: OpenCVService,\n  ) {\n    this.frame$ = this.frameSubject.asObservable();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  async start(config: AccessControlConfig) {\n    if (this.started) {\n      return;\n    }\n    this.started = true;\n    this.stateSubject.next('start');\n    this.config = config;\n    const resolution = 'vga';\n    const size = this.camera.constraints[resolution];\n    await this.camera.start(resolution, 'videoInput');\n    if (!this.openCv.cvState.value.ready) {\n      await this.openCv.cvState.pipe(filter(state => state.ready), first()).toPromise();\n    }\n    this.video = this.camera.video;\n    this.capture = new cv.VideoCapture(this.video);\n    this.source = new cv.Mat(size.height.exact, size.width.exact, cv.CV_8UC4);\n    this.prevFrame = new cv.Mat();\n    this.currentFrame = new cv.Mat();\n    this.strategy.start();\n    this.getFrame(this.currentFrame);\n    this.stateSubject.next('idle');\n  }\n\n  async stop() {\n    if (!this.started) {\n      return;\n    }\n    this.started = false;\n    this.stateSubject.next('stop');\n    // clean and stop.\n    this.source.delete();\n    this.prevFrame.delete();\n    this.currentFrame.delete();\n    this.strategy.stop();\n    this.camera.stop();\n    this.stateSubject.next('idle');\n  }\n\n  async process(): Promise<boolean> {\n    this.stateSubject.next('process');\n    try {\n      if (!this.camera.stream) {\n        // todo what is the case?\n        return false;\n      }\n      [this.prevFrame, this.currentFrame] = [this.currentFrame, this.prevFrame];\n      // start processing.\n      this.getFrame(this.currentFrame);\n      if (this.strategy.process(this.prevFrame, this.currentFrame)) {\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.stateSubject.next('idle');\n    }\n    return false;\n  }\n\n  getImage() {\n    const canvas = document.createElement('canvas');\n    canvas.width = 640;\n    canvas.height = 480;\n    cv.imshow(canvas, this.source);\n    // const mime = 'image/png';\n    const mime = 'image/jpeg';\n    const image = canvas.toDataURL(mime);\n    return image;\n  }\n\n  private getFrame(dst) {\n    this.capture.read(this.source);\n    this.strategy.preprocess(this.source, dst);\n    this.frameSubject.next(this.source);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectIndexComponent } from './select-index.component';\nimport { SelectIndexService } from './select-index.service';\nimport { PipesModule } from '../../pipes/pipes.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [SelectIndexComponent],\n  entryComponents: [SelectIndexComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    PipesModule,\n  ],\n  providers: [SelectIndexService],\n})\nexport class SelectIndexModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ConnectStatus } from '../../model/connect-status';\n\n@Pipe({\n  name: 'btStatusIcon',\n})\nexport class BtStatusIconPipe implements PipeTransform {\n  btStatusConnect = new Map<ConnectStatus, string>([\n    [ConnectStatus.CONNECTED, 'bluetooth-connect'],\n    [ConnectStatus.CONNECTING, 'bluetooth-transfer'],\n    [ConnectStatus.DISCONNECTED, 'bluetooth-off'],\n    [ConnectStatus.DISCONNECTING, 'bluetooth-transfer'],\n    [ConnectStatus.TRANSFER, 'bluetooth-transfer'],\n  ]);\n\n  transform(value: ConnectStatus, args?: any): string {\n    return this.btStatusConnect.get(value);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MonitorConfigComponent} from './monitor-config.component';\nimport {DeviceMonitorModule} from '../device-monitor/device-monitor.module';\n\n@NgModule({\n  declarations: [MonitorConfigComponent],\n  exports: [MonitorConfigComponent],\n  imports: [\n    CommonModule,\n    DeviceMonitorModule,\n  ],\n})\nexport class MonitorConfigModule {\n}\n","import { Action } from '@ngrx/store';\n\nexport enum MonitorActionTypes {\n  INIT = '[Monitor] Init',\n  UPDATE_TEMP = '[Monitor] Update temp',\n  UPDATE_FLOW = '[Monitor] Update flow',\n}\n\nexport class ActionMonitorInit implements Action {\n  readonly type = MonitorActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionMonitorUpdateTemp implements Action {\n  readonly type = MonitorActionTypes.UPDATE_TEMP;\n\n  constructor(public readonly payload: ChartData) {\n  }\n}\n\nexport class ActionMonitorUpdateFlow implements Action {\n  readonly type = MonitorActionTypes.UPDATE_FLOW;\n\n  constructor(public readonly payload: ChartData) {\n  }\n}\n\nexport type MonitorActions =\n  | ActionMonitorInit\n  | ActionMonitorUpdateTemp\n  | ActionMonitorUpdateFlow\n  ;\n\nexport interface ChartData {\n  xData: string[];\n  yData: number[];\n}\n\nexport interface MonitorState {\n  temp: ChartData;\n  flow: ChartData;\n}\n\nexport const initialMonitorState: MonitorState = {\n  temp: {\n    xData: [],\n    yData: [],\n  },\n  flow: {\n    xData: [],\n    yData: [],\n  },\n};\n\nexport const selectorMonitor = state => state.monitor as MonitorState;\nexport const selectorMonitorTemp = state => (state.monitor as MonitorState).temp;\nexport const selectorMonitorFlow = state => (state.monitor as MonitorState).flow;\n\nexport function monitorReducer(\n  state: MonitorState = initialMonitorState,\n  action: MonitorActions,\n): MonitorState {\n  switch (action.type) {\n    case MonitorActionTypes.UPDATE_TEMP:\n      return updateTemp(state, action.payload);\n    case MonitorActionTypes.UPDATE_FLOW:\n      return updateFlow(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction updateTemp(state: MonitorState, temp: ChartData): MonitorState {\n  return { ...state, temp };\n}\n\nfunction updateFlow(state: MonitorState, flow: ChartData): MonitorState {\n  return { ...state, flow };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimesPipe } from './times.pipe';\nimport { DateTimePipe } from './date-time.pipe';\nimport { MemoryPipe } from './memory.pipe';\n\n@NgModule({\n  declarations: [TimesPipe, DateTimePipe, MemoryPipe],\n  exports: [TimesPipe, DateTimePipe, MemoryPipe],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class PipesModule {\n}\n","import { Action } from '@ngrx/store';\nimport {\n  Compote,\n  CompoteDaily,\n  Dose,\n  LevelSensor,\n  Mixer,\n  Program,\n  Pump,\n  Schedule,\n  Settings,\n  Timer,\n} from '../../auto/struct';\nimport {\n  defaultCompote,\n  defaultCompoteDaily,\n  defaultDoseSettings,\n  defaultLevelSensorSettings,\n  defaultMixerSettings,\n  defaultNames,\n  defaultPinAssignment,\n  defaultProgram,\n  defaultPumpSettings,\n  defaultSchedule,\n  defaultSettings,\n  defaultTimer,\n} from '../../model/default-settings';\nimport { PinAssignment } from '../../model/device-parts';\nimport { deviceConfig } from '../../model/device-config';\n\nexport enum SettingsActionTypes {\n  INIT = '[Settings] Init',\n  UPDATE = '[Settings] Update',\n  CHANGE_NAME = '[Settings] Change name',\n  ADD_COMPOTE = '[Settings] Add compote',\n  CHANGE_COMPOTE = '[Settings] Change compote',\n  REMOVE_COMPOTE = '[Settings] Remove compote',\n  LOAD_COMPOTE = '[Settings] Load compote',\n  UPDATE_COMPOTE = '[Settings] Update compote',\n  ADD_COMPOTE_DAILY = '[Settings] Add compote daily',\n  CHANGE_COMPOTE_DAILY = '[Settings] Change compote daily',\n  REMOVE_COMPOTE_DAILY = '[Settings] Remove compote daily',\n  LOAD_COMPOTE_DAILY = '[Settings] Load compote daily',\n  UPDATE_COMPOTE_DAILY = '[Settings] Update compote daily',\n  ADD_PROGRAM = '[Settings] Add program',\n  CHANGE_PROGRAM = '[Settings] Change program',\n  REMOVE_PROGRAM = '[Settings] Remove program',\n  LOAD_PROGRAM = '[Settings] Load program',\n  UPDATE_PROGRAM = '[Settings] Update program',\n  ADD_PUMP = '[Settings] Add pump',\n  CHANGE_PUMP = '[Settings] Change pump',\n  REMOVE_PUMP = '[Settings] Remove pump',\n  LOAD_PUMP = '[Settings] Load pump',\n  UPDATE_PUMP = '[Settings] Update pump',\n  ADD_DOSE = '[Settings] Add dose',\n  CHANGE_DOSE = '[Settings] Change dose',\n  REMOVE_DOSE = '[Settings] Remove dose',\n  LOAD_DOSE = '[Settings] Load dose',\n  UPDATE_DOSE = '[Settings] Update dose',\n  ADD_TIMER = '[Settings] Add timer',\n  CHANGE_TIMER = '[Settings] Change timer',\n  REMOVE_TIMER = '[Settings] Remove timer',\n  LOAD_TIMER = '[Settings] Load timer',\n  UPDATE_TIMER = '[Settings] Update timer',\n  ADD_SCHEDULE = '[Settings] Add schedule',\n  CHANGE_SCHEDULE = '[Settings] Change schedule',\n  REMOVE_SCHEDULE = '[Settings] Remove schedule',\n  LOAD_SCHEDULE = '[Settings] Load schedule',\n  UPDATE_SCHEDULE = '[Settings] Update schedule',\n  ADD_MIXER = '[Settings] Add mixer',\n  CHANGE_MIXER = '[Settings] Change mixer',\n  REMOVE_MIXER = '[Settings] Remove mixer',\n  LOAD_MIXER = '[Settings] Load mixer',\n  UPDATE_MIXER = '[Settings] Update mixer',\n  CHANGE_PIN_ASSIGNMENT = '[Settings] Change pin assignment',\n  LOAD_PIN_ASSIGNMENT = '[Settings] Load pin assignment',\n  UPDATE_PIN_ASSIGNMENT = '[Settings] Update pin assignment',\n  SYNC = '[Settings] Sync',\n  SYNC_END = '[Settings] Sync end',\n}\n\nexport class ActionSettingsInit implements Action {\n  readonly type = SettingsActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsUpdate implements Action {\n  readonly type = SettingsActionTypes.UPDATE;\n\n  constructor(public readonly payload?: SettingsState) {\n  }\n}\n\nexport class ActionSettingsAddCompote implements Action {\n  readonly type = SettingsActionTypes.ADD_COMPOTE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeCompote implements Action {\n  readonly type = SettingsActionTypes.CHANGE_COMPOTE;\n\n  constructor(public readonly payload: { index: number, value: Compote }) {\n  }\n}\n\nexport class ActionSettingsRemoveCompote implements Action {\n  readonly type = SettingsActionTypes.REMOVE_COMPOTE;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateCompote implements Action {\n  readonly type = SettingsActionTypes.UPDATE_COMPOTE;\n\n  constructor(public readonly payload: { index: number, value: Compote }) {\n  }\n}\n\nexport class ActionSettingsLoadCompote implements Action {\n  readonly type = SettingsActionTypes.LOAD_COMPOTE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddCompoteDaily implements Action {\n  readonly type = SettingsActionTypes.ADD_COMPOTE_DAILY;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsChangeCompoteDaily implements Action {\n  readonly type = SettingsActionTypes.CHANGE_COMPOTE_DAILY;\n\n  constructor(public readonly payload: { index: number, dailyIndex: number, value: CompoteDaily }) {\n  }\n}\n\nexport class ActionSettingsRemoveCompoteDaily implements Action {\n  readonly type = SettingsActionTypes.REMOVE_COMPOTE_DAILY;\n\n  constructor(public readonly payload: { index: number, dailyIndex: number }) {\n  }\n}\n\nexport class ActionSettingsUpdateCompoteDaily implements Action {\n  readonly type = SettingsActionTypes.UPDATE_COMPOTE_DAILY;\n\n  constructor(public readonly payload: { index: number, dailyIndex: number, value: CompoteDaily }) {\n  }\n}\n\nexport class ActionSettingsLoadCompoteDaily implements Action {\n  readonly type = SettingsActionTypes.LOAD_COMPOTE_DAILY;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddProgram implements Action {\n  readonly type = SettingsActionTypes.ADD_PROGRAM;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeProgram implements Action {\n  readonly type = SettingsActionTypes.CHANGE_PROGRAM;\n\n  constructor(public readonly payload: { index: number, value: Program }) {\n  }\n}\n\nexport class ActionSettingsRemoveProgram implements Action {\n  readonly type = SettingsActionTypes.REMOVE_PROGRAM;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateProgram implements Action {\n  readonly type = SettingsActionTypes.UPDATE_PROGRAM;\n\n  constructor(public readonly payload: { index: number, value: Program }) {\n  }\n}\n\nexport class ActionSettingsLoadProgram implements Action {\n  readonly type = SettingsActionTypes.LOAD_PROGRAM;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddPump implements Action {\n  readonly type = SettingsActionTypes.ADD_PUMP;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangePump implements Action {\n  readonly type = SettingsActionTypes.CHANGE_PUMP;\n\n  constructor(public readonly payload: { index: number, value: Pump }) {\n  }\n}\n\nexport class ActionSettingsRemovePump implements Action {\n  readonly type = SettingsActionTypes.REMOVE_PUMP;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdatePump implements Action {\n  readonly type = SettingsActionTypes.UPDATE_PUMP;\n\n  constructor(public readonly payload: { index: number, value: Pump }) {\n  }\n}\n\nexport class ActionSettingsLoadPump implements Action {\n  readonly type = SettingsActionTypes.LOAD_PUMP;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddDose implements Action {\n  readonly type = SettingsActionTypes.ADD_DOSE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeDose implements Action {\n  readonly type = SettingsActionTypes.CHANGE_DOSE;\n\n  constructor(public readonly payload: { index: number, value: Dose }) {\n  }\n}\n\nexport class ActionSettingsRemoveDose implements Action {\n  readonly type = SettingsActionTypes.REMOVE_DOSE;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateDose implements Action {\n  readonly type = SettingsActionTypes.UPDATE_DOSE;\n\n  constructor(public readonly payload: { index: number, value: Dose }) {\n  }\n}\n\nexport class ActionSettingsLoadDose implements Action {\n  readonly type = SettingsActionTypes.LOAD_DOSE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddTimer implements Action {\n  readonly type = SettingsActionTypes.ADD_TIMER;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeTimer implements Action {\n  readonly type = SettingsActionTypes.CHANGE_TIMER;\n\n  constructor(public readonly payload: { index: number, value: Timer }) {\n  }\n}\n\nexport class ActionSettingsRemoveTimer implements Action {\n  readonly type = SettingsActionTypes.REMOVE_TIMER;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateTimer implements Action {\n  readonly type = SettingsActionTypes.UPDATE_TIMER;\n\n  constructor(public readonly payload: { index: number, value: Timer }) {\n  }\n}\n\nexport class ActionSettingsLoadTimer implements Action {\n  readonly type = SettingsActionTypes.LOAD_TIMER;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddSchedule implements Action {\n  readonly type = SettingsActionTypes.ADD_SCHEDULE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeSchedule implements Action {\n  readonly type = SettingsActionTypes.CHANGE_SCHEDULE;\n\n  constructor(public readonly payload: { index: number, value: Schedule }) {\n  }\n}\n\nexport class ActionSettingsRemoveSchedule implements Action {\n  readonly type = SettingsActionTypes.REMOVE_SCHEDULE;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateSchedule implements Action {\n  readonly type = SettingsActionTypes.UPDATE_SCHEDULE;\n\n  constructor(public readonly payload: { index: number, value: Schedule }) {\n  }\n}\n\nexport class ActionSettingsLoadSchedule implements Action {\n  readonly type = SettingsActionTypes.LOAD_SCHEDULE;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsAddMixer implements Action {\n  readonly type = SettingsActionTypes.ADD_MIXER;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangeMixer implements Action {\n  readonly type = SettingsActionTypes.CHANGE_MIXER;\n\n  constructor(public readonly payload: { index: number, value: Mixer }) {\n  }\n}\n\nexport class ActionSettingsRemoveMixer implements Action {\n  readonly type = SettingsActionTypes.REMOVE_MIXER;\n\n  constructor(public readonly payload: number) {\n  }\n}\n\nexport class ActionSettingsUpdateMixer implements Action {\n  readonly type = SettingsActionTypes.UPDATE_MIXER;\n\n  constructor(public readonly payload: { index: number, value: Mixer }) {\n  }\n}\n\nexport class ActionSettingsLoadMixer implements Action {\n  readonly type = SettingsActionTypes.LOAD_MIXER;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsLoadPinAssignment implements Action {\n  readonly type = SettingsActionTypes.LOAD_PIN_ASSIGNMENT;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsChangePinAssignment implements Action {\n  readonly type = SettingsActionTypes.CHANGE_PIN_ASSIGNMENT;\n\n  constructor(public readonly payload: { key: string, index: number, value: number }) {\n  }\n}\n\nexport class ActionSettingsUpdatePinAssignment implements Action {\n  readonly type = SettingsActionTypes.UPDATE_PIN_ASSIGNMENT;\n\n  constructor(public readonly payload: { key: string, index: number, value: number }) {\n  }\n}\n\nexport class ActionSettingsChangeName implements Action {\n  readonly type = SettingsActionTypes.CHANGE_NAME;\n\n  constructor(public readonly payload: { key: string, index: number, value: string }) {\n  }\n}\n\nexport class ActionSettingsSync implements Action {\n  readonly type = SettingsActionTypes.SYNC;\n\n  constructor() {\n  }\n}\n\nexport class ActionSettingsSyncEnd implements Action {\n  readonly type = SettingsActionTypes.SYNC_END;\n\n  constructor() {\n  }\n}\n\nexport type SettingsActions =\n  | ActionSettingsInit\n  | ActionSettingsUpdate\n  | ActionSettingsAddCompote\n  | ActionSettingsChangeCompote\n  | ActionSettingsRemoveCompote\n  | ActionSettingsUpdateCompote\n  | ActionSettingsLoadCompote\n  | ActionSettingsAddCompoteDaily\n  | ActionSettingsChangeCompoteDaily\n  | ActionSettingsRemoveCompoteDaily\n  | ActionSettingsUpdateCompoteDaily\n  | ActionSettingsLoadCompoteDaily\n  | ActionSettingsAddProgram\n  | ActionSettingsChangeProgram\n  | ActionSettingsRemoveProgram\n  | ActionSettingsUpdateProgram\n  | ActionSettingsLoadProgram\n  | ActionSettingsAddPump\n  | ActionSettingsChangePump\n  | ActionSettingsRemovePump\n  | ActionSettingsUpdatePump\n  | ActionSettingsLoadPump\n  | ActionSettingsAddDose\n  | ActionSettingsChangeDose\n  | ActionSettingsRemoveDose\n  | ActionSettingsUpdateDose\n  | ActionSettingsLoadDose\n  | ActionSettingsAddTimer\n  | ActionSettingsChangeTimer\n  | ActionSettingsRemoveTimer\n  | ActionSettingsUpdateTimer\n  | ActionSettingsLoadTimer\n  | ActionSettingsAddSchedule\n  | ActionSettingsChangeSchedule\n  | ActionSettingsRemoveSchedule\n  | ActionSettingsUpdateSchedule\n  | ActionSettingsLoadSchedule\n  | ActionSettingsAddMixer\n  | ActionSettingsChangeMixer\n  | ActionSettingsRemoveMixer\n  | ActionSettingsUpdateMixer\n  | ActionSettingsLoadMixer\n  | ActionSettingsChangePinAssignment\n  | ActionSettingsLoadPinAssignment\n  | ActionSettingsUpdatePinAssignment\n  | ActionSettingsChangeName\n  | ActionSettingsSync\n  | ActionSettingsSyncEnd\n  ;\n\nexport interface SettingsState {\n  settings: Settings;\n  pinAssignment: PinAssignment;\n  names: { [key in keyof Settings]: string[] };\n  sync: boolean;\n}\n\nexport const initialSettingsState: SettingsState = {\n  settings: defaultSettings(),\n  pinAssignment: defaultPinAssignment(),\n  names: defaultNames(),\n  sync: false,\n};\n\nexport const selectorSettings = state => state.settings as SettingsState;\nexport const selectorDeviceSettings = state => (state.settings as SettingsState).settings;\nexport const selectorPrograms = state => (state.settings as SettingsState).settings.program;\nexport const selectorProgram = index => state => (state.settings as SettingsState).settings.program[index];\nexport const selectorCompotes = state => (state.settings as SettingsState).settings.compote;\nexport const selectorCompote = index => state => (state.settings as SettingsState).settings.compote[index];\nexport const selectorCompoteDaily = id => index => state => (state.settings as SettingsState).settings.compote[id].daily[index];\nexport const selectorTimers = state => (state.settings as SettingsState).settings.timer;\nexport const selectorTimer = index => state => (state.settings as SettingsState).settings.timer[index];\nexport const selectorSchedules = state => (state.settings as SettingsState).settings.schedule;\nexport const selectorSchedule = index => state => (state.settings as SettingsState).settings.schedule[index];\nexport const selectorPumps = state => (state.settings as SettingsState).settings.pump;\nexport const selectorPump = index => state => (state.settings as SettingsState).settings.pump[index];\nexport const selectorMixers = state => (state.settings as SettingsState).settings.mixer;\nexport const selectorMixer = index => state => (state.settings as SettingsState).settings.mixer[index];\nexport const selectorDoses = state => (state.settings as SettingsState).settings.dose;\nexport const selectorDose = index => state => (state.settings as SettingsState).settings.dose[index];\nexport const selectorPinAssignment = state => (state.settings as SettingsState).pinAssignment as PinAssignment;\nexport const selectorPinPump = index => state => (state.settings as SettingsState).pinAssignment.pump[index];\nexport const selectorPinPumps = state => (state.settings as SettingsState).pinAssignment.pump;\nexport const selectorPinFlowSensor = index => state => (state.settings as SettingsState).pinAssignment.flowSensor[index];\nexport const selectorPinFlowSensors = state => (state.settings as SettingsState).pinAssignment.flowSensor;\nexport const selectorPinMixer = index => state => (state.settings as SettingsState).pinAssignment.mixer[index];\nexport const selectorPinMixers = state => (state.settings as SettingsState).pinAssignment.mixer;\nexport const selectorPinDose = index => state => (state.settings as SettingsState).pinAssignment.dose[index];\nexport const selectorPinDoses = state => (state.settings as SettingsState).pinAssignment.dose;\nexport const selectorPinDoseMixer = index => state => (state.settings as SettingsState).pinAssignment.doseMixer[index];\nexport const selectorPinDoseMixers = state => (state.settings as SettingsState).pinAssignment.doseMixer;\nexport const selectorPinValve = index => state => (state.settings as SettingsState).pinAssignment.valve[index];\nexport const selectorPinValves = state => (state.settings as SettingsState).pinAssignment.valve;\nexport const selectorPinLevelSensor = index => state => (state.settings as SettingsState).pinAssignment.levelSensor[index];\nexport const selectorPinLevelSensors = state => (state.settings as SettingsState).pinAssignment.levelSensor;\nexport const selectorNames = key => state => (state.settings as SettingsState).names[key];\nexport const selectorSettingsSync = state => (state.settings as SettingsState).sync;\n\nexport function settingsReducer(\n  state: SettingsState = initialSettingsState,\n  action: SettingsActions,\n): SettingsState {\n  switch (action.type) {\n    case SettingsActionTypes.UPDATE:\n      return updateState(state, action.payload);\n    case SettingsActionTypes.CHANGE_NAME:\n      return changeName(state, action.payload);\n    case SettingsActionTypes.ADD_COMPOTE:\n      return addCompote(state);\n    case SettingsActionTypes.CHANGE_COMPOTE:\n      return changeCompote(state, action.payload);\n    case SettingsActionTypes.REMOVE_COMPOTE:\n      return removeCompote(state, action.payload);\n    case SettingsActionTypes.ADD_COMPOTE_DAILY:\n      return addCompoteDaily(state, action.payload);\n    case SettingsActionTypes.CHANGE_COMPOTE_DAILY:\n    case SettingsActionTypes.UPDATE_COMPOTE_DAILY:\n      return changeCompoteDaily(state, action.payload);\n    case SettingsActionTypes.LOAD_COMPOTE_DAILY:\n      return state;\n    case SettingsActionTypes.REMOVE_COMPOTE_DAILY:\n      return removeCompoteDaily(state, action.payload);\n    case SettingsActionTypes.ADD_PROGRAM:\n      return addProgram(state);\n    case SettingsActionTypes.CHANGE_PROGRAM:\n    case SettingsActionTypes.UPDATE_PROGRAM:\n      return changeProgram(state, action.payload);\n    case SettingsActionTypes.LOAD_PROGRAM:\n      return state;\n    case SettingsActionTypes.REMOVE_PROGRAM:\n      return removeProgram(state, action.payload);\n    case SettingsActionTypes.ADD_DOSE:\n      return addDose(state);\n    case SettingsActionTypes.CHANGE_DOSE:\n    case SettingsActionTypes.UPDATE_DOSE:\n      return changeDose(state, action.payload);\n    case SettingsActionTypes.LOAD_DOSE:\n      return state;\n    case SettingsActionTypes.REMOVE_DOSE:\n      return removeDose(state, action.payload);\n    case SettingsActionTypes.ADD_PUMP:\n      return addPump(state);\n    case SettingsActionTypes.CHANGE_PUMP:\n    case SettingsActionTypes.UPDATE_PUMP:\n      return changePump(state, action.payload);\n    case SettingsActionTypes.LOAD_PUMP:\n      return state;\n    case SettingsActionTypes.REMOVE_PUMP:\n      return removePump(state, action.payload);\n    case SettingsActionTypes.ADD_TIMER:\n      return addTimer(state);\n    case SettingsActionTypes.CHANGE_TIMER:\n    case SettingsActionTypes.UPDATE_TIMER:\n      return changeTimer(state, action.payload);\n    case SettingsActionTypes.LOAD_TIMER:\n      return state;\n    case SettingsActionTypes.REMOVE_TIMER:\n      return removeTimer(state, action.payload);\n    case SettingsActionTypes.ADD_SCHEDULE:\n      return addSchedule(state);\n    case SettingsActionTypes.CHANGE_SCHEDULE:\n    case SettingsActionTypes.UPDATE_SCHEDULE:\n      return changeSchedule(state, action.payload);\n    case SettingsActionTypes.LOAD_SCHEDULE:\n      return state;\n    case SettingsActionTypes.REMOVE_SCHEDULE:\n      return removeSchedule(state, action.payload);\n    case SettingsActionTypes.ADD_MIXER:\n      return addMixer(state);\n    case SettingsActionTypes.CHANGE_MIXER:\n    case SettingsActionTypes.UPDATE_MIXER:\n      return changeMixer(state, action.payload);\n    case SettingsActionTypes.LOAD_MIXER:\n      return state;\n    case SettingsActionTypes.REMOVE_MIXER:\n      return removeMixer(state, action.payload);\n    case SettingsActionTypes.LOAD_PIN_ASSIGNMENT:\n      return state;\n    case SettingsActionTypes.CHANGE_PIN_ASSIGNMENT:\n    case SettingsActionTypes.UPDATE_PIN_ASSIGNMENT:\n      return changePinAssignment(state, action.payload);\n    case SettingsActionTypes.SYNC:\n      return { ...state, sync: true };\n    case SettingsActionTypes.SYNC_END:\n      return { ...state, sync: false };\n    default:\n      return state;\n  }\n}\n\nfunction updateState(state: SettingsState, newState: SettingsState) {\n  if (!newState) {\n    return state;\n  }\n  const nextState = {\n    ...newState,\n    settings: {\n      program: fixArray(newState.settings.program, deviceConfig.programCount, defaultProgram),\n      compote: fixArray(newState.settings.compote, deviceConfig.compoteCount, defaultCompote),\n      schedule: fixArray(newState.settings.schedule, deviceConfig.scheduleCount, defaultSchedule),\n      timer: fixArray(newState.settings.timer, deviceConfig.timerCount, defaultTimer),\n      pump: fixArray(newState.settings.pump, deviceConfig.pumpCount, defaultPumpSettings),\n      levelSensor: fixArray(newState.settings.levelSensor, deviceConfig.levelSensorCount, defaultLevelSensorSettings),\n      mixer: fixArray(newState.settings.mixer, deviceConfig.mixerCount, defaultMixerSettings),\n      dose: fixArray(newState.settings.dose, deviceConfig.doseCount, defaultDoseSettings),\n    },\n    pinAssignment: {\n      pump: fixArray(newState.pinAssignment.pump, deviceConfig.pumpCount, defaultPin),\n      levelSensor: fixArray(newState.pinAssignment.levelSensor, deviceConfig.levelSensorCount, defaultPin),\n      mixer: fixArray(newState.pinAssignment.mixer, deviceConfig.mixerCount, defaultPin),\n      dose: fixArray(newState.pinAssignment.dose, deviceConfig.doseCount, defaultPin),\n      valve: fixArray(newState.pinAssignment.valve, deviceConfig.valveCount, defaultPin),\n      doseMixer: newState.pinAssignment.doseMixer,\n      flowSensor: newState.pinAssignment.flowSensor,\n      rtc: newState.pinAssignment.rtc,\n      display: newState.pinAssignment.display,\n      button: newState.pinAssignment.button,\n    },\n  };\n  return nextState;\n}\n\nfunction defaultPin() {\n  return 0;\n}\n\nfunction fixArray<T>(array: T[], length: number, fillFn: (() => T)): T[] {\n  if (array.length === length) {\n    return array;\n  }\n  if (array.length > length) {\n    return array.slice(0, length);\n  }\n  const fixed = array.slice();\n  for (let i = array.length; i < length; i++) {\n    fixed.push(fillFn());\n  }\n  return fixed;\n}\n\nfunction changeName(state, { key, index, value }) {\n  const names = state.names[key].slice(0);\n  names[index] = value;\n  return { ...state, names: { ...state.names, [key]: names } };\n}\n\nfunction addCompoteDaily(state: SettingsState, index): SettingsState {\n  return {\n    ...state,\n    settings: {\n      ...state.settings,\n      compote: state.settings.compote.map((compote, i) =>\n        i === index ? { ...compote, daily: [...compote.daily, defaultCompoteDaily()] } : compote),\n    },\n  };\n}\n\nfunction changeCompoteDaily(\n  state: SettingsState,\n  { index, dailyIndex, value }: { index: number, dailyIndex: number, value: CompoteDaily },\n): SettingsState {\n  const compote = state.settings.compote.slice(0);\n  const daily = compote[index].daily.slice(0);\n  daily[dailyIndex] = value;\n  compote[index] = {\n    ...compote[index],\n    daily,\n  };\n  return {\n    ...state, settings: {\n      ...state.settings,\n      compote,\n    },\n  };\n}\n\nfunction removeCompoteDaily(\n  state: SettingsState,\n  { index, dailyIndex }: { index: number, dailyIndex: number },\n): SettingsState {\n  const compote = state.settings.compote.slice(0);\n  compote.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings,\n      compote,\n    },\n  };\n}\n\nfunction addCompote(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, compote: [\n        ...state.settings.compote, {\n          daily: [],\n        },\n      ],\n    },\n  };\n}\n\nfunction changeCompote(state: SettingsState, { index, value }: { index: number, value: Compote }): SettingsState {\n  const compote = state.settings.compote.slice(0);\n  compote[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, compote,\n    },\n  };\n}\n\nfunction removeCompote(state: SettingsState, index: number): SettingsState {\n  const compote = state.settings.compote.slice(0);\n  compote.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, compote,\n    },\n  };\n}\n\nfunction addProgram(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, program: [\n        ...state.settings.program, defaultProgram(),\n      ],\n    },\n  };\n}\n\nfunction changeProgram(state: SettingsState, { index, value }: { index: number, value: Program }): SettingsState {\n  const program = state.settings.program.slice(0);\n  program[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, program,\n    },\n  };\n}\n\nfunction removeProgram(state: SettingsState, index: number): SettingsState {\n  const program = state.settings.program.slice(0);\n  program.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, program,\n    },\n  };\n}\n\nfunction addPump(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, pump: [\n        ...state.settings.pump, defaultPumpSettings(),\n      ],\n    },\n  };\n}\n\nfunction changePump(state: SettingsState, { index, value }: { index: number, value: Pump }): SettingsState {\n  const pump = state.settings.pump.slice(0);\n  pump[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, pump,\n    },\n  };\n}\n\nfunction removePump(state: SettingsState, index: number): SettingsState {\n  const pump = state.settings.pump.slice(0);\n  pump.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, pump,\n    },\n  };\n}\n\nfunction addDose(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, dose: [\n        ...state.settings.dose, defaultDoseSettings(),\n      ],\n    },\n  };\n}\n\nfunction changeDose(state: SettingsState, { index, value }: { index: number, value: Dose }): SettingsState {\n  const dose = state.settings.dose.slice(0);\n  dose[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, dose,\n    },\n  };\n}\n\nfunction removeDose(state: SettingsState, index: number): SettingsState {\n  const dose = state.settings.dose.slice(0);\n  dose.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, dose,\n    },\n  };\n}\n\nfunction addMixer(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, mixer: [\n        ...state.settings.mixer, defaultMixerSettings(),\n      ],\n    },\n  };\n}\n\nfunction changeMixer(state: SettingsState, { index, value }: { index: number, value: Mixer }): SettingsState {\n  const mixer = state.settings.mixer.slice(0);\n  mixer[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, mixer,\n    },\n  };\n}\n\nfunction removeMixer(state: SettingsState, index: number): SettingsState {\n  const mixer = state.settings.mixer.slice(0);\n  mixer.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, mixer,\n    },\n  };\n}\n\nfunction addTimer(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, timer: [\n        ...state.settings.timer, defaultTimer(),\n      ],\n    },\n  };\n}\n\nfunction changeTimer(state: SettingsState, { index, value }: { index: number, value: Timer }): SettingsState {\n  const timer = state.settings.timer.slice(0);\n  timer[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, timer,\n    },\n  };\n}\n\nfunction removeTimer(state: SettingsState, index: number): SettingsState {\n  const timer = state.settings.timer.slice(0);\n  timer.splice(index, 1);\n  return {\n    ...state, settings: {\n      ...state.settings, timer,\n    },\n  };\n}\n\nfunction addSchedule(state: SettingsState): SettingsState {\n  return {\n    ...state, settings: {\n      ...state.settings, schedule: [\n        ...state.settings.schedule, defaultSchedule(),\n      ],\n    },\n  };\n}\n\nfunction changeSchedule(state: SettingsState, { index, value }: { index: number, value: Schedule }): SettingsState {\n  const schedule = state.settings.schedule.slice(0);\n  schedule[index] = value;\n  return {\n    ...state, settings: {\n      ...state.settings, schedule,\n    },\n  };\n}\n\nfunction removeSchedule(state: SettingsState, index: number): SettingsState {\n  const schedule = state.settings.schedule.slice(0);\n  schedule.splice(index, 1);\n  return {\n    ...state,\n    settings: { ...state.settings, schedule },\n  };\n}\n\nfunction changePinAssignment(state: SettingsState, { key, index, value }) {\n  const pins = state.pinAssignment[key].slice(0);\n  pins[index] = value;\n  const pinAssignment = { ...state.pinAssignment, [key]: pins };\n  return { ...state, pinAssignment };\n}\n","import { Injectable } from '@angular/core';\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\n\nexport interface DbAccessControlCamshotValue {\n  processTime: number;\n  image: string;\n}\n\nexport interface DbAccessControlCamshot {\n  key: number;\n  value: DbAccessControlCamshotValue;\n}\n\nexport interface DbAccessControlEpisodeValue {\n  lastKey: number;\n}\n\nexport interface DbAccessControlEpisode {\n  key: number;\n  value: DbAccessControlEpisodeValue;\n}\n\ninterface AppDb extends DBSchema {\n  temp: {\n    key: string,\n    value: number,\n  };\n  flow: {\n    key: string,\n    value: number,\n  };\n  accessControlCamshot: DbAccessControlCamshot;\n  accessControlEpisode: DbAccessControlEpisode;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DbService {\n  private db: IDBPDatabase<AppDb>;\n\n  constructor() {\n  }\n\n  async init() {\n    this.db = await openDB<AppDb>('grow-control-db4', 1, {\n      upgrade(db) {\n        db.createObjectStore('temp');\n        db.createObjectStore('flow');\n        db.createObjectStore('accessControlCamshot');\n        db.createObjectStore('accessControlEpisode');\n      },\n    });\n  }\n\n  async logTemp(temp: number) {\n    await this.db.put('temp', temp, new Date().toISOString());\n  }\n\n  async getTemp() {\n    return { xData: await this.db.getAllKeys('temp'), yData: await this.db.getAll('temp') };\n  }\n\n  async logFlow(flow: number) {\n    await this.db.put('flow', flow, new Date().toISOString());\n  }\n\n  async getFlow() {\n    return { xData: await this.db.getAllKeys('flow'), yData: await this.db.getAll('flow') };\n  }\n\n  async logAccessControl(episode: number, camshot: DbAccessControlCamshot) {\n    const transaction = this.db.transaction(\n      ['accessControlCamshot', 'accessControlEpisode'], 'readwrite');\n    transaction.objectStore('accessControlEpisode').put({ lastKey: camshot.key }, episode);\n    transaction.objectStore('accessControlCamshot').put(camshot.value, camshot.key);\n    await transaction.done;\n  }\n\n  async getAccessControlEpisode() {\n    const keys = await this.db.getAllKeys('accessControlEpisode');\n    const values = await this.db.getAll('accessControlEpisode');\n    return keys.map((key, index) => ({ key, value: values[index] })).sort((a, b) => b.key - a.key);\n  }\n\n  async getAccessControlEpisodeKeys(episode: DbAccessControlEpisode): Promise<number[]> {\n    const keyRangeValue = IDBKeyRange.bound(episode.key, episode.value.lastKey);\n    const transaction = this.db.transaction(['accessControlCamshot'], 'readonly');\n    const objectStore = transaction.objectStore('accessControlCamshot');\n    let cursor = await objectStore.openCursor(keyRangeValue);\n    const keys = [];\n    while (cursor) {\n      keys.push(cursor.key);\n      cursor = await cursor.continue();\n    }\n    return keys;\n  }\n\n  async getAccessControlCamshot(key: number): Promise<DbAccessControlCamshotValue> {\n    return await this.db.get('accessControlCamshot', key);\n  }\n\n  async getAccessControlCamshotNext(key: number): Promise<DbAccessControlCamshot> {\n    const keyRangeValue = IDBKeyRange.lowerBound(key, true);\n    const transaction = this.db.transaction(['accessControlCamshot'], 'readonly');\n    const objectStore = transaction.objectStore('accessControlCamshot');\n    const cursor = await objectStore.openCursor(keyRangeValue);\n    const next = { key: cursor.key, value: cursor.value };\n    return next;\n  }\n\n  async getAccessControlCamshotPrev(key: number): Promise<DbAccessControlCamshot> {\n    const keyRangeValue = IDBKeyRange.upperBound(key, true);\n    const transaction = this.db.transaction(['accessControlCamshot'], 'readonly');\n    const objectStore = transaction.objectStore('accessControlCamshot');\n    const cursor = await objectStore.openCursor(keyRangeValue);\n    const next = { key: cursor.key, value: cursor.value };\n    return next;\n  }\n\n  async clear(names) {\n    await Promise.all(names.map(name => this.db.clear(name)));\n  }\n\n  async getTableSize(name) {\n    let size = 0;\n    let count = 0;\n    let cursor = await this.db.transaction(name).store.openCursor();\n    while (cursor) {\n      size += JSON.stringify(cursor.value).length;\n      size += JSON.stringify(cursor.key).length;\n      count++;\n      cursor = await cursor.continue();\n    }\n    return { name, size, count };\n  }\n\n  async getDatabaseSize() {\n    const tableNames = Array.from(this.db.objectStoreNames);\n    const sizes = await Promise.all(tableNames.map(t => this.getTableSize(t)));\n    const report: any = sizes;\n    report.push({\n      name: 'total',\n      size: sizes.reduce((acc, val) => acc + val.size, 0),\n      count: sizes.reduce((acc, val) => acc + val.count, 0),\n    });\n    return report;\n  }\n}\n","export default \"<mat-slide-toggle class=\\\"col-12\\\"\\n  [checked]=\\\"accessControl.enable\\\" (change)=\\\"onChange({enable: $event.checked})\\\">\\n  Enable\\n</mat-slide-toggle>\\n\";","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeMixer,\n  ActionSettingsChangeName, ActionSettingsLoadDose, ActionSettingsLoadMixer,\n  ActionSettingsRemoveMixer,\n  selectorMixers,\n  selectorNames,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Mixer} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-mixer-list',\n  templateUrl: './mixer-list.component.html',\n  styleUrls: ['./mixer-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MixerListComponent implements OnInit {\n  mixers$: Observable<Mixer[]>;\n  names$: Observable<string[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.mixers$ = this.store.pipe(select(selectorMixers));\n    this.names$ = this.store.pipe(select(selectorNames('mixer')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadMixer());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'mixer', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeMixer({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveMixer(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZXZpY2UtbW9uaXRvci5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CompoteListComponent} from './compote-list.component';\nimport {CompoteModule} from './compote/compote.module';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [CompoteListComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    CompoteModule,\n  ],\n})\nexport class CompoteListModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9ncmFtLmNvbXBvbmVudC5zY3NzIn0= */\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pin-select',\n  templateUrl: './pin-select.component.html',\n  styleUrls: ['./pin-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PinSelectComponent implements OnInit {\n  @Input() pins: number[];\n  @Input() allPins: number[];\n  @Input() title: string;\n  @Output() pinChange = new EventEmitter<{ index: number, value: number }>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(index: number, value: number) {\n    this.pinChange.next({index, value});\n  }\n\n  trackByValue(index: number, value: any): any {\n    return value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {EpisodeComponent} from './episode.component';\nimport {CamshotsModule} from '../camshots/camshots.module';\n\n@NgModule({\n  declarations: [\n    EpisodeComponent,\n  ],\n  exports: [\n    EpisodeComponent,\n  ],\n  imports: [\n    CommonModule,\n    CamshotsModule,\n  ]\n})\nexport class EpisodeModule { }\n","export default \".mat-spinner {\\n  margin: auto;\\n}\\n\\n.mat-list-option {\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcc2VsZWN0LWJ0LWRldmljZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRiIsImZpbGUiOiJzZWxlY3QtYnQtZGV2aWNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zcGlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4ubWF0LWxpc3Qtb3B0aW9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuIl19 */\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PumpComponent} from './pump.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [PumpComponent],\n  exports: [PumpComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n  ],\n})\nexport class PumpModule {\n}\n","export default \"<div class=\\\"d-flex flex-column app-content\\\">\\n  <mat-toolbar>\\n    <button (click)=\\\"sidenav.toggle()\\\" *ngIf=\\\"showMenu\\\" mat-icon-button>\\n      <mat-icon svgIcon=\\\"menu\\\"></mat-icon>\\n    </button>\\n    <button (click)=\\\"onBack()\\\" *ngIf=\\\"showBack\\\" mat-icon-button>\\n      <mat-icon svgIcon=\\\"arrow-left\\\"></mat-icon>\\n    </button>\\n    <span class=\\\"flex-fill text-center\\\">{{options?.title}}</span>\\n    <button (click)=\\\"onAdd()\\\" *ngIf=\\\"showAdd\\\" mat-icon-button>\\n      <mat-icon svgIcon=\\\"plus-circle-outline\\\"></mat-icon>\\n    </button>\\n    <button (click)=\\\"onSync()\\\" *ngIf=\\\"showSync\\\" mat-icon-button>\\n      <mat-icon svgIcon=\\\"sync\\\"></mat-icon>\\n    </button>\\n    <button *ngIf=\\\"showBt\\\" mat-icon-button>\\n      <mat-icon (click)=\\\"onBt()\\\" [svgIcon]=\\\"btStatus | btStatusIcon\\\"></mat-icon>\\n    </button>\\n  </mat-toolbar>\\n  <mat-sidenav-container (backdropClick)=\\\"sidenav.close()\\\" class=\\\"flex-fill\\\">\\n    <mat-sidenav #sidenav mode=\\\"over\\\">\\n      <mat-nav-list>\\n        <a (click)=\\\"sidenav.toggle()\\\"\\n           *ngFor=\\\"let link of links\\\"\\n           [routerLink]=\\\"link.route\\\"\\n           mat-list-item\\n        >\\n          <mat-icon *ngIf=\\\"link.icon\\\" [svgIcon]=\\\"link.icon\\\"></mat-icon>\\n          &nbsp;\\n          {{link.title}}\\n        </a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <ng-content></ng-content>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\";","import { deviceConfig } from './device-config';\nimport {\n  Compote,\n  CompoteDaily,\n  DayTime,\n  Dose,\n  LevelSensor,\n  Mixer,\n  Program,\n  Pump,\n  Schedule,\n  Settings,\n  Timer,\n} from '../auto/struct';\nimport { dateToDateDay } from './date-time';\nimport { PinAssignment } from './device-parts';\n\nexport function defaultSettings(): Settings {\n  return {\n    program: new Array(deviceConfig.programCount)\n      .fill(0)\n      .map(() => defaultProgram()),\n    compote: new Array(deviceConfig.compoteCount)\n      .fill(0)\n      .map(() => defaultCompote()),\n    schedule: new Array(deviceConfig.scheduleCount)\n      .fill(0)\n      .map(() => defaultSchedule()),\n    timer: new Array(deviceConfig.timerCount)\n      .fill(0)\n      .map(() => defaultTimer()),\n    pump: new Array(deviceConfig.pumpCount)\n      .fill(0)\n      .map(() => defaultPumpSettings()),\n    mixer: new Array(deviceConfig.mixerCount)\n      .fill(0)\n      .map(() => defaultMixerSettings()),\n    dose: new Array(deviceConfig.doseCount)\n      .fill(0)\n      .map(() => defaultDoseSettings()),\n    levelSensor: new Array(deviceConfig.doseCount)\n      .fill(0)\n      .map(() => defaultLevelSensorSettings()),\n  };\n}\n\nexport function defaultProgram(): Program {\n  return {\n    valves: new Array(Math.ceil(deviceConfig.valveCount / 8)).fill(0),\n    compote: 0,\n    start: dateToDateDay(new Date()),\n  };\n}\n\nexport function defaultCompoteDaily(): CompoteDaily {\n  return {\n    days: 0,\n    schedule: 0,\n    volume: 0,\n    washVolume: 0,\n    dose: new Array(deviceConfig.doseCount).fill(0),\n  };\n}\n\nexport function defaultCompote(): Compote {\n  return {\n    daily: new Array(deviceConfig.compoteDailyCount).fill(0).map(() => defaultCompoteDaily()),\n  };\n}\n\nexport function defaultSchedule(): Schedule {\n  return {\n    enable: 0,\n    deviceId: 0,\n    startTime: defaultDayTime(),\n    endTime: defaultDayTime(),\n  };\n}\n\nexport function defaultTimer(): Timer {\n  return {\n    enable: 0,\n    program: 0,\n    weekDays: 0,\n    time: defaultDayTime(),\n  };\n}\n\nexport function defaultPumpSettings(): Pump {\n  return {\n    minFlow: 100,\n    startingTime: 3000,\n    pwmFlow: 0,\n    pwm: 0,\n    rate: 5880,\n  };\n}\n\nexport function defaultDoseSettings(): Dose {\n  return {\n    rate: 0,\n    seconds: 0,\n    pwmSensor: 0,\n    pwm: 0,\n  };\n}\n\nexport function defaultLevelSensorSettings(): LevelSensor {\n  return {\n    beepSeconds: 1,\n  };\n}\n\nexport function defaultMixerSettings(): Mixer {\n  return {\n    seconds: 180,\n    washSeconds: 180,\n    pwmSensor: 0,\n    pwm: 0,\n  };\n}\n\nexport function defaultDayTime(): DayTime {\n  return {\n    hour: 0,\n    minute: 0,\n    second: 0,\n  };\n}\n\nexport function defaultPinAssignment(): PinAssignment {\n  return {\n    pump: [],\n    flowSensor: [],\n    levelSensor: [],\n    mixer: [],\n    dose: [],\n    doseMixer: [],\n    valve: [],\n    rtc: [],\n    display: [],\n    button: [],\n  };\n}\n\nexport function defaultNames() {\n  return {\n    program: new Array(deviceConfig.programCount).fill(''),\n    compote: new Array(deviceConfig.compoteCount).fill(''),\n    schedule: new Array(deviceConfig.scheduleCount).fill(''),\n    timer: new Array(deviceConfig.timerCount).fill(''),\n    pump: ['In', 'Out'],\n    mixer: ['Compote', 'Wash'],\n    dose: ['Grow', 'Bloom', '', ''],\n    levelSensor: ['Min', 'Max'],\n  };\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {DbAccessControlCamshotValue, DbService} from '../../../services/storage/db.service';\nimport {switchMap, startWith} from 'rxjs/operators';\nimport {BehaviorSubject, from} from 'rxjs';\nimport {CamshotSliderService} from '../camshot-slider/camshot-slider.service';\n\n@Component({\n  selector: 'app-camshot',\n  templateUrl: './camshot.component.html',\n  styleUrls: ['./camshot.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CamshotComponent implements OnInit {\n  @Input() set key(value: number) {\n    this.keySubject.next(value);\n  }\n  get key(): number {\n    return this.keySubject.value;\n  }\n  camshot: DbAccessControlCamshotValue;\n  private keySubject = new BehaviorSubject<number>(null);\n\n  constructor(\n    db: DbService,\n    cd: ChangeDetectorRef,\n    private readonly camshotSlider: CamshotSliderService,\n  ) {\n    this.keySubject.pipe(switchMap(key => from(db.getAccessControlCamshot(key))\n      .pipe(startWith(null as DbAccessControlCamshotValue))\n    ))\n      .subscribe(camshot => {\n        this.camshot = camshot;\n        cd.markForCheck();\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  onClick() {\n    this.camshotSlider.show(this.key);\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Program} from '../../../../auto/struct';\nimport {Compote} from '../../../../auto/struct';\nimport {deviceConfig} from '../../../../model/device-config';\nimport {dateToDateDay} from '../../../../model/date-time';\n\n@Component({\n  selector: 'app-program',\n  templateUrl: './program.component.html',\n  styleUrls: ['./program.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgramComponent implements OnInit {\n  @Input() program: Program;\n  @Output() programChange = new EventEmitter<Program>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n  @Input() compotes: Compote[];\n  @Input() valves: number[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.programChange.next({...this.program, ...changes});\n  }\n\n  onChangeDate(date) {\n    this.programChange.next({...this.program, start: dateToDateDay(date)});\n  }\n\n  onChangeValves(changes) {\n    const valves = new Array(Math.ceil(deviceConfig.valveCount / 8)).fill(0);\n    for (const pin of changes) {\n      const offset = pin - 1;\n      const index = Math.trunc(offset / 8);\n      // tslint:disable-next-line:no-bitwise\n      valves[index] |= 1 << (offset % 8);\n    }\n    this.programChange.next({...this.program, valves});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Schedule} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScheduleComponent implements OnInit {\n  @Input() schedule: Schedule;\n  @Output() scheduleChange = new EventEmitter<Schedule>();\n  @Input() name: string;\n  @Output() nameChange = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.scheduleChange.next({...this.schedule, ...changes});\n  }\n\n  onNameChange(name) {\n    this.nameChange.next(name);\n  }\n}\n","export default \"<h1 mat-dialog-title>Select index number</h1>\\n<mat-dialog-content class=\\\"pt-2\\\">\\n  <mat-radio-group [(ngModel)]=\\\"value\\\">\\n    <mat-radio-button *ngFor=\\\"let option of options\\\" [value]=\\\"option.value\\\" class=\\\"mr-3\\\">\\n      {{ option.title }}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n</mat-dialog-content>\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button (click)=\\\"onSelect()\\\" cdkFocusInitial color=\\\"primary\\\" mat-button>Select</button>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { monitorReducer } from './monitor.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MonitorEffects } from './monitor.effects';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    StoreModule,\n    StoreModule.forFeature('monitor', monitorReducer),\n    EffectsModule.forFeature([MonitorEffects]),\n  ],\n})\nexport class MonitorStoreModule {\n}\n","export default \"app-camshots {\\n  width: 100%;\\n  display: block;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcZXBpc29kZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJlcGlzb2RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLWNhbXNob3RzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtaXhlci5jb21wb25lbnQuc2NzcyJ9 */\";","import { DeviceResponseType } from './device-response-type';\nimport { DeviceRequestType } from './device-request-type';\nimport { DeviceIOMeta } from './device-io';\nimport { deviceConfig } from './device-config';\n\nexport const structMeta: { [key: string]: DeviceIOMeta } = {\n  empty: {\n    fake: { type: 'uint8' },\n  },\n  dayTime: {\n    hour: { type: 'uint8' },\n    minute: { type: 'uint8' },\n    second: { type: 'uint8' },\n  },\n  dateDay: {\n    wday: { type: 'uint8' },\n    day: { type: 'uint8' },\n    month: { type: 'uint8' },\n    year: { type: 'uint8' },\n  },\n  program: {\n    valves: { type: 'uint8[]', length: Math.ceil(deviceConfig.valveCount / 8) },\n    compote: { type: 'uint8' },\n    start: 'dateDay',\n  },\n  compoteDaily: {\n    days: { type: 'uint8' },\n    schedule: { type: 'uint8' },\n    volume: { type: 'uint16' },\n    washVolume: { type: 'uint16' },\n    dose: {\n      type: 'uint16[]',\n      length: deviceConfig.doseCount,\n    },\n  },\n  compote: {\n    daily: {\n      type: 'list',\n      length: deviceConfig.compoteDailyCount,\n      itemMeta: 'compoteDaily',\n    },\n  },\n  schedule: {\n    enable: { type: 'uint8' },\n    deviceId: { type: 'uint8' },\n    startTime: 'dayTime',\n    endTime: 'dayTime',\n  },\n  timer: {\n    enable: { type: 'uint8' },\n    program: { type: 'uint8' },\n    weekDays: { type: 'uint8' },\n    time: 'dayTime',\n  },\n  pump: {\n    minFlow: { type: 'uint16' },\n    startingTime: { type: 'uint16' },\n    pwmFlow: { type: 'uint16' },\n    pwm: { type: 'uint8' },\n    rate: { type: 'uint16' },\n  },\n  levelSensor: {\n    beepSeconds: { type: 'uint8' },\n  },\n  mixer: {\n    seconds: { type: 'uint16' },\n    washSeconds: { type: 'uint16' },\n    pwmSensor: { type: 'uint16' },\n    pwm: { type: 'uint8' },\n  },\n  dose: {\n    rate: { type: 'uint32' },\n    seconds: { type: 'uint16' },\n    pwmSensor: { type: 'uint16' },\n    pwm: { type: 'uint8' },\n  },\n  dateTime: {\n    second: { type: 'uint8' },\n    minute: { type: 'uint8' },\n    hour: { type: 'uint8' },\n    wday: { type: 'uint8' },\n    day: { type: 'uint8' },\n    month: { type: 'uint8' },\n    year: { type: 'uint8' },\n  },\n  deviceStatus: {\n    state: { type: 'uint8' },\n    cmdState: { type: 'uint8' },\n    valve: { type: 'uint8' },\n    flow: { type: 'uint16' },\n    volume: { type: 'uint16' },\n    totalVolume: { type: 'uint16' },\n    mix: { type: 'uint16' },\n  },\n  settings: {\n    program: {\n      type: 'list',\n      length: deviceConfig.programCount,\n      itemMeta: 'program',\n    },\n    compote: {\n      type: 'list',\n      length: deviceConfig.compoteCount,\n      itemMeta: 'compote',\n    },\n    schedule: {\n      type: 'list',\n      length: deviceConfig.scheduleCount,\n      itemMeta: 'schedule',\n    },\n    timer: {\n      type: 'list',\n      length: deviceConfig.timerCount,\n      itemMeta: 'timer',\n    },\n    pump: {\n      type: 'list',\n      length: deviceConfig.pumpCount,\n      itemMeta: 'pump',\n    },\n    levelSensor: {\n      type: 'list',\n      length: deviceConfig.levelSensorCount,\n      itemMeta: 'levelSensor',\n    },\n    mixer: {\n      type: 'list',\n      length: deviceConfig.mixerCount,\n      itemMeta: 'mixer',\n    },\n    dose: {\n      type: 'list',\n      length: deviceConfig.doseCount,\n      itemMeta: 'dose',\n    },\n  },\n  pinAssignment: {\n    pump: {\n      type: 'uint8[]',\n      length: deviceConfig.pumpCount,\n    },\n    flowSensor: {\n      type: 'uint8[]',\n      length: deviceConfig.pumpCount,\n    },\n    levelSensor: {\n      type: 'uint8[]',\n      length: deviceConfig.levelSensorCount,\n    },\n    mixer: {\n      type: 'uint8[]',\n      length: deviceConfig.mixerCount,\n    },\n    dose: {\n      type: 'uint8[]',\n      length: deviceConfig.doseCount,\n    },\n    doseMixer: {\n      type: 'uint8[]',\n      length: deviceConfig.doseCount,\n    },\n    valve: {\n      type: 'uint8[]',\n      length: deviceConfig.valveCount,\n    },\n  },\n};\n\nexport type DeviceRequestMeta = Record<keyof typeof DeviceRequestType, DeviceIOMeta | string>;\n\nexport const deviceRequestMeta: DeviceRequestMeta = {\n  fertigate: {\n    programId: { type: 'uint8' },\n  },\n  irrigate: {\n    programId: { type: 'uint8' },\n  },\n  wash: {\n    programId: { type: 'uint8' },\n  },\n  pumpIn: {\n    programId: { type: 'uint8' },\n  },\n  compote: {\n    programId: { type: 'uint8' },\n  },\n  washCompote: {\n    programId: { type: 'uint8' },\n  },\n  mix: {\n    mixerId: { type: 'uint8' },\n  },\n  mixDose: {\n    mixerId: { type: 'uint8' },\n  },\n  dose: {\n    programId: { type: 'uint8' },\n    doseId: { type: 'uint8' },\n  },\n  getProgram: {\n    index: { type: 'uint8' },\n  },\n  setProgram: {\n    index: { type: 'uint8' },\n    value: 'program',\n  },\n  getCompoteDaily: {\n    index: { type: 'uint8' },\n    dailyIndex: { type: 'uint8' },\n  },\n  setCompoteDaily: {\n    index: { type: 'uint8' },\n    dailyIndex: { type: 'uint8' },\n    value: 'compoteDaily',\n  },\n  getSchedule: {\n    index: { type: 'uint8' },\n  },\n  setSchedule: {\n    index: { type: 'uint8' },\n    value: 'schedule',\n  },\n  getTimer: {\n    index: { type: 'uint8' },\n  },\n  setTimer: {\n    index: { type: 'uint8' },\n    value: 'timer',\n  },\n  getPump: {\n    index: { type: 'uint8' },\n  },\n  setPump: {\n    index: { type: 'uint8' },\n    value: 'pump',\n  },\n  getMixer: {\n    index: { type: 'uint8' },\n  },\n  setMixer: {\n    index: { type: 'uint8' },\n    value: 'mixer',\n  },\n  getDose: {\n    index: { type: 'uint8' },\n  },\n  setDose: {\n    index: { type: 'uint8' },\n    value: 'dose',\n  },\n  getPinPump: {\n    index: { type: 'uint8' },\n  },\n  setPinPump: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinFlowSensor: {\n    index: { type: 'uint8' },\n  },\n  setPinFlowSensor: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinLevelSensor: {\n    index: { type: 'uint8' },\n  },\n  setPinLevelSensor: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinMixer: {\n    index: { type: 'uint8' },\n  },\n  setPinMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinDose: {\n    index: { type: 'uint8' },\n  },\n  setPinDose: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinDoseMixer: {\n    index: { type: 'uint8' },\n  },\n  setPinDoseMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getPinValve: {\n    index: { type: 'uint8' },\n  },\n  setPinValve: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getTime: 'empty',\n  setTime: 'dateTime',\n  getTemp: 'empty',\n  getStatus: 'empty',\n  getStatePump: {\n    index: { type: 'uint8' },\n  },\n  setStatePump: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getStateValve: {\n    index: { type: 'uint8' },\n  },\n  setStateValve: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getStateMixer: {\n    index: { type: 'uint8' },\n  },\n  setStateMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getStateDose: {\n    index: { type: 'uint8' },\n  },\n  setStateDose: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  getStateDoseMixer: {\n    index: { type: 'uint8' },\n  },\n  setStateDoseMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  resetError: {\n    fake: { type: 'uint8' },\n  },\n};\n\nexport type DeviceResponseMeta = Record<keyof typeof DeviceResponseType, DeviceIOMeta | string>;\n\nexport const deviceResponseMeta: DeviceResponseMeta = {\n  commandSuccess: {\n    code: { type: 'uint8' },\n  },\n  log: {\n    code: { type: 'uint8' },\n  },\n  status: 'deviceStatus',\n  error: {\n    code: { type: 'uint8' },\n  },\n  program: {\n    index: { type: 'uint8' },\n    value: 'program',\n  },\n  compoteDaily: {\n    index: { type: 'uint8' },\n    dailyIndex: { type: 'uint8' },\n    value: 'compoteDaily',\n  },\n  schedule: {\n    index: { type: 'uint8' },\n    value: 'schedule',\n  },\n  timer: {\n    index: { type: 'uint8' },\n    value: 'timer',\n  },\n  pump: {\n    index: { type: 'uint8' },\n    value: 'pump',\n  },\n  mixer: {\n    index: { type: 'uint8' },\n    value: 'mixer',\n  },\n  dose: {\n    index: { type: 'uint8' },\n    value: 'dose',\n  },\n  pinPump: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinFlowSensor: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinLevelSensor: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinDose: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinDoseMixer: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  pinValve: {\n    index: { type: 'uint8' },\n    value: { type: 'uint8' },\n  },\n  time: 'dateTime',\n  temp: {\n    value: { type: 'uint16' },\n  },\n  statePump: {\n    value: { type: 'uint8' },\n  },\n  stateValve: {\n    value: { type: 'uint8' },\n  },\n  stateMixer: {\n    value: { type: 'uint8' },\n  },\n  stateDose: {\n    value: { type: 'uint8' },\n  },\n  stateDoseMixer: {\n    value: { type: 'uint8' },\n  },\n};\n","import { Action } from '@ngrx/store';\nimport { DeviceRequest } from '../../auto/device-request';\nimport { ConnectStatus } from '../../model/connect-status';\nimport { DeviceResponse } from '../../auto/device-response';\n\nexport enum ConnectActionTypes {\n  CONNECT = '[Connect] Connect',\n  DISCONNECT = '[Connect] Disconnect',\n  SET_STATUS = '[Connect] Set status',\n  REQUEST = '[Connect] Request',\n  RESPONSE = '[Connect] Response',\n  ERROR = '[Connect] Error',\n}\n\nexport class ActionConnectConnect implements Action {\n  readonly type = ConnectActionTypes.CONNECT;\n\n  constructor() {\n  }\n}\n\nexport class ActionConnectDisconnect implements Action {\n  readonly type = ConnectActionTypes.DISCONNECT;\n\n  constructor() {\n  }\n}\n\nexport class ActionConnectSetStatus implements Action {\n  readonly type = ConnectActionTypes.SET_STATUS;\n\n  constructor(public readonly payload: ConnectStatus) {\n  }\n}\n\nexport class ActionConnectRequest<T extends DeviceRequest = DeviceRequest> implements Action {\n  readonly type = ConnectActionTypes.REQUEST;\n\n  constructor(public readonly payload: T) {\n  }\n}\n\nexport class ActionConnectResponse<T extends DeviceResponse = DeviceResponse> implements Action {\n  readonly type = ConnectActionTypes.RESPONSE;\n\n  constructor(public readonly payload: T) {\n  }\n}\n\nexport class ActionConnectError implements Action {\n  readonly type = ConnectActionTypes.ERROR;\n\n  constructor(public readonly payload: Error) {\n  }\n}\n\nexport type ConnectActions =\n  | ActionConnectConnect\n  | ActionConnectDisconnect\n  | ActionConnectSetStatus\n  | ActionConnectRequest\n  | ActionConnectResponse\n  | ActionConnectError\n  ;\n\nexport interface ConnectState {\n  status: ConnectStatus;\n}\n\nexport const initialConnectState: ConnectState = {\n  status: ConnectStatus.DISCONNECTED,\n};\n\nexport const selectorConnect = state => state.connect as ConnectState;\nexport const selectorConnectStatus = state => (state.connect as ConnectState).status;\n\nexport function connectReducer(\n  state: ConnectState = initialConnectState,\n  action: ConnectActions,\n): ConnectState {\n  switch (action.type) {\n    case ConnectActionTypes.CONNECT:\n      return { ...state, status: ConnectStatus.CONNECTING };\n    case ConnectActionTypes.DISCONNECT:\n      return { ...state, status: ConnectStatus.DISCONNECTING };\n    case ConnectActionTypes.SET_STATUS:\n      return { ...state, status: action.payload };\n    case ConnectActionTypes.REQUEST:\n      return { ...state };\n    case ConnectActionTypes.ERROR:\n      return { ...state, status: ConnectStatus.DISCONNECTED };\n    default:\n      return state;\n  }\n}\n","export default \"<cdk-virtual-scroll-viewport itemSize=\\\"120\\\" class=\\\"h-100 w-100\\\">\\n  <app-episode *cdkVirtualFor=\\\"let log of log$ | async; trackBy: trackByKey\\\" [episode]=\\\"log\\\">\\n  </app-episode>\\n</cdk-virtual-scroll-viewport>\\n\";","export default \"<mat-accordion *ngIf=\\\"config$ | async as config\\\">\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon svgIcon=\\\"bluetooth\\\"></mat-icon>\\n        &nbsp;Bluetooth\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{config.device?.name}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <button mat-button (click)=\\\"selectDevice()\\\">Select Device</button>\\n  </mat-expansion-panel>\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon svgIcon=\\\"database\\\"></mat-icon>\\n        &nbsp;Database\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <app-database-config\\n      [sizes]=\\\"databaseSizes$ | async\\\"\\n      [update]=\\\"updateDatabaseSizes$ | async\\\"\\n      (clear)=\\\"clearDb($event)\\\"\\n      (updateSizes)=\\\"updateDb()\\\"\\n    ></app-database-config>\\n  </mat-expansion-panel>\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon svgIcon=\\\"monitor\\\"></mat-icon>\\n        &nbsp;Monitor\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <app-monitor-config\\n      [config]=\\\"monitor$ | async\\\"\\n      (configChange)=\\\"onChange({monitor: $event})\\\"\\n    ></app-monitor-config>\\n  </mat-expansion-panel>\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon svgIcon=\\\"webcam\\\"></mat-icon>\\n        &nbsp;Access control\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <app-access-control-config\\n      [accessControl]=\\\"accessControl$ | async\\\"\\n      (accessControlChange)=\\\"onChange({accessControl: $event})\\\"\\n    ></app-access-control-config>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import { Injectable } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { concat, EMPTY, from, Observable, of } from 'rxjs';\nimport { debounceTime, exhaustMap, map, mergeMap, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport {\n  ActionConfigClearDatabase,\n  ActionConfigSetDatabaseSizes,\n  ActionConfigUpdate,\n  ConfigActionTypes,\n  selectorConfig,\n  selectorDatabaseSizes,\n} from './config.reducer';\nimport { LocalStorageService } from '../../services/storage/local-storage.service';\nimport { DbService } from '../../services/storage/db.service';\n\n@Injectable()\nexport class ConfigEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n    private readonly storage: LocalStorageService,\n    private readonly db: DbService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(ConfigActionTypes.INIT))\n      .pipe(switchMap(() => concat(\n        of(new ActionConfigUpdate(this.storage.loadConfig())),\n        this.store.pipe(select(selectorConfig))\n          .pipe(debounceTime(300))\n          .pipe(tap(state => this.storage.saveConfig(state)))\n          .pipe(mergeMap(() => EMPTY)),\n      )))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  updateSize(): Observable<Action> {\n    return this.actions$.pipe(ofType(ConfigActionTypes.UPDATE_DATABASE_SIZES))\n      .pipe(exhaustMap(() => from(this.db.getDatabaseSize())))\n      .pipe(map(sizes => new ActionConfigSetDatabaseSizes(sizes)))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  clear(): Observable<Action> {\n    return this.actions$.pipe(\n      ofType<ActionConfigClearDatabase>(ConfigActionTypes.CLEAR_DATABASE),\n      exhaustMap(action => from(this.db.clear(action.payload)).pipe(map(() => action.payload))),\n      withLatestFrom(this.store.pipe(select(selectorDatabaseSizes))),\n      map(([names, sizes]) => new ActionConfigSetDatabaseSizes(sizes.map(s =>\n        names.includes(s.name) ? { name: s.name, size: 0, count: 0 } : s))),\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'times',\n  pure: true,\n})\nexport class TimesPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    return {\n      * [Symbol.iterator]() {\n        for (let i = 0; i < value; i++) {\n          yield i;\n        }\n      },\n    };\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AccessControlComponent} from './access-control.component';\nimport {AccessControlRoutingModule} from './access-control-routing.module';\nimport {AccessControlStoreModule} from '../../store/access-control/access-control-store.module';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {EpisodeModule} from './episode/episode.module';\n\n@NgModule({\n  declarations: [\n    AccessControlComponent,\n  ],\n  exports: [\n    AccessControlComponent,\n  ],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    AccessControlRoutingModule,\n    AccessControlStoreModule,\n    EpisodeModule,\n  ],\n})\nexport class AccessControlModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wb3RlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { ActionConnectRequest } from '../../store/connect/connect.reducer';\nimport { Subject } from 'rxjs';\nimport { ConnectService } from '../../services/connect/connect.service';\nimport { defaultCompoteDaily, defaultProgram, defaultSchedule, defaultTimer } from '../../model/default-settings';\nimport { deviceConfig } from '../../model/device-config';\nimport { SelectIndexService } from '../../shared/select-index/select-index.service';\nimport { DeviceSimulateService } from './device-simulate.sevice';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { BrowserSerialService } from '../../platform/browser/serial/browser-serial.service';\nimport { ActionSettingsSync } from '../../store/settings/settings.reducer';\n\n@Component({\n  selector: 'app-dev',\n  templateUrl: './dev.component.html',\n  styleUrls: ['./dev.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DevComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly store: Store<any>,\n    private readonly connectBt: ConnectService,\n    private readonly selectIndexService: SelectIndexService,\n    private readonly deviceSimulateService: DeviceSimulateService,\n    private readonly serialService: BrowserSerialService,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  requestStatus() {\n    this.store.dispatch(new ActionConnectRequest({type: DeviceRequestType.getStatus, payload: {fake: 0}}));\n  }\n\n  discover() {\n    this.connectBt.discover({discover: true});\n  }\n\n  compote() {\n    this.store.dispatch(new ActionConnectRequest(\n      {type: DeviceRequestType.compote, payload: {programId: 0}}));\n  }\n\n  mixer() {\n    this.store.dispatch(new ActionConnectRequest(\n      {type: DeviceRequestType.mix, payload: {mixerId: 0}}));\n  }\n\n  getProgram() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        const raw = (this.connectBt as any).requestSerializer\n          .serialize({type: DeviceRequestType.getProgram, payload: {index}});\n        // console.log(raw);\n        this.store.dispatch(new ActionConnectRequest(\n          {type: DeviceRequestType.getProgram, payload: {index}}));\n      });\n  }\n\n  setProgram() {\n    this.selectIndexService.select({ count: deviceConfig.programCount, title: 'Select program' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest({\n          type: DeviceRequestType.setProgram,\n          payload: {index, value: defaultProgram(),},\n        }));\n      });\n  }\n\n  getCompote() {\n    this.selectIndexService.select({ count: deviceConfig.compoteCount, title: 'Select compote' })\n      .pipe(withLatestFrom(this.selectIndexService.select({ count: deviceConfig.compoteDailyCount, title: 'Select compote daily' })))\n      .subscribe(([index, dailyIndex]) => {\n        if (typeof index === 'undefined' || typeof dailyIndex === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          {type: DeviceRequestType.getCompoteDaily, payload: {index, dailyIndex}}));\n      });\n  }\n\n  setCompote() {\n    this.selectIndexService.select({ count: deviceConfig.compoteCount, title: 'Select compote' })\n      .pipe(withLatestFrom(this.selectIndexService.select({ count: deviceConfig.compoteDailyCount, title: 'Select compote daily' })))\n      .subscribe(([index, dailyIndex]) => {\n        if (typeof index === 'undefined' || typeof dailyIndex === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest({\n          type: DeviceRequestType.setCompoteDaily,\n          payload: {index, dailyIndex, value: defaultCompoteDaily()},\n        }));\n      });\n  }\n\n  getTimer() {\n    this.selectIndexService.select({ count: deviceConfig.timerCount, title: 'Select timer' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          {type: DeviceRequestType.getTimer, payload: {index}}));\n      });\n  }\n\n  setTimer() {\n    this.selectIndexService.select({ count: deviceConfig.timerCount, title: 'Select timer' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest({\n          type: DeviceRequestType.setTimer,\n          payload: {index, value: defaultTimer()},\n        }));\n      });\n  }\n\n  getSchedule() {\n    this.selectIndexService.select({ count: deviceConfig.scheduleCount, title: 'Select schedule' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest(\n          {type: DeviceRequestType.getSchedule, payload: {index}}));\n      });\n  }\n\n  setSchedule() {\n    this.selectIndexService.select({ count: deviceConfig.scheduleCount, title: 'Select schedule' })\n      .subscribe(index => {\n        if (typeof index === 'undefined') {\n          return;\n        }\n        this.store.dispatch(new ActionConnectRequest({\n          type: DeviceRequestType.setSchedule,\n          payload: {index,\n          value: defaultSchedule(),}\n        }));\n      });\n  }\n\n  simulate() {\n    this.deviceSimulateService.enable(!this.deviceSimulateService.enabled);\n  }\n\n  serialDiscover() {\n    this.serialService.discover();\n  }\n\n  serialConnect() {\n    this.serialService.connect(null);\n  }\n\n  syncSettings() {\n    this.store.dispatch(new ActionSettingsSync());\n  }\n\n  resetError() {\n    this.store.dispatch(new ActionConnectRequest({ type: DeviceRequestType.resetError, payload: { fake: 0 }}));\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsChangeName,\n  ActionSettingsChangeSchedule, ActionSettingsLoadProgram, ActionSettingsLoadSchedule,\n  ActionSettingsRemoveSchedule,\n  selectorNames,\n  selectorSchedules,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Schedule} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-schedule-list',\n  templateUrl: './schedule-list.component.html',\n  styleUrls: ['./schedule-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScheduleListComponent implements OnInit {\n  schedules$: Observable<Schedule[]>;\n  names$: Observable<string[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.schedules$ = this.store.pipe(select(selectorSchedules));\n    this.names$ = this.store.pipe(select(selectorNames('schedule')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadSchedule());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'schedule', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeSchedule({index, value}));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveSchedule(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {\n  ActionLogResetFilter,\n  ActionLogSetFilter,\n  ActionLogToggleExpandFilter,\n  ActionLogToggleFilter,\n  LogFilter,\n  selectorLogFilter\n} from '../../../store/log/log.reducer';\nimport {Observable} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport {first} from 'rxjs/operators';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-log-filter',\n  templateUrl: './log-filter.component.html',\n  styleUrls: ['./log-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LogFilterComponent implements OnInit {\n  filter$: Observable<LogFilter[]>;\n  private initialFilter: LogFilter[];\n\n  constructor(\n    private readonly store: Store<LogFilter[]>,\n    private readonly dialogRef: MatDialogRef<LogFilterComponent>,\n  ) {\n    this.filter$ = this.store.pipe(select(selectorLogFilter));\n    this.store.pipe(select(selectorLogFilter), first())\n      .subscribe(filter => this.initialFilter = filter);\n  }\n\n  ngOnInit() {\n  }\n\n  onSelect(line) {\n    this.store.dispatch(new ActionLogToggleFilter(line));\n  }\n\n  onExpand(line) {\n    this.store.dispatch(new ActionLogToggleExpandFilter(line));\n  }\n\n  onReset() {\n    this.store.dispatch(new ActionLogResetFilter());\n  }\n\n  onApply() {\n    this.dialogRef.close();\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n    setTimeout(() => this.store.dispatch(new ActionLogSetFilter(this.initialFilter)));\n  }\n\n  trackBy(index, item) {\n    return index;\n  }\n}\n","export default \"<div class=\\\"d-flex flex-column flex-nowrap\\\">\\n  <ng-container *ngIf=\\\"camshot\\\">\\n    <img [attr.src]=\\\"camshot.image\\\" width=\\\"64\\\" height=\\\"48\\\" class=\\\"flex-fill\\\"\\n    (click)=\\\"onClick()\\\"/>\\n  </ng-container>\\n  <div>\\n    {{key | date: 'HH:mm:ss'}}\\n  </div>\\n</div>\\n\";","export default \"<mat-nav-list>\\n  <a mat-list-item *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.route\\\">\\n    <mat-icon *ngIf=\\\"link.icon\\\" [svgIcon]=\\\"link.icon\\\"></mat-icon>\\n    &nbsp;\\n    {{link.title}}\\n  </a>\\n</mat-nav-list>\\n\";","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CompoteDaily} from '../../../../auto/struct';\nimport {Dose} from '../../../../auto/struct';\n\n@Component({\n  selector: 'app-compote-daily',\n  templateUrl: './compote-daily.component.html',\n  styleUrls: ['./compote-daily.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CompoteDailyComponent implements OnInit {\n  @Input() compoteDaily: CompoteDaily;\n  @Output() compoteDailyChange = new EventEmitter<CompoteDaily>();\n  @Input() soils: Dose[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.compoteDailyChange.next({...this.compoteDaily, ...changes});\n  }\n\n  onDoseChange(index, value) {\n    const dose = this.compoteDaily.dose.slice(0);\n    dose[index] = value;\n    this.onChange({dose});\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AccessControlConfigComponent} from './access-control-config.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [AccessControlConfigComponent],\n  exports: [AccessControlConfigComponent],\n  imports: [\n    CommonModule,\n    MatSlideToggleModule,\n  ],\n})\nexport class AccessControlConfigModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MockBluetoothService } from './mock-bluetooth.service';\nimport { DEVICE_CONNECT } from '../device-connect';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [{ provide: DEVICE_CONNECT, useClass: MockBluetoothService }],\n})\nexport class AppMockModule {\n}\n","export const deviceConfig = {\n  programCount: 4,\n  compoteCount: 2,\n  compoteDailyCount: 14,\n  scheduleCount: 4,\n  timerCount: 8,\n  devCount: 4,\n  pumpCount: 2,\n  flowSensorCount: 2,\n  mixerCount: 1,\n  doseCount: 4,\n  doseMixerCount: 4,\n  nameLength: 8,\n  valveCount: 24,\n  levelSensorCount: 2,\n  rtcCount: 1,\n  buttonCount: 0,\n};\n\nexport enum PumpType {\n  in,\n  out,\n}\n\nexport enum FlowSensorType {\n  in,\n  out,\n}\n\nexport enum LevelSensorType {\n  low,\n  high,\n}\n\nexport enum ButtonType {\n  up,\n  down,\n  left,\n  right,\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ProgramComponent} from './program.component';\r\nimport {BitsPipe} from './bits.pipe';\r\nimport {DateDayPipe} from './date-day.pipe';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n@NgModule({\r\n  declarations: [ProgramComponent, BitsPipe, DateDayPipe],\r\n  exports: [ProgramComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n  ],\r\n})\r\nexport class ProgramModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { AppBrowserModule } from './browser/browser.module';\nimport { AndroidModule } from './android/android.module';\nimport { AppMockModule } from './mock/mock.module';\n\n@NgModule({\n  imports: [\n    ...(environment.platform === 'browser'\n      ? [AppBrowserModule]\n      : environment.platform === 'android'\n        ? [AndroidModule]\n        : [AppMockModule]),\n  ],\n})\nexport class AppPlatformModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwaW4tc2VsZWN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { DeviceConnect } from '../../model/device-connect';\nimport { IDeviceConnect } from '../device-connect';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockBluetoothService implements IDeviceConnect {\n  private responseSubject = new Subject<ArrayBuffer>();\n\n  constructor() {\n  }\n\n  get response$(): Observable<ArrayBuffer> {\n    return this.responseSubject.asObservable();\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  discover(options?): Promise<DeviceConnect[]> {\n    const devices = [\n      {\n        name: 'device1',\n        type: 'ble',\n        address: 'address1-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id1-xxxxxxxxxxxxxxxxxxxx',\n        class: 1111,\n      },\n      {\n        name: 'device2',\n        type: 'ble',\n        address: 'address2-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id2-xxxxxxxxxxxxxxxxxxxx',\n        class: 2222,\n      },\n      {\n        name: 'device3',\n        type: 'ble',\n        address: 'address1-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id1-xxxxxxxxxxxxxxxxxxxx',\n        class: 1111,\n      },\n      {\n        name: 'device4',\n        type: 'ble',\n        address: 'address2-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id2-xxxxxxxxxxxxxxxxxxxx',\n        class: 2222,\n      },\n      {\n        name: 'device5',\n        type: 'ble',\n        address: 'address1-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id1-xxxxxxxxxxxxxxxxxxxx',\n        class: 1111,\n      },\n      {\n        name: 'device6',\n        type: 'ble',\n        address: 'address2-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id2-xxxxxxxxxxxxxxxxxxxx',\n        class: 2222,\n      },\n      {\n        name: 'device7',\n        type: 'ble',\n        address: 'address2-xxxxxxxxxxxxxxxxxxxx',\n        id: 'id2-xxxxxxxxxxxxxxxxxxxx',\n        class: 2222,\n      },\n    ];\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(devices), 1000);\n    });\n  }\n\n  async connect(device: DeviceConnect): Promise<void> {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, 1000);\n    });\n  }\n\n  disconnect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, 1000);\n    });\n  }\n\n  send(data: ArrayBuffer): Promise<void> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 1000);\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwdW1wLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Action } from '@ngrx/store';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport { ErrorCode } from '../../model/device-status';\nimport { appConfig } from '../../app-config';\n\nexport enum LogActionTypes {\n  INIT = '[Log] Init',\n  ADD = '[Log] Add',\n  RESET_FILTER = '[Log] Reset filter',\n  SET_FILTER = '[Log] Set filter',\n  TOGGLE_FILTER = '[Log] Toggle filter',\n  TOGGLE_EXPAND_FILTER = '[Log] Toggle expand filter',\n}\n\nexport class ActionLogInit implements Action {\n  readonly type = LogActionTypes.INIT;\n\n  constructor() {\n  }\n}\n\nexport class ActionLogAdd implements Action {\n  readonly type = LogActionTypes.ADD;\n\n  constructor(public readonly payload: LogItem) {\n  }\n}\n\nexport class ActionLogResetFilter implements Action {\n  readonly type = LogActionTypes.RESET_FILTER;\n\n  constructor() {\n  }\n}\n\nexport class ActionLogSetFilter implements Action {\n  readonly type = LogActionTypes.SET_FILTER;\n\n  constructor(public readonly payload: LogFilter[]) {\n  }\n}\n\nexport class ActionLogToggleFilter implements Action {\n  readonly type = LogActionTypes.TOGGLE_FILTER;\n\n  constructor(public readonly payload: LogFilter) {\n  }\n}\n\nexport class ActionLogToggleExpandFilter implements Action {\n  readonly type = LogActionTypes.TOGGLE_EXPAND_FILTER;\n\n  constructor(public readonly payload: LogFilter) {\n  }\n}\n\nexport type LogActions =\n  | ActionLogInit\n  | ActionLogAdd\n  | ActionLogResetFilter\n  | ActionLogSetFilter\n  | ActionLogToggleFilter\n  | ActionLogToggleExpandFilter\n  ;\n\nexport enum LogItemType {\n  connect,\n  disconnect,\n  response,\n  request,\n  error,\n}\n\nexport interface LogItem {\n  time: Date;\n  icon: string;\n  text: string;\n  type: LogItemType;\n  subType?: number;\n}\n\nexport interface LogFilter {\n  level: number;\n  selected: boolean;\n  title: string;\n  expandable: boolean;\n  expanded: boolean;\n  visible: boolean;\n  type: LogItemType;\n  subType?: number;\n}\n\nexport interface LogState {\n  items: LogItem[];\n  filteredItems: LogItem[];\n  filter: LogFilter[];\n  hasFilter: boolean;\n}\n\nexport const initialLogState: LogState = {\n  items: [],\n  filteredItems: [],\n  filter: getInitialFilter(),\n  hasFilter: false,\n};\n\nexport const selectorLog = state => state.log as LogState;\nexport const selectorLogItems = state => (state.log as LogState).items;\nexport const selectorLogFilter = state => (state.log as LogState).filter;\nexport const selectorLogHasFilter = state => (state.log as LogState).hasFilter;\nexport const selectorLogFilteredItems = state => (state.log as LogState).filteredItems;\n\nexport function logReducer(\n  state: LogState = initialLogState,\n  action: LogActions,\n): LogState {\n  switch (action.type) {\n    case LogActionTypes.ADD:\n      return addLog(state, action.payload);\n    case LogActionTypes.RESET_FILTER:\n      return resetFilter(state);\n    case LogActionTypes.SET_FILTER:\n      return setFilter(state, action.payload);\n    case LogActionTypes.TOGGLE_FILTER:\n      return toggleFilter(state, action.payload);\n    case LogActionTypes.TOGGLE_EXPAND_FILTER:\n      return toggleExpandFilter(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction addLog(state: LogState, item: LogItem): LogState {\n  const items = [item, ...state.items];\n  const filteredItems = isFiltered(item, state.filter) ? [item, ...state.filteredItems] : state.filteredItems;\n  if (items.length > appConfig.logMaxLength) {\n    const last = items.pop();\n    if (last === filteredItems[filteredItems.length - 1]) {\n      filteredItems.pop();\n    }\n  }\n  return { ...state, items, filteredItems };\n}\n\nfunction resetFilter(state: LogState): LogState {\n  const filter = getInitialFilter();\n  return {\n    ...state,\n    filter,\n    hasFilter: false,\n    filteredItems: getFilteredItems(state.items, filter),\n  };\n}\n\nfunction setFilter(state: LogState, filter: LogFilter[]): LogState {\n  return {\n    ...state,\n    filter,\n    hasFilter: hasFilter(filter),\n    filteredItems: getFilteredItems(state.items, filter),\n  };\n}\n\nfunction toggleFilter(state: LogState, filterRow: LogFilter): LogState {\n  const filter = state.filter.slice(0);\n  const index = filter.findIndex(f => f === filterRow);\n  const selected = !filterRow.selected;\n  let level = filterRow.level;\n  filter[index] = { ...filterRow, selected };\n  for (let i = index + 1; i < filter.length; i++) {\n    const row = filter[i];\n    if (row.level <= level) {\n      break;\n    }\n    filter[i] = { ...row, selected };\n  }\n  if (level) {\n    for (let i = index - 1; i >= 0 && level; i--) {\n      const row = filter[i];\n      if (row.level >= level) {\n        continue;\n      }\n      let sel = filter[i + 1].selected;\n      if (sel !== null) {\n        for (let j = i + 2; j < filter.length; j++) {\n          if (filter[j].level < level) {\n            break;\n          }\n          if (sel !== filter[j].selected) {\n            sel = null;\n            break;\n          }\n        }\n      }\n      if (row.selected !== sel) {\n        filter[i] = { ...row, selected: sel };\n      }\n      level--;\n    }\n  }\n  return {\n    ...state,\n    filter,\n    hasFilter: hasFilter(filter),\n    filteredItems: getFilteredItems(state.items, filter),\n  };\n}\n\nfunction toggleExpandFilter(state: LogState, filterRow: LogFilter): LogState {\n  const filter = state.filter.slice(0);\n  const index = filter.findIndex(f => f === filterRow);\n  const expanded = !filterRow.expanded;\n  const level = filterRow.level + 1;\n  filter[index] = { ...filterRow, expanded };\n  for (let i = index + 1; i < filter.length; i++) {\n    const row = filter[i];\n    if (row.level < level) {\n      break;\n    }\n    filter[i] = { ...row, visible: expanded, expanded };\n  }\n  return {\n    ...state,\n    filter,\n    hasFilter: hasFilter(filter),\n    filteredItems: getFilteredItems(state.items, filter),\n  };\n}\n\nfunction getFilteredItems(items: LogItem[], filter: LogFilter[]): LogItem[] {\n  return items.filter(i => isFiltered(i, filter));\n}\n\nfunction isFiltered(item: LogItem, filter: LogFilter[]): boolean {\n  const row = filter.find(f => f.type === item.type && f.subType === item.subType);\n  return !row || row.selected;\n}\n\nfunction enumFilter(level, title, enumType, type): LogFilter[] {\n  return [\n    {\n      level,\n      title,\n      selected: true,\n      expandable: true,\n      expanded: true,\n      visible: true,\n      type,\n    },\n    ...Object.keys(enumType)\n      .filter(key => isNaN(+key))\n      .map(key => ({\n        level: level + 1,\n        title: getFilterTitle(key),\n        selected: true,\n        expandable: false,\n        expanded: true,\n        visible: true,\n        type,\n        subType: enumType[key],\n      })),\n  ];\n}\n\nfunction getInitialFilter(): LogFilter[] {\n  return [\n    {\n      level: 0,\n      title: 'Bluetooth',\n      selected: true,\n      expandable: true,\n      expanded: true,\n      visible: true,\n      type: LogItemType.connect,\n    },\n    {\n      level: 1,\n      title: 'Connect',\n      selected: true,\n      expandable: false,\n      expanded: true,\n      visible: true,\n      type: LogItemType.connect,\n    },\n    {\n      level: 1,\n      title: 'Disconnect',\n      selected: true,\n      expandable: false,\n      expanded: true,\n      visible: true,\n      type: LogItemType.disconnect,\n    },\n    ...enumFilter(1, 'Device Request', DeviceRequestType, LogItemType.request),\n    ...enumFilter(1, 'Device Response', DeviceResponseType, LogItemType.response),\n    ...enumFilter(0, 'Errors', ErrorCode, LogItemType.error),\n  ];\n}\n\nfunction hasFilter(filter) {\n  return !filter.every(f => f.selected);\n}\n\nfunction getFilterTitle(str) {\n  return (str.slice(0, 1).toUpperCase() + str.slice(1))\n    .split(/(?=[A-Z])/)\n    .join(' ');\n}\n","import { ChangeDetectionStrategy, Component, Inject, Input, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SelectIndexParams } from './select-index-params';\n\n@Component({\n  selector: 'app-select-index',\n  templateUrl: './select-index.component.html',\n  styleUrls: ['./select-index.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectIndexComponent implements OnInit {\n  @Input() count: number;\n  @Input() index: number;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<SelectIndexComponent, number | void>,\n    @Inject(MAT_DIALOG_DATA) private readonly data: SelectIndexParams,\n  ) {\n    this.count = data.count;\n    this.index = 0;\n  }\n\n  ngOnInit() {\n  }\n\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  onSelect() {\n    this.dialogRef.close(this.index);\n  }\n\n  onChange(value) {\n    this.index = value;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYWxpYnJhdGUtZG9zZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {DevComponent} from '../../components/dev/dev.component';\n\nconst routes: Routes = [\n  {\n    path: 'dev',\n    component: DevComponent,\n    data: {\n      title: 'Development',\n      actions: ['menu', 'bt', 'sync'],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DevRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb25pdG9yLWNvbmZpZy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<mat-accordion>\\n  <mat-expansion-panel *ngFor=\\\"let mixer of mixers$ | async; let index = index; trackBy: trackByIndex\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        #{{index + 1}}\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        {{(names$ | async)[index]}}\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n    <ng-template matExpansionPanelContent>\\n      <app-mixer\\n        [mixer]=\\\"mixer\\\"\\n        [name]=\\\"(names$ | async)[index]\\\"\\n        (mixerChange)=\\\"onChange(index, $event)\\\"\\n        (nameChange)=\\\"onNameChange(index, $event)\\\"\\n      ></app-mixer>\\n    </ng-template>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MonitorConfig} from '../../../store/config/config.reducer';\n\n@Component({\n  selector: 'app-monitor-config',\n  templateUrl: './monitor-config.component.html',\n  styleUrls: ['./monitor-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MonitorConfigComponent implements OnInit {\n  @Input() config: MonitorConfig;\n  @Output() configChange = new EventEmitter<MonitorConfig>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onChange(changes) {\n    this.configChange.emit({...this.config, ...changes});\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AccessControlService} from '../../../services/access-control/access-control.service';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\ndeclare var cv: any;\n\n@Component({\n  selector: 'app-dev-access-control',\n  templateUrl: './dev-access-control.component.html',\n  styleUrls: ['./dev-access-control.component.scss'],\n})\nexport class DevAccessControlComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly accessControlService: AccessControlService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.accessControlService.frame$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(frame => {\n        cv.imshow('canvasInput', frame);\n      });\n    this.accessControlService.strategy.frame$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(frame => {\n        cv.imshow('canvasOutput', frame);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n}\n","export default \"<h1 mat-dialog-title>Select Bluetooth device</h1>\\n<mat-dialog-content>\\n  <mat-selection-list [compareWith]=\\\"compareWith\\\">\\n    <ng-container *ngIf=\\\"devices; else loading\\\">\\n      <ng-container *ngFor=\\\"let device of devices\\\">\\n        <mat-list-option [value]=\\\"device\\\">\\n          {{device.name}}\\n          {{device.address}}\\n          {{device.id}}\\n          {{device.class}}\\n        </mat-list-option>\\n        <mat-divider></mat-divider>\\n      </ng-container>\\n    </ng-container>\\n  </mat-selection-list>\\n</mat-dialog-content>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onCancel()\\\" cdkFocusInitial>Cancel</button>\\n  <button mat-button (click)=\\\"onSelect()\\\"\\n    [disabled]=\\\"!selectionList?.selectedOptions.selected.length\\\">Select\\n  </button>\\n</div>\\n<ng-template #loading>\\n  <mat-spinner></mat-spinner>\\n</ng-template>\\n\";","export enum DeviceState {\n  idle = 0,\n  fertigate,\n  pumpIn,\n  irrigate,\n  wash,\n  compote,\n  washCompote,\n  mixer,\n  dose,\n  doseMixer,\n  error = 0xff,\n}\n\nexport enum FertigateState {\n  pumpIn,\n  mixDose,\n  dose,\n  mix,\n  irrigate,\n  irrigateFinish,\n  washPumpIn,\n  washMix,\n  wash,\n  done,\n}\n\nexport interface DeviceStatus {\n  state: number;\n  cmdState: number;\n  valve: number;\n  flow: number;\n  volume: number;\n  totalVolume: number;\n  mix: number;\n  dose: number;\n}\n\nexport enum ErrorCode {\n  pumpIn = 1,\n  dose,\n  pumpOut,\n  pumpOutLast,\n  sensorOut,\n  io,\n  badCmdState,\n  lowWaterLevel,\n  highWaterLevel,\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChooseDialogComponent } from './choose-dialog.component';\nimport { ChooseDialogService } from './choose-dialog.service';\nimport { PipesModule } from '../../pipes/pipes.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ChooseDialogComponent],\n  entryComponents: [ChooseDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    PipesModule,\n  ],\n  providers: [ChooseDialogService],\n})\nexport class ChooseDialogModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {\n  ActionSettingsAddCompoteDaily,\n  ActionSettingsChangeCompote, ActionSettingsChangeCompoteDaily,\n  ActionSettingsChangeName, ActionSettingsLoadCompote, ActionSettingsLoadCompoteDaily,\n  ActionSettingsRemoveCompote,\n  selectorCompotes,\n  selectorNames,\n} from '../../../store/settings/settings.reducer';\nimport {Observable} from 'rxjs';\nimport {Compote} from '../../../auto/struct';\n\n@Component({\n  selector: 'app-compote-list',\n  templateUrl: './compote-list.component.html',\n  styleUrls: ['./compote-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CompoteListComponent implements OnInit {\n  compotes$: Observable<Compote[]>;\n  soils$: Observable<string[]>;\n  names$: Observable<string[]>;\n\n  constructor(\n    private readonly store: Store<any>,\n  ) {\n    this.compotes$ = this.store.pipe(select(selectorCompotes));\n    this.soils$ = this.store.pipe(select(selectorNames('dose')));\n    this.names$ = this.store.pipe(select(selectorNames('compote')));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ActionSettingsLoadCompote());\n  }\n\n  onNameChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeName({key: 'compote', index, value}));\n  }\n\n  onChange(index, value) {\n    this.store.dispatch(new ActionSettingsChangeCompote({index, value}));\n  }\n\n  onDailyChange(index, daily: {index, value}) {\n    this.store.dispatch(new ActionSettingsChangeCompoteDaily({\n      index, dailyIndex: daily.index, value: daily.value }));\n  }\n\n  onRemove(index) {\n    this.store.dispatch(new ActionSettingsRemoveCompote(index));\n  }\n\n  onAddDaily(index) {\n    this.store.dispatch(new ActionSettingsAddCompoteDaily(index));\n  }\n\n  trackByIndex(index, item) {\n    return index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CamshotSliderComponent } from './camshot-slider.component';\nimport {CamshotSliderService} from './camshot-slider.service';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [CamshotSliderComponent],\n  entryComponents: [CamshotSliderComponent],\n  providers: [CamshotSliderService],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n  ]\n})\nexport class CamshotSliderModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYWxpYnJhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aW1lci5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"app-episode {\\n  width: 100%;\\n  height: 120px;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxhY2Nlc3MtY29udHJvbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6ImFjY2Vzcy1jb250cm9sLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLWVwaXNvZGUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMjBweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport { Action, select, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { concat, EMPTY, from, Observable, of, range } from 'rxjs';\nimport { concatAll, debounceTime, filter, map, mergeMap, switchMap, take, tap, withLatestFrom } from 'rxjs/operators';\nimport {\n  ActionSettingsChangeCompoteDaily,\n  ActionSettingsChangeDose,\n  ActionSettingsChangeMixer, ActionSettingsChangePinAssignment,\n  ActionSettingsChangeProgram,\n  ActionSettingsChangePump,\n  ActionSettingsChangeSchedule,\n  ActionSettingsChangeTimer,\n  ActionSettingsSyncEnd,\n  ActionSettingsUpdate,\n  selectorCompoteDaily,\n  selectorDose,\n  selectorMixer,\n  selectorPinDose,\n  selectorPinDoseMixer,\n  selectorPinFlowSensor,\n  selectorPinMixer,\n  selectorPinPump,\n  selectorProgram,\n  selectorPump,\n  selectorSchedule,\n  selectorSettings,\n  selectorTimer,\n  SettingsActionTypes,\n} from './settings.reducer';\nimport { LocalStorageService } from '../../services/storage/local-storage.service';\nimport { DeviceRequestType } from '../../model/device-request-type';\nimport { DeviceResponseType } from '../../model/device-response-type';\nimport { deviceConfig } from '../../model/device-config';\nimport { ConnectService } from '../../services/connect/connect.service';\nimport { ActionConnectRequest } from '../connect/connect.reducer';\n\n@Injectable()\nexport class SettingsEffects {\n  constructor(\n    private readonly actions$: Actions<Action>,\n    private readonly store: Store<any>,\n    private readonly storage: LocalStorageService,\n    private readonly connectBt: ConnectService,\n  ) {\n  }\n\n  @Effect({ dispatch: true })\n  init(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.INIT))\n      .pipe(switchMap(() => concat(\n        of(new ActionSettingsUpdate(this.storage.loadSettings())),\n        this.store.pipe(select(selectorSettings))\n          .pipe(debounceTime(300))\n          .pipe(tap(state => this.storage.saveSettings(state)))\n          .pipe(mergeMap(() => EMPTY)),\n      )))\n      ;\n  }\n\n  @Effect({ dispatch: false })\n  sync(): Observable<any> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.SYNC))\n      .pipe(withLatestFrom(this.store.pipe(select(selectorSettings))))\n      .pipe(filter(([action, state]) => !state.sync))\n      .pipe(switchMap(([action, state]) => concat(\n        this.syncItems(\n          selectorProgram,\n          DeviceRequestType.getProgram,\n          DeviceRequestType.setProgram,\n          DeviceResponseType.program,\n          deviceConfig.programCount,\n        ),\n        ...state.settings.compote.map((compote, id) =>\n          this.syncItems(\n            selectorCompoteDaily(id),\n            DeviceRequestType.getCompoteDaily,\n            DeviceRequestType.setCompoteDaily,\n            DeviceResponseType.compoteDaily,\n            deviceConfig.compoteDailyCount,\n            { id },\n          )),\n        this.syncItems(\n          selectorTimer,\n          DeviceRequestType.getTimer,\n          DeviceRequestType.setTimer,\n          DeviceResponseType.timer,\n          deviceConfig.timerCount,\n        ),\n        this.syncItems(\n          selectorSchedule,\n          DeviceRequestType.getSchedule,\n          DeviceRequestType.setSchedule,\n          DeviceResponseType.schedule,\n          deviceConfig.scheduleCount,\n        ),\n        this.syncItems(\n          selectorPump,\n          DeviceRequestType.getPump,\n          DeviceRequestType.setPump,\n          DeviceResponseType.pump,\n          deviceConfig.pumpCount,\n        ),\n        this.syncItems(\n          selectorMixer,\n          DeviceRequestType.getMixer,\n          DeviceRequestType.setMixer,\n          DeviceResponseType.mixer,\n          deviceConfig.mixerCount,\n        ),\n        this.syncItems(\n          selectorDose,\n          DeviceRequestType.getDose,\n          DeviceRequestType.setDose,\n          DeviceResponseType.dose,\n          deviceConfig.doseCount,\n        ),\n        this.syncItems(\n          selectorPinPump,\n          DeviceRequestType.getPinPump,\n          DeviceRequestType.setPinPump,\n          DeviceResponseType.pinPump,\n          deviceConfig.pumpCount,\n        ),\n        this.syncItems(\n          selectorPinFlowSensor,\n          DeviceRequestType.getPinFlowSensor,\n          DeviceRequestType.setPinFlowSensor,\n          DeviceResponseType.pinFlowSensor,\n          deviceConfig.pumpCount,\n        ),\n        this.syncItems(\n          selectorPinMixer,\n          DeviceRequestType.getPinMixer,\n          DeviceRequestType.setPinMixer,\n          DeviceResponseType.pinMixer,\n          deviceConfig.mixerCount,\n        ),\n        this.syncItems(\n          selectorPinDose,\n          DeviceRequestType.getPinDose,\n          DeviceRequestType.setPinDose,\n          DeviceResponseType.pinDose,\n          deviceConfig.doseCount,\n        ),\n        this.syncItems(\n          selectorPinDoseMixer,\n          DeviceRequestType.getPinDoseMixer,\n          DeviceRequestType.setPinDoseMixer,\n          DeviceResponseType.pinDoseMixer,\n          deviceConfig.doseCount,\n        ),\n        of(new ActionSettingsSyncEnd()),\n      )))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangePump(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangePump>(SettingsActionTypes.CHANGE_PUMP))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setPump,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadPump(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_PUMP))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.pumpCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPump,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeMixer(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeMixer>(SettingsActionTypes.CHANGE_MIXER))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setMixer,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadMixer(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_MIXER))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.mixerCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getMixer,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeDose(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeDose>(SettingsActionTypes.CHANGE_DOSE))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setDose,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadDose(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_DOSE))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.doseCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getDose,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeProgram(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeProgram>(SettingsActionTypes.CHANGE_PROGRAM))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setProgram,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadProgram(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_PROGRAM))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.programCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getProgram,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeCompote(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeCompoteDaily>(SettingsActionTypes.CHANGE_COMPOTE_DAILY))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setCompoteDaily,\n          payload,\n        }))\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadCompote(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_COMPOTE))\n      .pipe(switchMap((): Observable<Action> => from([\n        ...([].concat(...(new Array(deviceConfig.compoteCount).fill(0)\n            .map((x, index) =>\n              new Array(deviceConfig.compoteDailyCount).fill(0)\n                .map((x, dailyIndex) => new ActionConnectRequest({\n                  type: DeviceRequestType.getCompoteDaily,\n                  payload: {\n                    index,\n                    dailyIndex,\n                  },\n                }))\n            )\n        )))\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeTimer(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeTimer>(SettingsActionTypes.CHANGE_TIMER))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setTimer,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadTimer(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_TIMER))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.timerCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getTimer,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangeSchedule(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangeSchedule>(SettingsActionTypes.CHANGE_SCHEDULE))\n      .pipe(debounceTime(1000))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: DeviceRequestType.setSchedule,\n          payload,\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadSchedule(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_SCHEDULE))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.scheduleCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getSchedule,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  @Effect({ dispatch: true })\n  onChangePin(): Observable<any> {\n    return this.actions$.pipe(ofType<ActionSettingsChangePinAssignment>(SettingsActionTypes.CHANGE_PIN_ASSIGNMENT))\n      .pipe(switchMap(({ payload }) =>\n        of(new ActionConnectRequest({\n          type: this.keyToCmd(payload.key),\n          payload: {\n            index: payload.index,\n            value: payload.value,\n          },\n        })),\n      ));\n  }\n\n  @Effect({ dispatch: true })\n  loadPinAssignment(): Observable<Action> {\n    return this.actions$.pipe(ofType(SettingsActionTypes.LOAD_PIN_ASSIGNMENT))\n      .pipe(switchMap(() => from([\n        ...(new Array(deviceConfig.pumpCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinPump,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.valveCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinValve,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.doseCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinDose,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.doseMixerCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinDoseMixer,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.flowSensorCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinFlowSensor,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.levelSensorCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinLevelSensor,\n              payload: {\n                index,\n              },\n            }))\n        ),\n        ...(new Array(deviceConfig.mixerCount).fill(0)\n            .map((x, index) => new ActionConnectRequest({\n              type: DeviceRequestType.getPinMixer,\n              payload: {\n                index,\n              },\n            }))\n        ),\n      ])))\n      ;\n  }\n\n  private keyToCmd(key: string) {\n    switch(key) {\n      case 'pump': return DeviceRequestType.setPinPump;\n      case 'valve': return DeviceRequestType.setPinValve;\n      case 'flowSensor': return DeviceRequestType.setPinFlowSensor;\n      case 'levelSensor': return DeviceRequestType.setPinLevelSensor;\n      case 'mixer': return DeviceRequestType.setPinMixer;\n      case 'doseMixer': return DeviceRequestType.setPinDoseMixer;\n      case 'dose': return DeviceRequestType.setPinDose;\n    }\n  }\n\n  private syncItems(\n    selector,\n    requestGet: DeviceRequestType,\n    requestSet: DeviceRequestType,\n    response: DeviceResponseType,\n    count: number,\n    payload = null,\n  ) {\n    return range(0, count)\n      .pipe(map(i => this.syncItem(selector, requestGet, requestSet, response, i, payload)))\n      .pipe(concatAll());\n  }\n\n  private syncItem(\n    selector,\n    requestGet: DeviceRequestType,\n    requestSet: DeviceRequestType,\n    response: DeviceResponseType,\n    index: number,\n    payload = null,\n  ) {\n    return from(this.connectBt.send({ type: requestGet, payload: { index } } as any))\n      .pipe(mergeMap(() => this.connectBt.response$))\n      .pipe(take(1))\n      .pipe(filter(r => r.type === response))\n      .pipe(withLatestFrom(this.store.pipe(select(selector(index)))))\n      .pipe(mergeMap(([deviceValue, value]) => {\n        if (JSON.stringify(deviceValue) === JSON.stringify(value)) {\n          return EMPTY;\n        }\n        return of(value);\n      }))\n      .pipe(mergeMap((value) =>\n        from(this.connectBt.send({ type: requestSet, payload: { index, value, ...payload } } as any)),\n      ))\n      ;\n  }\n}\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/dataZoom';\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nif (environment.platform === 'android') {\n  document.addEventListener(\n    'deviceready',\n    () => {\n      bootstrap();\n    },\n    false,\n  );\n} else {\n  bootstrap();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err.message, err));\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-camshots',\n  templateUrl: './camshots.component.html',\n  styleUrls: ['./camshots.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CamshotsComponent implements OnInit {\n  @Input() keys;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  trackByKey(index, key) {\n    return key;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TimerComponent} from './timer.component';\nimport {DayTimeModule} from '../../../../shared/day-time/day-time.module';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [TimerComponent],\n  exports: [TimerComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    DayTimeModule,\n  ],\n})\nexport class TimerModule {\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TimerListComponent} from './timer-list.component';\r\nimport {TimerModule} from './timer/timer.module';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [TimerListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TimerModule,\r\n  ],\r\n})\r\nexport class TimerListModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}